// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace IntelMKL.LP64
{
    [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
    public unsafe delegate int InitStreamPtr(int method, global::System.IntPtr stream, int n, uint* @params);

    [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
    public unsafe delegate int SBRngPtr(global::System.IntPtr stream, int n, float* r, float a, float b);

    [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
    public unsafe delegate int DBRngPtr(global::System.IntPtr stream, int n, double* r, double a, double b);

    [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
    public unsafe delegate int IBRngPtr(global::System.IntPtr stream, int n, uint* r);

    /// <summary>********* Pointers to callback functions for abstract streams ************</summary>
    [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
    public unsafe delegate int IUpdateFuncPtr(global::System.IntPtr stream, int* n, uint* ibuf, int* nmin, int* nmax, int* idx);

    [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
    public unsafe delegate int DUpdateFuncPtr(global::System.IntPtr stream, int* n, double* dbuf, int* nmin, int* nmax, int* idx);

    [SuppressUnmanagedCodeSecurity, UnmanagedFunctionPointer(global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
    public unsafe delegate int SUpdateFuncPtr(global::System.IntPtr stream, int* n, float* sbuf, int* nmin, int* nmax, int* idx);

    public unsafe partial struct VSLBRngProperties
    {
        [StructLayout(LayoutKind.Explicit, Size = 56)]
        public partial struct __Internal
        {
            [FieldOffset(0)]
            internal int StreamStateSize;

            [FieldOffset(4)]
            internal int NSeeds;

            [FieldOffset(8)]
            internal int IncludesZero;

            [FieldOffset(12)]
            internal int WordSize;

            [FieldOffset(16)]
            internal int NBits;

            [FieldOffset(24)]
            internal global::System.IntPtr InitStream;

            [FieldOffset(32)]
            internal global::System.IntPtr sBRng;

            [FieldOffset(40)]
            internal global::System.IntPtr dBRng;

            [FieldOffset(48)]
            internal global::System.IntPtr iBRng;

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="??0_VSLBRngProperties@@QEAA@AEBU0@@Z")]
            internal static extern global::System.IntPtr cctor(global::System.IntPtr instance, global::System.IntPtr _0);
        }

        private VSLBRngProperties.__Internal __instance;
        internal VSLBRngProperties.__Internal __Instance { get { return __instance; } }

        internal static global::IntelMKL.LP64.VSLBRngProperties __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
        {
            return new global::IntelMKL.LP64.VSLBRngProperties(native.ToPointer(), skipVTables);
        }

        internal static global::IntelMKL.LP64.VSLBRngProperties __CreateInstance(global::IntelMKL.LP64.VSLBRngProperties.__Internal native, bool skipVTables = false)
        {
            return new global::IntelMKL.LP64.VSLBRngProperties(native, skipVTables);
        }

        private VSLBRngProperties(global::IntelMKL.LP64.VSLBRngProperties.__Internal native, bool skipVTables = false)
            : this()
        {
            __instance = native;
        }

        private VSLBRngProperties(void* native, bool skipVTables = false) : this()
        {
            __instance = *(global::IntelMKL.LP64.VSLBRngProperties.__Internal*) native;
        }

        public VSLBRngProperties(global::IntelMKL.LP64.VSLBRngProperties _0)
            : this()
        {
            var ____arg0 = _0.__Instance;
            var __arg0 = new global::System.IntPtr(&____arg0);
            fixed (__Internal* __instancePtr = &__instance)
            {
                __Internal.cctor(new global::System.IntPtr(__instancePtr), __arg0);
            }
        }
    }

    public unsafe partial class mkl_vsl_functions
    {
        public partial struct __Internal
        {
            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vdRngCauchy")]
            internal static extern int VdRngCauchy(int _0, global::System.IntPtr _1, int _2, double* _3, double _4, double _5);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsRngCauchy")]
            internal static extern int VsRngCauchy(int _0, global::System.IntPtr _1, int _2, float* _3, float _4, float _5);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vdRngUniform")]
            internal static extern int VdRngUniform(int _0, global::System.IntPtr _1, int _2, double* _3, double _4, double _5);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsRngUniform")]
            internal static extern int VsRngUniform(int _0, global::System.IntPtr _1, int _2, float* _3, float _4, float _5);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vdRngGaussian")]
            internal static extern int VdRngGaussian(int _0, global::System.IntPtr _1, int _2, double* _3, double _4, double _5);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsRngGaussian")]
            internal static extern int VsRngGaussian(int _0, global::System.IntPtr _1, int _2, float* _3, float _4, float _5);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vdRngGaussianMV")]
            internal static extern int VdRngGaussianMV(int _0, global::System.IntPtr _1, int _2, double* _3, int _4, int _5, double* _6, double* _7);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsRngGaussianMV")]
            internal static extern int VsRngGaussianMV(int _0, global::System.IntPtr _1, int _2, float* _3, int _4, int _5, float* _6, float* _7);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vdRngExponential")]
            internal static extern int VdRngExponential(int _0, global::System.IntPtr _1, int _2, double* _3, double _4, double _5);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsRngExponential")]
            internal static extern int VsRngExponential(int _0, global::System.IntPtr _1, int _2, float* _3, float _4, float _5);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vdRngLaplace")]
            internal static extern int VdRngLaplace(int _0, global::System.IntPtr _1, int _2, double* _3, double _4, double _5);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsRngLaplace")]
            internal static extern int VsRngLaplace(int _0, global::System.IntPtr _1, int _2, float* _3, float _4, float _5);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vdRngWeibull")]
            internal static extern int VdRngWeibull(int _0, global::System.IntPtr _1, int _2, double* _3, double _4, double _5, double _6);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsRngWeibull")]
            internal static extern int VsRngWeibull(int _0, global::System.IntPtr _1, int _2, float* _3, float _4, float _5, float _6);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vdRngRayleigh")]
            internal static extern int VdRngRayleigh(int _0, global::System.IntPtr _1, int _2, double* _3, double _4, double _5);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsRngRayleigh")]
            internal static extern int VsRngRayleigh(int _0, global::System.IntPtr _1, int _2, float* _3, float _4, float _5);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vdRngLognormal")]
            internal static extern int VdRngLognormal(int _0, global::System.IntPtr _1, int _2, double* _3, double _4, double _5, double _6, double _7);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsRngLognormal")]
            internal static extern int VsRngLognormal(int _0, global::System.IntPtr _1, int _2, float* _3, float _4, float _5, float _6, float _7);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vdRngGumbel")]
            internal static extern int VdRngGumbel(int _0, global::System.IntPtr _1, int _2, double* _3, double _4, double _5);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsRngGumbel")]
            internal static extern int VsRngGumbel(int _0, global::System.IntPtr _1, int _2, float* _3, float _4, float _5);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vdRngGamma")]
            internal static extern int VdRngGamma(int _0, global::System.IntPtr _1, int _2, double* _3, double _4, double _5, double _6);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsRngGamma")]
            internal static extern int VsRngGamma(int _0, global::System.IntPtr _1, int _2, float* _3, float _4, float _5, float _6);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vdRngBeta")]
            internal static extern int VdRngBeta(int _0, global::System.IntPtr _1, int _2, double* _3, double _4, double _5, double _6, double _7);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsRngBeta")]
            internal static extern int VsRngBeta(int _0, global::System.IntPtr _1, int _2, float* _3, float _4, float _5, float _6, float _7);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="viRngBernoulli")]
            internal static extern int ViRngBernoulli(int _0, global::System.IntPtr _1, int _2, int* _3, double _4);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="viRngUniform")]
            internal static extern int ViRngUniform(int _0, global::System.IntPtr _1, int _2, int* _3, int _4, int _5);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="viRngUniformBits")]
            internal static extern int ViRngUniformBits(int _0, global::System.IntPtr _1, int _2, uint* _3);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="viRngUniformBits32")]
            internal static extern int ViRngUniformBits32(int _0, global::System.IntPtr _1, int _2, uint* _3);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="viRngUniformBits64")]
            internal static extern int ViRngUniformBits64(int _0, global::System.IntPtr _1, int _2, ulong* _3);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="viRngGeometric")]
            internal static extern int ViRngGeometric(int _0, global::System.IntPtr _1, int _2, int* _3, double _4);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="viRngBinomial")]
            internal static extern int ViRngBinomial(int _0, global::System.IntPtr _1, int _2, int* _3, int _4, double _5);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="viRngHypergeometric")]
            internal static extern int ViRngHypergeometric(int _0, global::System.IntPtr _1, int _2, int* _3, int _4, int _5, int _6);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="viRngNegbinomial")]
            internal static extern int ViRngNegbinomial(int _0, global::System.IntPtr _1, int _2, int* _3, double _4, double _5);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="viRngNegBinomial")]
            internal static extern int ViRngNegBinomial(int _0, global::System.IntPtr _1, int _2, int* _3, double _4, double _5);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="viRngPoisson")]
            internal static extern int ViRngPoisson(int _0, global::System.IntPtr _1, int _2, int* _3, double _4);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="viRngPoissonV")]
            internal static extern int ViRngPoissonV(int _0, global::System.IntPtr _1, int _2, int* _3, double* _4);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslNewStream")]
            internal static extern int VslNewStream(global::System.IntPtr _0, int _1, uint _2);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslNewStreamEx")]
            internal static extern int VslNewStreamEx(global::System.IntPtr _0, int _1, int _2, uint* _3);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsliNewAbstractStream")]
            internal static extern int VsliNewAbstractStream(global::System.IntPtr _0, int _1, uint* _2, global::System.IntPtr _3);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsldNewAbstractStream")]
            internal static extern int VsldNewAbstractStream(global::System.IntPtr _0, int _1, double* _2, double _3, double _4, global::System.IntPtr _5);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslsNewAbstractStream")]
            internal static extern int VslsNewAbstractStream(global::System.IntPtr _0, int _1, float* _2, float _3, float _4, global::System.IntPtr _5);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslDeleteStream")]
            internal static extern int VslDeleteStream(global::System.IntPtr _0);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslCopyStream")]
            internal static extern int VslCopyStream(global::System.IntPtr _0, global::System.IntPtr _1);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslCopyStreamState")]
            internal static extern int VslCopyStreamState(global::System.IntPtr _0, global::System.IntPtr _1);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslLeapfrogStream")]
            internal static extern int VslLeapfrogStream(global::System.IntPtr _0, int _1, int _2);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslSkipAheadStream")]
            internal static extern int VslSkipAheadStream(global::System.IntPtr _0, long _1);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslGetStreamStateBrng")]
            internal static extern int VslGetStreamStateBrng(global::System.IntPtr _0);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslGetNumRegBrngs")]
            internal static extern int VslGetNumRegBrngs();

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslRegisterBrng")]
            internal static extern int VslRegisterBrng(global::System.IntPtr _0);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslGetBrngProperties")]
            internal static extern int VslGetBrngProperties(int _0, global::System.IntPtr _1);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslSaveStreamF")]
            internal static extern int VslSaveStreamF(global::System.IntPtr _0, [MarshalAs(UnmanagedType.LPStr)] string _1);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslLoadStreamF")]
            internal static extern int VslLoadStreamF(global::System.IntPtr _0, [MarshalAs(UnmanagedType.LPStr)] string _1);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslSaveStreamM")]
            internal static extern int VslSaveStreamM(global::System.IntPtr _0, sbyte* _1);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslLoadStreamM")]
            internal static extern int VslLoadStreamM(global::System.IntPtr _0, [MarshalAs(UnmanagedType.LPStr)] string _1);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslGetStreamSize")]
            internal static extern int VslGetStreamSize(global::System.IntPtr _0);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsldConvNewTask")]
            internal static extern int VsldConvNewTask(global::System.IntPtr _0, int _1, int _2, int* _3, int* _4, int* _5);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslsConvNewTask")]
            internal static extern int VslsConvNewTask(global::System.IntPtr _0, int _1, int _2, int* _3, int* _4, int* _5);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslzConvNewTask")]
            internal static extern int VslzConvNewTask(global::System.IntPtr _0, int _1, int _2, int* _3, int* _4, int* _5);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslcConvNewTask")]
            internal static extern int VslcConvNewTask(global::System.IntPtr _0, int _1, int _2, int* _3, int* _4, int* _5);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsldCorrNewTask")]
            internal static extern int VsldCorrNewTask(global::System.IntPtr _0, int _1, int _2, int* _3, int* _4, int* _5);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslsCorrNewTask")]
            internal static extern int VslsCorrNewTask(global::System.IntPtr _0, int _1, int _2, int* _3, int* _4, int* _5);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslzCorrNewTask")]
            internal static extern int VslzCorrNewTask(global::System.IntPtr _0, int _1, int _2, int* _3, int* _4, int* _5);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslcCorrNewTask")]
            internal static extern int VslcCorrNewTask(global::System.IntPtr _0, int _1, int _2, int* _3, int* _4, int* _5);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsldConvNewTask1D")]
            internal static extern int VsldConvNewTask1D(global::System.IntPtr _0, int _1, int _2, int _3, int _4);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslsConvNewTask1D")]
            internal static extern int VslsConvNewTask1D(global::System.IntPtr _0, int _1, int _2, int _3, int _4);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslzConvNewTask1D")]
            internal static extern int VslzConvNewTask1D(global::System.IntPtr _0, int _1, int _2, int _3, int _4);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslcConvNewTask1D")]
            internal static extern int VslcConvNewTask1D(global::System.IntPtr _0, int _1, int _2, int _3, int _4);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsldCorrNewTask1D")]
            internal static extern int VsldCorrNewTask1D(global::System.IntPtr _0, int _1, int _2, int _3, int _4);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslsCorrNewTask1D")]
            internal static extern int VslsCorrNewTask1D(global::System.IntPtr _0, int _1, int _2, int _3, int _4);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslzCorrNewTask1D")]
            internal static extern int VslzCorrNewTask1D(global::System.IntPtr _0, int _1, int _2, int _3, int _4);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslcCorrNewTask1D")]
            internal static extern int VslcCorrNewTask1D(global::System.IntPtr _0, int _1, int _2, int _3, int _4);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsldConvNewTaskX")]
            internal static extern int VsldConvNewTaskX(global::System.IntPtr _0, int _1, int _2, int* _3, int* _4, int* _5, double* _6, int* _7);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslsConvNewTaskX")]
            internal static extern int VslsConvNewTaskX(global::System.IntPtr _0, int _1, int _2, int* _3, int* _4, int* _5, float* _6, int* _7);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsldCorrNewTaskX")]
            internal static extern int VsldCorrNewTaskX(global::System.IntPtr _0, int _1, int _2, int* _3, int* _4, int* _5, double* _6, int* _7);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslsCorrNewTaskX")]
            internal static extern int VslsCorrNewTaskX(global::System.IntPtr _0, int _1, int _2, int* _3, int* _4, int* _5, float* _6, int* _7);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsldConvNewTaskX1D")]
            internal static extern int VsldConvNewTaskX1D(global::System.IntPtr _0, int _1, int _2, int _3, int _4, double* _5, int _6);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslsConvNewTaskX1D")]
            internal static extern int VslsConvNewTaskX1D(global::System.IntPtr _0, int _1, int _2, int _3, int _4, float* _5, int _6);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsldCorrNewTaskX1D")]
            internal static extern int VsldCorrNewTaskX1D(global::System.IntPtr _0, int _1, int _2, int _3, int _4, double* _5, int _6);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslsCorrNewTaskX1D")]
            internal static extern int VslsCorrNewTaskX1D(global::System.IntPtr _0, int _1, int _2, int _3, int _4, float* _5, int _6);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslConvDeleteTask")]
            internal static extern int VslConvDeleteTask(global::System.IntPtr _0);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslCorrDeleteTask")]
            internal static extern int VslCorrDeleteTask(global::System.IntPtr _0);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslConvCopyTask")]
            internal static extern int VslConvCopyTask(global::System.IntPtr _0, global::System.IntPtr _1);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslCorrCopyTask")]
            internal static extern int VslCorrCopyTask(global::System.IntPtr _0, global::System.IntPtr _1);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslConvSetMode")]
            internal static extern int VslConvSetMode(global::System.IntPtr _0, int _1);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslCorrSetMode")]
            internal static extern int VslCorrSetMode(global::System.IntPtr _0, int _1);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslConvSetInternalPrecision")]
            internal static extern int VslConvSetInternalPrecision(global::System.IntPtr _0, int _1);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslCorrSetInternalPrecision")]
            internal static extern int VslCorrSetInternalPrecision(global::System.IntPtr _0, int _1);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslConvSetStart")]
            internal static extern int VslConvSetStart(global::System.IntPtr _0, int* _1);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslCorrSetStart")]
            internal static extern int VslCorrSetStart(global::System.IntPtr _0, int* _1);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslConvSetDecimation")]
            internal static extern int VslConvSetDecimation(global::System.IntPtr _0, int* _1);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslCorrSetDecimation")]
            internal static extern int VslCorrSetDecimation(global::System.IntPtr _0, int* _1);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsldConvExec")]
            internal static extern int VsldConvExec(global::System.IntPtr _0, double* _1, int* _2, double* _3, int* _4, double* _5, int* _6);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslsConvExec")]
            internal static extern int VslsConvExec(global::System.IntPtr _0, float* _1, int* _2, float* _3, int* _4, float* _5, int* _6);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsldCorrExec")]
            internal static extern int VsldCorrExec(global::System.IntPtr _0, double* _1, int* _2, double* _3, int* _4, double* _5, int* _6);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslsCorrExec")]
            internal static extern int VslsCorrExec(global::System.IntPtr _0, float* _1, int* _2, float* _3, int* _4, float* _5, int* _6);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsldConvExec1D")]
            internal static extern int VsldConvExec1D(global::System.IntPtr _0, double* _1, int _2, double* _3, int _4, double* _5, int _6);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslsConvExec1D")]
            internal static extern int VslsConvExec1D(global::System.IntPtr _0, float* _1, int _2, float* _3, int _4, float* _5, int _6);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsldCorrExec1D")]
            internal static extern int VsldCorrExec1D(global::System.IntPtr _0, double* _1, int _2, double* _3, int _4, double* _5, int _6);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslsCorrExec1D")]
            internal static extern int VslsCorrExec1D(global::System.IntPtr _0, float* _1, int _2, float* _3, int _4, float* _5, int _6);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsldConvExecX")]
            internal static extern int VsldConvExecX(global::System.IntPtr _0, double* _1, int* _2, double* _3, int* _4);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslsConvExecX")]
            internal static extern int VslsConvExecX(global::System.IntPtr _0, float* _1, int* _2, float* _3, int* _4);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsldCorrExecX")]
            internal static extern int VsldCorrExecX(global::System.IntPtr _0, double* _1, int* _2, double* _3, int* _4);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslsCorrExecX")]
            internal static extern int VslsCorrExecX(global::System.IntPtr _0, float* _1, int* _2, float* _3, int* _4);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsldConvExecX1D")]
            internal static extern int VsldConvExecX1D(global::System.IntPtr _0, double* _1, int _2, double* _3, int _4);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslsConvExecX1D")]
            internal static extern int VslsConvExecX1D(global::System.IntPtr _0, float* _1, int _2, float* _3, int _4);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsldCorrExecX1D")]
            internal static extern int VsldCorrExecX1D(global::System.IntPtr _0, double* _1, int _2, double* _3, int _4);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslsCorrExecX1D")]
            internal static extern int VslsCorrExecX1D(global::System.IntPtr _0, float* _1, int _2, float* _3, int _4);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsldSSNewTask")]
            internal static extern int VsldSSNewTask(global::System.IntPtr _0, int* _1, int* _2, int* _3, double* _4, double* _5, int* _6);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslsSSNewTask")]
            internal static extern int VslsSSNewTask(global::System.IntPtr _0, int* _1, int* _2, int* _3, float* _4, float* _5, int* _6);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsldSSEditTask")]
            internal static extern int VsldSSEditTask(global::System.IntPtr _0, int _1, double* _2);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslsSSEditTask")]
            internal static extern int VslsSSEditTask(global::System.IntPtr _0, int _1, float* _2);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsliSSEditTask")]
            internal static extern int VsliSSEditTask(global::System.IntPtr _0, int _1, int* _2);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsldSSEditMoments")]
            internal static extern int VsldSSEditMoments(global::System.IntPtr _0, double* _1, double* _2, double* _3, double* _4, double* _5, double* _6, double* _7);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslsSSEditMoments")]
            internal static extern int VslsSSEditMoments(global::System.IntPtr _0, float* _1, float* _2, float* _3, float* _4, float* _5, float* _6, float* _7);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsldSSEditSums")]
            internal static extern int VsldSSEditSums(global::System.IntPtr _0, double* _1, double* _2, double* _3, double* _4, double* _5, double* _6, double* _7);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslsSSEditSums")]
            internal static extern int VslsSSEditSums(global::System.IntPtr _0, float* _1, float* _2, float* _3, float* _4, float* _5, float* _6, float* _7);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsldSSEditCovCor")]
            internal static extern int VsldSSEditCovCor(global::System.IntPtr _0, double* _1, double* _2, int* _3, double* _4, int* _5);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslsSSEditCovCor")]
            internal static extern int VslsSSEditCovCor(global::System.IntPtr _0, float* _1, float* _2, int* _3, float* _4, int* _5);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsldSSEditCP")]
            internal static extern int VsldSSEditCP(global::System.IntPtr _0, double* _1, double* _2, double* _3, int* _4);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslsSSEditCP")]
            internal static extern int VslsSSEditCP(global::System.IntPtr _0, float* _1, float* _2, float* _3, int* _4);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsldSSEditPartialCovCor")]
            internal static extern int VsldSSEditPartialCovCor(global::System.IntPtr _0, int* _1, double* _2, int* _3, double* _4, int* _5, double* _6, int* _7, double* _8, int* _9);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslsSSEditPartialCovCor")]
            internal static extern int VslsSSEditPartialCovCor(global::System.IntPtr _0, int* _1, float* _2, int* _3, float* _4, int* _5, float* _6, int* _7, float* _8, int* _9);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsldSSEditQuantiles")]
            internal static extern int VsldSSEditQuantiles(global::System.IntPtr _0, int* _1, double* _2, double* _3, double* _4, int* _5);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslsSSEditQuantiles")]
            internal static extern int VslsSSEditQuantiles(global::System.IntPtr _0, int* _1, float* _2, float* _3, float* _4, int* _5);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsldSSEditStreamQuantiles")]
            internal static extern int VsldSSEditStreamQuantiles(global::System.IntPtr _0, int* _1, double* _2, double* _3, int* _4, double* _5);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslsSSEditStreamQuantiles")]
            internal static extern int VslsSSEditStreamQuantiles(global::System.IntPtr _0, int* _1, float* _2, float* _3, int* _4, float* _5);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsldSSEditPooledCovariance")]
            internal static extern int VsldSSEditPooledCovariance(global::System.IntPtr _0, int* _1, double* _2, double* _3, int* _4, double* _5, double* _6);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslsSSEditPooledCovariance")]
            internal static extern int VslsSSEditPooledCovariance(global::System.IntPtr _0, int* _1, float* _2, float* _3, int* _4, float* _5, float* _6);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsldSSEditRobustCovariance")]
            internal static extern int VsldSSEditRobustCovariance(global::System.IntPtr _0, int* _1, int* _2, double* _3, double* _4, double* _5);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslsSSEditRobustCovariance")]
            internal static extern int VslsSSEditRobustCovariance(global::System.IntPtr _0, int* _1, int* _2, float* _3, float* _4, float* _5);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsldSSEditOutliersDetection")]
            internal static extern int VsldSSEditOutliersDetection(global::System.IntPtr _0, int* _1, double* _2, double* _3);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslsSSEditOutliersDetection")]
            internal static extern int VslsSSEditOutliersDetection(global::System.IntPtr _0, int* _1, float* _2, float* _3);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsldSSEditMissingValues")]
            internal static extern int VsldSSEditMissingValues(global::System.IntPtr _0, int* _1, double* _2, int* _3, double* _4, int* _5, double* _6, int* _7, double* _8, int* _9, double* _10);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslsSSEditMissingValues")]
            internal static extern int VslsSSEditMissingValues(global::System.IntPtr _0, int* _1, float* _2, int* _3, float* _4, int* _5, float* _6, int* _7, float* _8, int* _9, float* _10);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsldSSEditCorParameterization")]
            internal static extern int VsldSSEditCorParameterization(global::System.IntPtr _0, double* _1, int* _2, double* _3, int* _4);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslsSSEditCorParameterization")]
            internal static extern int VslsSSEditCorParameterization(global::System.IntPtr _0, float* _1, int* _2, float* _3, int* _4);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vsldSSCompute")]
            internal static extern int VsldSSCompute(global::System.IntPtr _0, ulong _1, int _2);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslsSSCompute")]
            internal static extern int VslsSSCompute(global::System.IntPtr _0, ulong _1, int _2);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="vslSSDeleteTask")]
            internal static extern int VslSSDeleteTask(global::System.IntPtr _0);
        }

        public static int VdRngCauchy(int _0, global::System.IntPtr _1, int _2, ref double _3, double _4, double _5)
        {
            fixed (double* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                var __ret = __Internal.VdRngCauchy(_0, _1, _2, __arg3, _4, _5);
                return __ret;
            }
        }

        public static int VsRngCauchy(int _0, global::System.IntPtr _1, int _2, ref float _3, float _4, float _5)
        {
            fixed (float* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                var __ret = __Internal.VsRngCauchy(_0, _1, _2, __arg3, _4, _5);
                return __ret;
            }
        }

        public static int VdRngUniform(int _0, global::System.IntPtr _1, int _2, ref double _3, double _4, double _5)
        {
            fixed (double* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                var __ret = __Internal.VdRngUniform(_0, _1, _2, __arg3, _4, _5);
                return __ret;
            }
        }

        public static int VsRngUniform(int _0, global::System.IntPtr _1, int _2, ref float _3, float _4, float _5)
        {
            fixed (float* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                var __ret = __Internal.VsRngUniform(_0, _1, _2, __arg3, _4, _5);
                return __ret;
            }
        }

        public static int VdRngGaussian(int _0, global::System.IntPtr _1, int _2, ref double _3, double _4, double _5)
        {
            fixed (double* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                var __ret = __Internal.VdRngGaussian(_0, _1, _2, __arg3, _4, _5);
                return __ret;
            }
        }

        public static int VsRngGaussian(int _0, global::System.IntPtr _1, int _2, ref float _3, float _4, float _5)
        {
            fixed (float* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                var __ret = __Internal.VsRngGaussian(_0, _1, _2, __arg3, _4, _5);
                return __ret;
            }
        }

        public static int VdRngGaussianMV(int _0, global::System.IntPtr _1, int _2, ref double _3, int _4, int _5, ref double _6, ref double _7)
        {
            fixed (double* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                fixed (double* __refParamPtr6 = &_6)
                {
                    var __arg6 = __refParamPtr6;
                    fixed (double* __refParamPtr7 = &_7)
                    {
                        var __arg7 = __refParamPtr7;
                        var __ret = __Internal.VdRngGaussianMV(_0, _1, _2, __arg3, _4, _5, __arg6, __arg7);
                        return __ret;
                    }
                }
            }
        }

        public static int VsRngGaussianMV(int _0, global::System.IntPtr _1, int _2, ref float _3, int _4, int _5, ref float _6, ref float _7)
        {
            fixed (float* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                fixed (float* __refParamPtr6 = &_6)
                {
                    var __arg6 = __refParamPtr6;
                    fixed (float* __refParamPtr7 = &_7)
                    {
                        var __arg7 = __refParamPtr7;
                        var __ret = __Internal.VsRngGaussianMV(_0, _1, _2, __arg3, _4, _5, __arg6, __arg7);
                        return __ret;
                    }
                }
            }
        }

        public static int VdRngExponential(int _0, global::System.IntPtr _1, int _2, ref double _3, double _4, double _5)
        {
            fixed (double* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                var __ret = __Internal.VdRngExponential(_0, _1, _2, __arg3, _4, _5);
                return __ret;
            }
        }

        public static int VsRngExponential(int _0, global::System.IntPtr _1, int _2, ref float _3, float _4, float _5)
        {
            fixed (float* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                var __ret = __Internal.VsRngExponential(_0, _1, _2, __arg3, _4, _5);
                return __ret;
            }
        }

        public static int VdRngLaplace(int _0, global::System.IntPtr _1, int _2, ref double _3, double _4, double _5)
        {
            fixed (double* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                var __ret = __Internal.VdRngLaplace(_0, _1, _2, __arg3, _4, _5);
                return __ret;
            }
        }

        public static int VsRngLaplace(int _0, global::System.IntPtr _1, int _2, ref float _3, float _4, float _5)
        {
            fixed (float* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                var __ret = __Internal.VsRngLaplace(_0, _1, _2, __arg3, _4, _5);
                return __ret;
            }
        }

        public static int VdRngWeibull(int _0, global::System.IntPtr _1, int _2, ref double _3, double _4, double _5, double _6)
        {
            fixed (double* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                var __ret = __Internal.VdRngWeibull(_0, _1, _2, __arg3, _4, _5, _6);
                return __ret;
            }
        }

        public static int VsRngWeibull(int _0, global::System.IntPtr _1, int _2, ref float _3, float _4, float _5, float _6)
        {
            fixed (float* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                var __ret = __Internal.VsRngWeibull(_0, _1, _2, __arg3, _4, _5, _6);
                return __ret;
            }
        }

        public static int VdRngRayleigh(int _0, global::System.IntPtr _1, int _2, ref double _3, double _4, double _5)
        {
            fixed (double* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                var __ret = __Internal.VdRngRayleigh(_0, _1, _2, __arg3, _4, _5);
                return __ret;
            }
        }

        public static int VsRngRayleigh(int _0, global::System.IntPtr _1, int _2, ref float _3, float _4, float _5)
        {
            fixed (float* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                var __ret = __Internal.VsRngRayleigh(_0, _1, _2, __arg3, _4, _5);
                return __ret;
            }
        }

        public static int VdRngLognormal(int _0, global::System.IntPtr _1, int _2, ref double _3, double _4, double _5, double _6, double _7)
        {
            fixed (double* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                var __ret = __Internal.VdRngLognormal(_0, _1, _2, __arg3, _4, _5, _6, _7);
                return __ret;
            }
        }

        public static int VsRngLognormal(int _0, global::System.IntPtr _1, int _2, ref float _3, float _4, float _5, float _6, float _7)
        {
            fixed (float* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                var __ret = __Internal.VsRngLognormal(_0, _1, _2, __arg3, _4, _5, _6, _7);
                return __ret;
            }
        }

        public static int VdRngGumbel(int _0, global::System.IntPtr _1, int _2, ref double _3, double _4, double _5)
        {
            fixed (double* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                var __ret = __Internal.VdRngGumbel(_0, _1, _2, __arg3, _4, _5);
                return __ret;
            }
        }

        public static int VsRngGumbel(int _0, global::System.IntPtr _1, int _2, ref float _3, float _4, float _5)
        {
            fixed (float* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                var __ret = __Internal.VsRngGumbel(_0, _1, _2, __arg3, _4, _5);
                return __ret;
            }
        }

        public static int VdRngGamma(int _0, global::System.IntPtr _1, int _2, ref double _3, double _4, double _5, double _6)
        {
            fixed (double* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                var __ret = __Internal.VdRngGamma(_0, _1, _2, __arg3, _4, _5, _6);
                return __ret;
            }
        }

        public static int VsRngGamma(int _0, global::System.IntPtr _1, int _2, ref float _3, float _4, float _5, float _6)
        {
            fixed (float* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                var __ret = __Internal.VsRngGamma(_0, _1, _2, __arg3, _4, _5, _6);
                return __ret;
            }
        }

        public static int VdRngBeta(int _0, global::System.IntPtr _1, int _2, ref double _3, double _4, double _5, double _6, double _7)
        {
            fixed (double* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                var __ret = __Internal.VdRngBeta(_0, _1, _2, __arg3, _4, _5, _6, _7);
                return __ret;
            }
        }

        public static int VsRngBeta(int _0, global::System.IntPtr _1, int _2, ref float _3, float _4, float _5, float _6, float _7)
        {
            fixed (float* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                var __ret = __Internal.VsRngBeta(_0, _1, _2, __arg3, _4, _5, _6, _7);
                return __ret;
            }
        }

        public static int ViRngBernoulli(int _0, global::System.IntPtr _1, int _2, ref int _3, double _4)
        {
            fixed (int* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                var __ret = __Internal.ViRngBernoulli(_0, _1, _2, __arg3, _4);
                return __ret;
            }
        }

        public static int ViRngUniform(int _0, global::System.IntPtr _1, int _2, ref int _3, int _4, int _5)
        {
            fixed (int* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                var __ret = __Internal.ViRngUniform(_0, _1, _2, __arg3, _4, _5);
                return __ret;
            }
        }

        public static int ViRngUniformBits(int _0, global::System.IntPtr _1, int _2, ref uint _3)
        {
            fixed (uint* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                var __ret = __Internal.ViRngUniformBits(_0, _1, _2, __arg3);
                return __ret;
            }
        }

        public static int ViRngUniformBits32(int _0, global::System.IntPtr _1, int _2, ref uint _3)
        {
            fixed (uint* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                var __ret = __Internal.ViRngUniformBits32(_0, _1, _2, __arg3);
                return __ret;
            }
        }

        public static int ViRngUniformBits64(int _0, global::System.IntPtr _1, int _2, ref ulong _3)
        {
            fixed (ulong* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                var __ret = __Internal.ViRngUniformBits64(_0, _1, _2, __arg3);
                return __ret;
            }
        }

        public static int ViRngGeometric(int _0, global::System.IntPtr _1, int _2, ref int _3, double _4)
        {
            fixed (int* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                var __ret = __Internal.ViRngGeometric(_0, _1, _2, __arg3, _4);
                return __ret;
            }
        }

        public static int ViRngBinomial(int _0, global::System.IntPtr _1, int _2, ref int _3, int _4, double _5)
        {
            fixed (int* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                var __ret = __Internal.ViRngBinomial(_0, _1, _2, __arg3, _4, _5);
                return __ret;
            }
        }

        public static int ViRngHypergeometric(int _0, global::System.IntPtr _1, int _2, ref int _3, int _4, int _5, int _6)
        {
            fixed (int* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                var __ret = __Internal.ViRngHypergeometric(_0, _1, _2, __arg3, _4, _5, _6);
                return __ret;
            }
        }

        public static int ViRngNegbinomial(int _0, global::System.IntPtr _1, int _2, ref int _3, double _4, double _5)
        {
            fixed (int* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                var __ret = __Internal.ViRngNegbinomial(_0, _1, _2, __arg3, _4, _5);
                return __ret;
            }
        }

        public static int ViRngNegBinomial(int _0, global::System.IntPtr _1, int _2, ref int _3, double _4, double _5)
        {
            fixed (int* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                var __ret = __Internal.ViRngNegBinomial(_0, _1, _2, __arg3, _4, _5);
                return __ret;
            }
        }

        public static int ViRngPoisson(int _0, global::System.IntPtr _1, int _2, ref int _3, double _4)
        {
            fixed (int* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                var __ret = __Internal.ViRngPoisson(_0, _1, _2, __arg3, _4);
                return __ret;
            }
        }

        public static int ViRngPoissonV(int _0, global::System.IntPtr _1, int _2, ref int _3, ref double _4)
        {
            fixed (int* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                fixed (double* __refParamPtr4 = &_4)
                {
                    var __arg4 = __refParamPtr4;
                    var __ret = __Internal.ViRngPoissonV(_0, _1, _2, __arg3, __arg4);
                    return __ret;
                }
            }
        }

        public static int VslNewStream(global::System.IntPtr _0, int _1, uint _2)
        {
            var __ret = __Internal.VslNewStream(_0, _1, _2);
            return __ret;
        }

        public static int VslNewStreamEx(global::System.IntPtr _0, int _1, int _2, ref uint _3)
        {
            fixed (uint* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                var __ret = __Internal.VslNewStreamEx(_0, _1, _2, __arg3);
                return __ret;
            }
        }

        public static int VsliNewAbstractStream(global::System.IntPtr _0, int _1, ref uint _2, global::IntelMKL.LP64.IUpdateFuncPtr _3)
        {
            fixed (uint* __refParamPtr2 = &_2)
            {
                var __arg2 = __refParamPtr2;
                var __arg3 = _3 == null ? global::System.IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(_3);
                var __ret = __Internal.VsliNewAbstractStream(_0, _1, __arg2, __arg3);
                return __ret;
            }
        }

        public static int VsldNewAbstractStream(global::System.IntPtr _0, int _1, ref double _2, double _3, double _4, global::IntelMKL.LP64.DUpdateFuncPtr _5)
        {
            fixed (double* __refParamPtr2 = &_2)
            {
                var __arg2 = __refParamPtr2;
                var __arg5 = _5 == null ? global::System.IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(_5);
                var __ret = __Internal.VsldNewAbstractStream(_0, _1, __arg2, _3, _4, __arg5);
                return __ret;
            }
        }

        public static int VslsNewAbstractStream(global::System.IntPtr _0, int _1, ref float _2, float _3, float _4, global::IntelMKL.LP64.SUpdateFuncPtr _5)
        {
            fixed (float* __refParamPtr2 = &_2)
            {
                var __arg2 = __refParamPtr2;
                var __arg5 = _5 == null ? global::System.IntPtr.Zero : Marshal.GetFunctionPointerForDelegate(_5);
                var __ret = __Internal.VslsNewAbstractStream(_0, _1, __arg2, _3, _4, __arg5);
                return __ret;
            }
        }

        public static int VslDeleteStream(global::System.IntPtr _0)
        {
            var __ret = __Internal.VslDeleteStream(_0);
            return __ret;
        }

        public static int VslCopyStream(global::System.IntPtr _0, global::System.IntPtr _1)
        {
            var __ret = __Internal.VslCopyStream(_0, _1);
            return __ret;
        }

        public static int VslCopyStreamState(global::System.IntPtr _0, global::System.IntPtr _1)
        {
            var __ret = __Internal.VslCopyStreamState(_0, _1);
            return __ret;
        }

        public static int VslLeapfrogStream(global::System.IntPtr _0, int _1, int _2)
        {
            var __ret = __Internal.VslLeapfrogStream(_0, _1, _2);
            return __ret;
        }

        public static int VslSkipAheadStream(global::System.IntPtr _0, long _1)
        {
            var __ret = __Internal.VslSkipAheadStream(_0, _1);
            return __ret;
        }

        public static int VslGetStreamStateBrng(global::System.IntPtr _0)
        {
            var __ret = __Internal.VslGetStreamStateBrng(_0);
            return __ret;
        }

        public static int VslGetNumRegBrngs()
        {
            var __ret = __Internal.VslGetNumRegBrngs();
            return __ret;
        }

        public static int VslRegisterBrng(global::IntelMKL.LP64.VSLBRngProperties _0)
        {
            var ____arg0 = _0.__Instance;
            var __arg0 = new global::System.IntPtr(&____arg0);
            var __ret = __Internal.VslRegisterBrng(__arg0);
            return __ret;
        }

        public static int VslGetBrngProperties(int _0, global::IntelMKL.LP64.VSLBRngProperties _1)
        {
            var ____arg1 = _1.__Instance;
            var __arg1 = new global::System.IntPtr(&____arg1);
            var __ret = __Internal.VslGetBrngProperties(_0, __arg1);
            return __ret;
        }

        public static int VslSaveStreamF(global::System.IntPtr _0, string _1)
        {
            var __ret = __Internal.VslSaveStreamF(_0, _1);
            return __ret;
        }

        public static int VslLoadStreamF(global::System.IntPtr _0, string _1)
        {
            var __ret = __Internal.VslLoadStreamF(_0, _1);
            return __ret;
        }

        public static int VslSaveStreamM(global::System.IntPtr _0, sbyte* _1)
        {
            var __ret = __Internal.VslSaveStreamM(_0, _1);
            return __ret;
        }

        public static int VslLoadStreamM(global::System.IntPtr _0, string _1)
        {
            var __ret = __Internal.VslLoadStreamM(_0, _1);
            return __ret;
        }

        public static int VslGetStreamSize(global::System.IntPtr _0)
        {
            var __ret = __Internal.VslGetStreamSize(_0);
            return __ret;
        }

        public static int VsldConvNewTask(global::System.IntPtr _0, int _1, int _2, ref int _3, ref int _4, ref int _5)
        {
            fixed (int* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                fixed (int* __refParamPtr4 = &_4)
                {
                    var __arg4 = __refParamPtr4;
                    fixed (int* __refParamPtr5 = &_5)
                    {
                        var __arg5 = __refParamPtr5;
                        var __ret = __Internal.VsldConvNewTask(_0, _1, _2, __arg3, __arg4, __arg5);
                        return __ret;
                    }
                }
            }
        }

        public static int VslsConvNewTask(global::System.IntPtr _0, int _1, int _2, ref int _3, ref int _4, ref int _5)
        {
            fixed (int* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                fixed (int* __refParamPtr4 = &_4)
                {
                    var __arg4 = __refParamPtr4;
                    fixed (int* __refParamPtr5 = &_5)
                    {
                        var __arg5 = __refParamPtr5;
                        var __ret = __Internal.VslsConvNewTask(_0, _1, _2, __arg3, __arg4, __arg5);
                        return __ret;
                    }
                }
            }
        }

        public static int VslzConvNewTask(global::System.IntPtr _0, int _1, int _2, ref int _3, ref int _4, ref int _5)
        {
            fixed (int* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                fixed (int* __refParamPtr4 = &_4)
                {
                    var __arg4 = __refParamPtr4;
                    fixed (int* __refParamPtr5 = &_5)
                    {
                        var __arg5 = __refParamPtr5;
                        var __ret = __Internal.VslzConvNewTask(_0, _1, _2, __arg3, __arg4, __arg5);
                        return __ret;
                    }
                }
            }
        }

        public static int VslcConvNewTask(global::System.IntPtr _0, int _1, int _2, ref int _3, ref int _4, ref int _5)
        {
            fixed (int* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                fixed (int* __refParamPtr4 = &_4)
                {
                    var __arg4 = __refParamPtr4;
                    fixed (int* __refParamPtr5 = &_5)
                    {
                        var __arg5 = __refParamPtr5;
                        var __ret = __Internal.VslcConvNewTask(_0, _1, _2, __arg3, __arg4, __arg5);
                        return __ret;
                    }
                }
            }
        }

        public static int VsldCorrNewTask(global::System.IntPtr _0, int _1, int _2, ref int _3, ref int _4, ref int _5)
        {
            fixed (int* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                fixed (int* __refParamPtr4 = &_4)
                {
                    var __arg4 = __refParamPtr4;
                    fixed (int* __refParamPtr5 = &_5)
                    {
                        var __arg5 = __refParamPtr5;
                        var __ret = __Internal.VsldCorrNewTask(_0, _1, _2, __arg3, __arg4, __arg5);
                        return __ret;
                    }
                }
            }
        }

        public static int VslsCorrNewTask(global::System.IntPtr _0, int _1, int _2, ref int _3, ref int _4, ref int _5)
        {
            fixed (int* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                fixed (int* __refParamPtr4 = &_4)
                {
                    var __arg4 = __refParamPtr4;
                    fixed (int* __refParamPtr5 = &_5)
                    {
                        var __arg5 = __refParamPtr5;
                        var __ret = __Internal.VslsCorrNewTask(_0, _1, _2, __arg3, __arg4, __arg5);
                        return __ret;
                    }
                }
            }
        }

        public static int VslzCorrNewTask(global::System.IntPtr _0, int _1, int _2, ref int _3, ref int _4, ref int _5)
        {
            fixed (int* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                fixed (int* __refParamPtr4 = &_4)
                {
                    var __arg4 = __refParamPtr4;
                    fixed (int* __refParamPtr5 = &_5)
                    {
                        var __arg5 = __refParamPtr5;
                        var __ret = __Internal.VslzCorrNewTask(_0, _1, _2, __arg3, __arg4, __arg5);
                        return __ret;
                    }
                }
            }
        }

        public static int VslcCorrNewTask(global::System.IntPtr _0, int _1, int _2, ref int _3, ref int _4, ref int _5)
        {
            fixed (int* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                fixed (int* __refParamPtr4 = &_4)
                {
                    var __arg4 = __refParamPtr4;
                    fixed (int* __refParamPtr5 = &_5)
                    {
                        var __arg5 = __refParamPtr5;
                        var __ret = __Internal.VslcCorrNewTask(_0, _1, _2, __arg3, __arg4, __arg5);
                        return __ret;
                    }
                }
            }
        }

        public static int VsldConvNewTask1D(global::System.IntPtr _0, int _1, int _2, int _3, int _4)
        {
            var __ret = __Internal.VsldConvNewTask1D(_0, _1, _2, _3, _4);
            return __ret;
        }

        public static int VslsConvNewTask1D(global::System.IntPtr _0, int _1, int _2, int _3, int _4)
        {
            var __ret = __Internal.VslsConvNewTask1D(_0, _1, _2, _3, _4);
            return __ret;
        }

        public static int VslzConvNewTask1D(global::System.IntPtr _0, int _1, int _2, int _3, int _4)
        {
            var __ret = __Internal.VslzConvNewTask1D(_0, _1, _2, _3, _4);
            return __ret;
        }

        public static int VslcConvNewTask1D(global::System.IntPtr _0, int _1, int _2, int _3, int _4)
        {
            var __ret = __Internal.VslcConvNewTask1D(_0, _1, _2, _3, _4);
            return __ret;
        }

        public static int VsldCorrNewTask1D(global::System.IntPtr _0, int _1, int _2, int _3, int _4)
        {
            var __ret = __Internal.VsldCorrNewTask1D(_0, _1, _2, _3, _4);
            return __ret;
        }

        public static int VslsCorrNewTask1D(global::System.IntPtr _0, int _1, int _2, int _3, int _4)
        {
            var __ret = __Internal.VslsCorrNewTask1D(_0, _1, _2, _3, _4);
            return __ret;
        }

        public static int VslzCorrNewTask1D(global::System.IntPtr _0, int _1, int _2, int _3, int _4)
        {
            var __ret = __Internal.VslzCorrNewTask1D(_0, _1, _2, _3, _4);
            return __ret;
        }

        public static int VslcCorrNewTask1D(global::System.IntPtr _0, int _1, int _2, int _3, int _4)
        {
            var __ret = __Internal.VslcCorrNewTask1D(_0, _1, _2, _3, _4);
            return __ret;
        }

        public static int VsldConvNewTaskX(global::System.IntPtr _0, int _1, int _2, ref int _3, ref int _4, ref int _5, ref double _6, ref int _7)
        {
            fixed (int* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                fixed (int* __refParamPtr4 = &_4)
                {
                    var __arg4 = __refParamPtr4;
                    fixed (int* __refParamPtr5 = &_5)
                    {
                        var __arg5 = __refParamPtr5;
                        fixed (double* __refParamPtr6 = &_6)
                        {
                            var __arg6 = __refParamPtr6;
                            fixed (int* __refParamPtr7 = &_7)
                            {
                                var __arg7 = __refParamPtr7;
                                var __ret = __Internal.VsldConvNewTaskX(_0, _1, _2, __arg3, __arg4, __arg5, __arg6, __arg7);
                                return __ret;
                            }
                        }
                    }
                }
            }
        }

        public static int VslsConvNewTaskX(global::System.IntPtr _0, int _1, int _2, ref int _3, ref int _4, ref int _5, ref float _6, ref int _7)
        {
            fixed (int* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                fixed (int* __refParamPtr4 = &_4)
                {
                    var __arg4 = __refParamPtr4;
                    fixed (int* __refParamPtr5 = &_5)
                    {
                        var __arg5 = __refParamPtr5;
                        fixed (float* __refParamPtr6 = &_6)
                        {
                            var __arg6 = __refParamPtr6;
                            fixed (int* __refParamPtr7 = &_7)
                            {
                                var __arg7 = __refParamPtr7;
                                var __ret = __Internal.VslsConvNewTaskX(_0, _1, _2, __arg3, __arg4, __arg5, __arg6, __arg7);
                                return __ret;
                            }
                        }
                    }
                }
            }
        }

        public static int VsldCorrNewTaskX(global::System.IntPtr _0, int _1, int _2, ref int _3, ref int _4, ref int _5, ref double _6, ref int _7)
        {
            fixed (int* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                fixed (int* __refParamPtr4 = &_4)
                {
                    var __arg4 = __refParamPtr4;
                    fixed (int* __refParamPtr5 = &_5)
                    {
                        var __arg5 = __refParamPtr5;
                        fixed (double* __refParamPtr6 = &_6)
                        {
                            var __arg6 = __refParamPtr6;
                            fixed (int* __refParamPtr7 = &_7)
                            {
                                var __arg7 = __refParamPtr7;
                                var __ret = __Internal.VsldCorrNewTaskX(_0, _1, _2, __arg3, __arg4, __arg5, __arg6, __arg7);
                                return __ret;
                            }
                        }
                    }
                }
            }
        }

        public static int VslsCorrNewTaskX(global::System.IntPtr _0, int _1, int _2, ref int _3, ref int _4, ref int _5, ref float _6, ref int _7)
        {
            fixed (int* __refParamPtr3 = &_3)
            {
                var __arg3 = __refParamPtr3;
                fixed (int* __refParamPtr4 = &_4)
                {
                    var __arg4 = __refParamPtr4;
                    fixed (int* __refParamPtr5 = &_5)
                    {
                        var __arg5 = __refParamPtr5;
                        fixed (float* __refParamPtr6 = &_6)
                        {
                            var __arg6 = __refParamPtr6;
                            fixed (int* __refParamPtr7 = &_7)
                            {
                                var __arg7 = __refParamPtr7;
                                var __ret = __Internal.VslsCorrNewTaskX(_0, _1, _2, __arg3, __arg4, __arg5, __arg6, __arg7);
                                return __ret;
                            }
                        }
                    }
                }
            }
        }

        public static int VsldConvNewTaskX1D(global::System.IntPtr _0, int _1, int _2, int _3, int _4, ref double _5, int _6)
        {
            fixed (double* __refParamPtr5 = &_5)
            {
                var __arg5 = __refParamPtr5;
                var __ret = __Internal.VsldConvNewTaskX1D(_0, _1, _2, _3, _4, __arg5, _6);
                return __ret;
            }
        }

        public static int VslsConvNewTaskX1D(global::System.IntPtr _0, int _1, int _2, int _3, int _4, ref float _5, int _6)
        {
            fixed (float* __refParamPtr5 = &_5)
            {
                var __arg5 = __refParamPtr5;
                var __ret = __Internal.VslsConvNewTaskX1D(_0, _1, _2, _3, _4, __arg5, _6);
                return __ret;
            }
        }

        public static int VsldCorrNewTaskX1D(global::System.IntPtr _0, int _1, int _2, int _3, int _4, ref double _5, int _6)
        {
            fixed (double* __refParamPtr5 = &_5)
            {
                var __arg5 = __refParamPtr5;
                var __ret = __Internal.VsldCorrNewTaskX1D(_0, _1, _2, _3, _4, __arg5, _6);
                return __ret;
            }
        }

        public static int VslsCorrNewTaskX1D(global::System.IntPtr _0, int _1, int _2, int _3, int _4, ref float _5, int _6)
        {
            fixed (float* __refParamPtr5 = &_5)
            {
                var __arg5 = __refParamPtr5;
                var __ret = __Internal.VslsCorrNewTaskX1D(_0, _1, _2, _3, _4, __arg5, _6);
                return __ret;
            }
        }

        public static int VslConvDeleteTask(global::System.IntPtr _0)
        {
            var __ret = __Internal.VslConvDeleteTask(_0);
            return __ret;
        }

        public static int VslCorrDeleteTask(global::System.IntPtr _0)
        {
            var __ret = __Internal.VslCorrDeleteTask(_0);
            return __ret;
        }

        public static int VslConvCopyTask(global::System.IntPtr _0, global::System.IntPtr _1)
        {
            var __ret = __Internal.VslConvCopyTask(_0, _1);
            return __ret;
        }

        public static int VslCorrCopyTask(global::System.IntPtr _0, global::System.IntPtr _1)
        {
            var __ret = __Internal.VslCorrCopyTask(_0, _1);
            return __ret;
        }

        public static int VslConvSetMode(global::System.IntPtr _0, int _1)
        {
            var __ret = __Internal.VslConvSetMode(_0, _1);
            return __ret;
        }

        public static int VslCorrSetMode(global::System.IntPtr _0, int _1)
        {
            var __ret = __Internal.VslCorrSetMode(_0, _1);
            return __ret;
        }

        public static int VslConvSetInternalPrecision(global::System.IntPtr _0, int _1)
        {
            var __ret = __Internal.VslConvSetInternalPrecision(_0, _1);
            return __ret;
        }

        public static int VslCorrSetInternalPrecision(global::System.IntPtr _0, int _1)
        {
            var __ret = __Internal.VslCorrSetInternalPrecision(_0, _1);
            return __ret;
        }

        public static int VslConvSetStart(global::System.IntPtr _0, ref int _1)
        {
            fixed (int* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                var __ret = __Internal.VslConvSetStart(_0, __arg1);
                return __ret;
            }
        }

        public static int VslCorrSetStart(global::System.IntPtr _0, ref int _1)
        {
            fixed (int* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                var __ret = __Internal.VslCorrSetStart(_0, __arg1);
                return __ret;
            }
        }

        public static int VslConvSetDecimation(global::System.IntPtr _0, ref int _1)
        {
            fixed (int* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                var __ret = __Internal.VslConvSetDecimation(_0, __arg1);
                return __ret;
            }
        }

        public static int VslCorrSetDecimation(global::System.IntPtr _0, ref int _1)
        {
            fixed (int* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                var __ret = __Internal.VslCorrSetDecimation(_0, __arg1);
                return __ret;
            }
        }

        public static int VsldConvExec(global::System.IntPtr _0, ref double _1, ref int _2, ref double _3, ref int _4, ref double _5, ref int _6)
        {
            fixed (double* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (int* __refParamPtr2 = &_2)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (double* __refParamPtr3 = &_3)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (int* __refParamPtr4 = &_4)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (double* __refParamPtr5 = &_5)
                            {
                                var __arg5 = __refParamPtr5;
                                fixed (int* __refParamPtr6 = &_6)
                                {
                                    var __arg6 = __refParamPtr6;
                                    var __ret = __Internal.VsldConvExec(_0, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6);
                                    return __ret;
                                }
                            }
                        }
                    }
                }
            }
        }

        public static int VslsConvExec(global::System.IntPtr _0, ref float _1, ref int _2, ref float _3, ref int _4, ref float _5, ref int _6)
        {
            fixed (float* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (int* __refParamPtr2 = &_2)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (float* __refParamPtr3 = &_3)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (int* __refParamPtr4 = &_4)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (float* __refParamPtr5 = &_5)
                            {
                                var __arg5 = __refParamPtr5;
                                fixed (int* __refParamPtr6 = &_6)
                                {
                                    var __arg6 = __refParamPtr6;
                                    var __ret = __Internal.VslsConvExec(_0, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6);
                                    return __ret;
                                }
                            }
                        }
                    }
                }
            }
        }

        public static int VsldCorrExec(global::System.IntPtr _0, ref double _1, ref int _2, ref double _3, ref int _4, ref double _5, ref int _6)
        {
            fixed (double* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (int* __refParamPtr2 = &_2)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (double* __refParamPtr3 = &_3)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (int* __refParamPtr4 = &_4)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (double* __refParamPtr5 = &_5)
                            {
                                var __arg5 = __refParamPtr5;
                                fixed (int* __refParamPtr6 = &_6)
                                {
                                    var __arg6 = __refParamPtr6;
                                    var __ret = __Internal.VsldCorrExec(_0, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6);
                                    return __ret;
                                }
                            }
                        }
                    }
                }
            }
        }

        public static int VslsCorrExec(global::System.IntPtr _0, ref float _1, ref int _2, ref float _3, ref int _4, ref float _5, ref int _6)
        {
            fixed (float* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (int* __refParamPtr2 = &_2)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (float* __refParamPtr3 = &_3)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (int* __refParamPtr4 = &_4)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (float* __refParamPtr5 = &_5)
                            {
                                var __arg5 = __refParamPtr5;
                                fixed (int* __refParamPtr6 = &_6)
                                {
                                    var __arg6 = __refParamPtr6;
                                    var __ret = __Internal.VslsCorrExec(_0, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6);
                                    return __ret;
                                }
                            }
                        }
                    }
                }
            }
        }

        public static int VsldConvExec1D(global::System.IntPtr _0, ref double _1, int _2, ref double _3, int _4, ref double _5, int _6)
        {
            fixed (double* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (double* __refParamPtr3 = &_3)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (double* __refParamPtr5 = &_5)
                    {
                        var __arg5 = __refParamPtr5;
                        var __ret = __Internal.VsldConvExec1D(_0, __arg1, _2, __arg3, _4, __arg5, _6);
                        return __ret;
                    }
                }
            }
        }

        public static int VslsConvExec1D(global::System.IntPtr _0, ref float _1, int _2, ref float _3, int _4, ref float _5, int _6)
        {
            fixed (float* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (float* __refParamPtr3 = &_3)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (float* __refParamPtr5 = &_5)
                    {
                        var __arg5 = __refParamPtr5;
                        var __ret = __Internal.VslsConvExec1D(_0, __arg1, _2, __arg3, _4, __arg5, _6);
                        return __ret;
                    }
                }
            }
        }

        public static int VsldCorrExec1D(global::System.IntPtr _0, ref double _1, int _2, ref double _3, int _4, ref double _5, int _6)
        {
            fixed (double* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (double* __refParamPtr3 = &_3)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (double* __refParamPtr5 = &_5)
                    {
                        var __arg5 = __refParamPtr5;
                        var __ret = __Internal.VsldCorrExec1D(_0, __arg1, _2, __arg3, _4, __arg5, _6);
                        return __ret;
                    }
                }
            }
        }

        public static int VslsCorrExec1D(global::System.IntPtr _0, ref float _1, int _2, ref float _3, int _4, ref float _5, int _6)
        {
            fixed (float* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (float* __refParamPtr3 = &_3)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (float* __refParamPtr5 = &_5)
                    {
                        var __arg5 = __refParamPtr5;
                        var __ret = __Internal.VslsCorrExec1D(_0, __arg1, _2, __arg3, _4, __arg5, _6);
                        return __ret;
                    }
                }
            }
        }

        public static int VsldConvExecX(global::System.IntPtr _0, ref double _1, ref int _2, ref double _3, ref int _4)
        {
            fixed (double* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (int* __refParamPtr2 = &_2)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (double* __refParamPtr3 = &_3)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (int* __refParamPtr4 = &_4)
                        {
                            var __arg4 = __refParamPtr4;
                            var __ret = __Internal.VsldConvExecX(_0, __arg1, __arg2, __arg3, __arg4);
                            return __ret;
                        }
                    }
                }
            }
        }

        public static int VslsConvExecX(global::System.IntPtr _0, ref float _1, ref int _2, ref float _3, ref int _4)
        {
            fixed (float* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (int* __refParamPtr2 = &_2)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (float* __refParamPtr3 = &_3)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (int* __refParamPtr4 = &_4)
                        {
                            var __arg4 = __refParamPtr4;
                            var __ret = __Internal.VslsConvExecX(_0, __arg1, __arg2, __arg3, __arg4);
                            return __ret;
                        }
                    }
                }
            }
        }

        public static int VsldCorrExecX(global::System.IntPtr _0, ref double _1, ref int _2, ref double _3, ref int _4)
        {
            fixed (double* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (int* __refParamPtr2 = &_2)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (double* __refParamPtr3 = &_3)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (int* __refParamPtr4 = &_4)
                        {
                            var __arg4 = __refParamPtr4;
                            var __ret = __Internal.VsldCorrExecX(_0, __arg1, __arg2, __arg3, __arg4);
                            return __ret;
                        }
                    }
                }
            }
        }

        public static int VslsCorrExecX(global::System.IntPtr _0, ref float _1, ref int _2, ref float _3, ref int _4)
        {
            fixed (float* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (int* __refParamPtr2 = &_2)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (float* __refParamPtr3 = &_3)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (int* __refParamPtr4 = &_4)
                        {
                            var __arg4 = __refParamPtr4;
                            var __ret = __Internal.VslsCorrExecX(_0, __arg1, __arg2, __arg3, __arg4);
                            return __ret;
                        }
                    }
                }
            }
        }

        public static int VsldConvExecX1D(global::System.IntPtr _0, ref double _1, int _2, ref double _3, int _4)
        {
            fixed (double* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (double* __refParamPtr3 = &_3)
                {
                    var __arg3 = __refParamPtr3;
                    var __ret = __Internal.VsldConvExecX1D(_0, __arg1, _2, __arg3, _4);
                    return __ret;
                }
            }
        }

        public static int VslsConvExecX1D(global::System.IntPtr _0, ref float _1, int _2, ref float _3, int _4)
        {
            fixed (float* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (float* __refParamPtr3 = &_3)
                {
                    var __arg3 = __refParamPtr3;
                    var __ret = __Internal.VslsConvExecX1D(_0, __arg1, _2, __arg3, _4);
                    return __ret;
                }
            }
        }

        public static int VsldCorrExecX1D(global::System.IntPtr _0, ref double _1, int _2, ref double _3, int _4)
        {
            fixed (double* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (double* __refParamPtr3 = &_3)
                {
                    var __arg3 = __refParamPtr3;
                    var __ret = __Internal.VsldCorrExecX1D(_0, __arg1, _2, __arg3, _4);
                    return __ret;
                }
            }
        }

        public static int VslsCorrExecX1D(global::System.IntPtr _0, ref float _1, int _2, ref float _3, int _4)
        {
            fixed (float* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (float* __refParamPtr3 = &_3)
                {
                    var __arg3 = __refParamPtr3;
                    var __ret = __Internal.VslsCorrExecX1D(_0, __arg1, _2, __arg3, _4);
                    return __ret;
                }
            }
        }

        public static int VsldSSNewTask(global::System.IntPtr _0, ref int _1, ref int _2, ref int _3, ref double _4, ref double _5, ref int _6)
        {
            fixed (int* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (int* __refParamPtr2 = &_2)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (int* __refParamPtr3 = &_3)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (double* __refParamPtr4 = &_4)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (double* __refParamPtr5 = &_5)
                            {
                                var __arg5 = __refParamPtr5;
                                fixed (int* __refParamPtr6 = &_6)
                                {
                                    var __arg6 = __refParamPtr6;
                                    var __ret = __Internal.VsldSSNewTask(_0, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6);
                                    return __ret;
                                }
                            }
                        }
                    }
                }
            }
        }

        public static int VslsSSNewTask(global::System.IntPtr _0, ref int _1, ref int _2, ref int _3, ref float _4, ref float _5, ref int _6)
        {
            fixed (int* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (int* __refParamPtr2 = &_2)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (int* __refParamPtr3 = &_3)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (float* __refParamPtr4 = &_4)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (float* __refParamPtr5 = &_5)
                            {
                                var __arg5 = __refParamPtr5;
                                fixed (int* __refParamPtr6 = &_6)
                                {
                                    var __arg6 = __refParamPtr6;
                                    var __ret = __Internal.VslsSSNewTask(_0, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6);
                                    return __ret;
                                }
                            }
                        }
                    }
                }
            }
        }

        public static int VsldSSEditTask(global::System.IntPtr _0, int _1, ref double _2)
        {
            fixed (double* __refParamPtr2 = &_2)
            {
                var __arg2 = __refParamPtr2;
                var __ret = __Internal.VsldSSEditTask(_0, _1, __arg2);
                return __ret;
            }
        }

        public static int VslsSSEditTask(global::System.IntPtr _0, int _1, ref float _2)
        {
            fixed (float* __refParamPtr2 = &_2)
            {
                var __arg2 = __refParamPtr2;
                var __ret = __Internal.VslsSSEditTask(_0, _1, __arg2);
                return __ret;
            }
        }

        public static int VsliSSEditTask(global::System.IntPtr _0, int _1, ref int _2)
        {
            fixed (int* __refParamPtr2 = &_2)
            {
                var __arg2 = __refParamPtr2;
                var __ret = __Internal.VsliSSEditTask(_0, _1, __arg2);
                return __ret;
            }
        }

        public static int VsldSSEditMoments(global::System.IntPtr _0, ref double _1, ref double _2, ref double _3, ref double _4, ref double _5, ref double _6, ref double _7)
        {
            fixed (double* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (double* __refParamPtr2 = &_2)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (double* __refParamPtr3 = &_3)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (double* __refParamPtr4 = &_4)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (double* __refParamPtr5 = &_5)
                            {
                                var __arg5 = __refParamPtr5;
                                fixed (double* __refParamPtr6 = &_6)
                                {
                                    var __arg6 = __refParamPtr6;
                                    fixed (double* __refParamPtr7 = &_7)
                                    {
                                        var __arg7 = __refParamPtr7;
                                        var __ret = __Internal.VsldSSEditMoments(_0, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6, __arg7);
                                        return __ret;
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static int VslsSSEditMoments(global::System.IntPtr _0, ref float _1, ref float _2, ref float _3, ref float _4, ref float _5, ref float _6, ref float _7)
        {
            fixed (float* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (float* __refParamPtr2 = &_2)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (float* __refParamPtr3 = &_3)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (float* __refParamPtr4 = &_4)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (float* __refParamPtr5 = &_5)
                            {
                                var __arg5 = __refParamPtr5;
                                fixed (float* __refParamPtr6 = &_6)
                                {
                                    var __arg6 = __refParamPtr6;
                                    fixed (float* __refParamPtr7 = &_7)
                                    {
                                        var __arg7 = __refParamPtr7;
                                        var __ret = __Internal.VslsSSEditMoments(_0, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6, __arg7);
                                        return __ret;
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static int VsldSSEditSums(global::System.IntPtr _0, ref double _1, ref double _2, ref double _3, ref double _4, ref double _5, ref double _6, ref double _7)
        {
            fixed (double* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (double* __refParamPtr2 = &_2)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (double* __refParamPtr3 = &_3)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (double* __refParamPtr4 = &_4)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (double* __refParamPtr5 = &_5)
                            {
                                var __arg5 = __refParamPtr5;
                                fixed (double* __refParamPtr6 = &_6)
                                {
                                    var __arg6 = __refParamPtr6;
                                    fixed (double* __refParamPtr7 = &_7)
                                    {
                                        var __arg7 = __refParamPtr7;
                                        var __ret = __Internal.VsldSSEditSums(_0, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6, __arg7);
                                        return __ret;
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static int VslsSSEditSums(global::System.IntPtr _0, ref float _1, ref float _2, ref float _3, ref float _4, ref float _5, ref float _6, ref float _7)
        {
            fixed (float* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (float* __refParamPtr2 = &_2)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (float* __refParamPtr3 = &_3)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (float* __refParamPtr4 = &_4)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (float* __refParamPtr5 = &_5)
                            {
                                var __arg5 = __refParamPtr5;
                                fixed (float* __refParamPtr6 = &_6)
                                {
                                    var __arg6 = __refParamPtr6;
                                    fixed (float* __refParamPtr7 = &_7)
                                    {
                                        var __arg7 = __refParamPtr7;
                                        var __ret = __Internal.VslsSSEditSums(_0, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6, __arg7);
                                        return __ret;
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static int VsldSSEditCovCor(global::System.IntPtr _0, ref double _1, ref double _2, ref int _3, ref double _4, ref int _5)
        {
            fixed (double* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (double* __refParamPtr2 = &_2)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (int* __refParamPtr3 = &_3)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (double* __refParamPtr4 = &_4)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (int* __refParamPtr5 = &_5)
                            {
                                var __arg5 = __refParamPtr5;
                                var __ret = __Internal.VsldSSEditCovCor(_0, __arg1, __arg2, __arg3, __arg4, __arg5);
                                return __ret;
                            }
                        }
                    }
                }
            }
        }

        public static int VslsSSEditCovCor(global::System.IntPtr _0, ref float _1, ref float _2, ref int _3, ref float _4, ref int _5)
        {
            fixed (float* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (float* __refParamPtr2 = &_2)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (int* __refParamPtr3 = &_3)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (float* __refParamPtr4 = &_4)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (int* __refParamPtr5 = &_5)
                            {
                                var __arg5 = __refParamPtr5;
                                var __ret = __Internal.VslsSSEditCovCor(_0, __arg1, __arg2, __arg3, __arg4, __arg5);
                                return __ret;
                            }
                        }
                    }
                }
            }
        }

        public static int VsldSSEditCP(global::System.IntPtr _0, ref double _1, ref double _2, ref double _3, ref int _4)
        {
            fixed (double* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (double* __refParamPtr2 = &_2)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (double* __refParamPtr3 = &_3)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (int* __refParamPtr4 = &_4)
                        {
                            var __arg4 = __refParamPtr4;
                            var __ret = __Internal.VsldSSEditCP(_0, __arg1, __arg2, __arg3, __arg4);
                            return __ret;
                        }
                    }
                }
            }
        }

        public static int VslsSSEditCP(global::System.IntPtr _0, ref float _1, ref float _2, ref float _3, ref int _4)
        {
            fixed (float* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (float* __refParamPtr2 = &_2)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (float* __refParamPtr3 = &_3)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (int* __refParamPtr4 = &_4)
                        {
                            var __arg4 = __refParamPtr4;
                            var __ret = __Internal.VslsSSEditCP(_0, __arg1, __arg2, __arg3, __arg4);
                            return __ret;
                        }
                    }
                }
            }
        }

        public static int VsldSSEditPartialCovCor(global::System.IntPtr _0, ref int _1, ref double _2, ref int _3, ref double _4, ref int _5, ref double _6, ref int _7, ref double _8, ref int _9)
        {
            fixed (int* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (double* __refParamPtr2 = &_2)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (int* __refParamPtr3 = &_3)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (double* __refParamPtr4 = &_4)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (int* __refParamPtr5 = &_5)
                            {
                                var __arg5 = __refParamPtr5;
                                fixed (double* __refParamPtr6 = &_6)
                                {
                                    var __arg6 = __refParamPtr6;
                                    fixed (int* __refParamPtr7 = &_7)
                                    {
                                        var __arg7 = __refParamPtr7;
                                        fixed (double* __refParamPtr8 = &_8)
                                        {
                                            var __arg8 = __refParamPtr8;
                                            fixed (int* __refParamPtr9 = &_9)
                                            {
                                                var __arg9 = __refParamPtr9;
                                                var __ret = __Internal.VsldSSEditPartialCovCor(_0, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8, __arg9);
                                                return __ret;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static int VslsSSEditPartialCovCor(global::System.IntPtr _0, ref int _1, ref float _2, ref int _3, ref float _4, ref int _5, ref float _6, ref int _7, ref float _8, ref int _9)
        {
            fixed (int* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (float* __refParamPtr2 = &_2)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (int* __refParamPtr3 = &_3)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (float* __refParamPtr4 = &_4)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (int* __refParamPtr5 = &_5)
                            {
                                var __arg5 = __refParamPtr5;
                                fixed (float* __refParamPtr6 = &_6)
                                {
                                    var __arg6 = __refParamPtr6;
                                    fixed (int* __refParamPtr7 = &_7)
                                    {
                                        var __arg7 = __refParamPtr7;
                                        fixed (float* __refParamPtr8 = &_8)
                                        {
                                            var __arg8 = __refParamPtr8;
                                            fixed (int* __refParamPtr9 = &_9)
                                            {
                                                var __arg9 = __refParamPtr9;
                                                var __ret = __Internal.VslsSSEditPartialCovCor(_0, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8, __arg9);
                                                return __ret;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static int VsldSSEditQuantiles(global::System.IntPtr _0, ref int _1, ref double _2, ref double _3, ref double _4, ref int _5)
        {
            fixed (int* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (double* __refParamPtr2 = &_2)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (double* __refParamPtr3 = &_3)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (double* __refParamPtr4 = &_4)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (int* __refParamPtr5 = &_5)
                            {
                                var __arg5 = __refParamPtr5;
                                var __ret = __Internal.VsldSSEditQuantiles(_0, __arg1, __arg2, __arg3, __arg4, __arg5);
                                return __ret;
                            }
                        }
                    }
                }
            }
        }

        public static int VslsSSEditQuantiles(global::System.IntPtr _0, ref int _1, ref float _2, ref float _3, ref float _4, ref int _5)
        {
            fixed (int* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (float* __refParamPtr2 = &_2)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (float* __refParamPtr3 = &_3)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (float* __refParamPtr4 = &_4)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (int* __refParamPtr5 = &_5)
                            {
                                var __arg5 = __refParamPtr5;
                                var __ret = __Internal.VslsSSEditQuantiles(_0, __arg1, __arg2, __arg3, __arg4, __arg5);
                                return __ret;
                            }
                        }
                    }
                }
            }
        }

        public static int VsldSSEditStreamQuantiles(global::System.IntPtr _0, ref int _1, ref double _2, ref double _3, ref int _4, ref double _5)
        {
            fixed (int* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (double* __refParamPtr2 = &_2)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (double* __refParamPtr3 = &_3)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (int* __refParamPtr4 = &_4)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (double* __refParamPtr5 = &_5)
                            {
                                var __arg5 = __refParamPtr5;
                                var __ret = __Internal.VsldSSEditStreamQuantiles(_0, __arg1, __arg2, __arg3, __arg4, __arg5);
                                return __ret;
                            }
                        }
                    }
                }
            }
        }

        public static int VslsSSEditStreamQuantiles(global::System.IntPtr _0, ref int _1, ref float _2, ref float _3, ref int _4, ref float _5)
        {
            fixed (int* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (float* __refParamPtr2 = &_2)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (float* __refParamPtr3 = &_3)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (int* __refParamPtr4 = &_4)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (float* __refParamPtr5 = &_5)
                            {
                                var __arg5 = __refParamPtr5;
                                var __ret = __Internal.VslsSSEditStreamQuantiles(_0, __arg1, __arg2, __arg3, __arg4, __arg5);
                                return __ret;
                            }
                        }
                    }
                }
            }
        }

        public static int VsldSSEditPooledCovariance(global::System.IntPtr _0, ref int _1, ref double _2, ref double _3, ref int _4, ref double _5, ref double _6)
        {
            fixed (int* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (double* __refParamPtr2 = &_2)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (double* __refParamPtr3 = &_3)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (int* __refParamPtr4 = &_4)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (double* __refParamPtr5 = &_5)
                            {
                                var __arg5 = __refParamPtr5;
                                fixed (double* __refParamPtr6 = &_6)
                                {
                                    var __arg6 = __refParamPtr6;
                                    var __ret = __Internal.VsldSSEditPooledCovariance(_0, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6);
                                    return __ret;
                                }
                            }
                        }
                    }
                }
            }
        }

        public static int VslsSSEditPooledCovariance(global::System.IntPtr _0, ref int _1, ref float _2, ref float _3, ref int _4, ref float _5, ref float _6)
        {
            fixed (int* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (float* __refParamPtr2 = &_2)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (float* __refParamPtr3 = &_3)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (int* __refParamPtr4 = &_4)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (float* __refParamPtr5 = &_5)
                            {
                                var __arg5 = __refParamPtr5;
                                fixed (float* __refParamPtr6 = &_6)
                                {
                                    var __arg6 = __refParamPtr6;
                                    var __ret = __Internal.VslsSSEditPooledCovariance(_0, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6);
                                    return __ret;
                                }
                            }
                        }
                    }
                }
            }
        }

        public static int VsldSSEditRobustCovariance(global::System.IntPtr _0, ref int _1, ref int _2, ref double _3, ref double _4, ref double _5)
        {
            fixed (int* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (int* __refParamPtr2 = &_2)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (double* __refParamPtr3 = &_3)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (double* __refParamPtr4 = &_4)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (double* __refParamPtr5 = &_5)
                            {
                                var __arg5 = __refParamPtr5;
                                var __ret = __Internal.VsldSSEditRobustCovariance(_0, __arg1, __arg2, __arg3, __arg4, __arg5);
                                return __ret;
                            }
                        }
                    }
                }
            }
        }

        public static int VslsSSEditRobustCovariance(global::System.IntPtr _0, ref int _1, ref int _2, ref float _3, ref float _4, ref float _5)
        {
            fixed (int* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (int* __refParamPtr2 = &_2)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (float* __refParamPtr3 = &_3)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (float* __refParamPtr4 = &_4)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (float* __refParamPtr5 = &_5)
                            {
                                var __arg5 = __refParamPtr5;
                                var __ret = __Internal.VslsSSEditRobustCovariance(_0, __arg1, __arg2, __arg3, __arg4, __arg5);
                                return __ret;
                            }
                        }
                    }
                }
            }
        }

        public static int VsldSSEditOutliersDetection(global::System.IntPtr _0, ref int _1, ref double _2, ref double _3)
        {
            fixed (int* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (double* __refParamPtr2 = &_2)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (double* __refParamPtr3 = &_3)
                    {
                        var __arg3 = __refParamPtr3;
                        var __ret = __Internal.VsldSSEditOutliersDetection(_0, __arg1, __arg2, __arg3);
                        return __ret;
                    }
                }
            }
        }

        public static int VslsSSEditOutliersDetection(global::System.IntPtr _0, ref int _1, ref float _2, ref float _3)
        {
            fixed (int* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (float* __refParamPtr2 = &_2)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (float* __refParamPtr3 = &_3)
                    {
                        var __arg3 = __refParamPtr3;
                        var __ret = __Internal.VslsSSEditOutliersDetection(_0, __arg1, __arg2, __arg3);
                        return __ret;
                    }
                }
            }
        }

        public static int VsldSSEditMissingValues(global::System.IntPtr _0, ref int _1, ref double _2, ref int _3, ref double _4, ref int _5, ref double _6, ref int _7, ref double _8, ref int _9, ref double _10)
        {
            fixed (int* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (double* __refParamPtr2 = &_2)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (int* __refParamPtr3 = &_3)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (double* __refParamPtr4 = &_4)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (int* __refParamPtr5 = &_5)
                            {
                                var __arg5 = __refParamPtr5;
                                fixed (double* __refParamPtr6 = &_6)
                                {
                                    var __arg6 = __refParamPtr6;
                                    fixed (int* __refParamPtr7 = &_7)
                                    {
                                        var __arg7 = __refParamPtr7;
                                        fixed (double* __refParamPtr8 = &_8)
                                        {
                                            var __arg8 = __refParamPtr8;
                                            fixed (int* __refParamPtr9 = &_9)
                                            {
                                                var __arg9 = __refParamPtr9;
                                                fixed (double* __refParamPtr10 = &_10)
                                                {
                                                    var __arg10 = __refParamPtr10;
                                                    var __ret = __Internal.VsldSSEditMissingValues(_0, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8, __arg9, __arg10);
                                                    return __ret;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static int VslsSSEditMissingValues(global::System.IntPtr _0, ref int _1, ref float _2, ref int _3, ref float _4, ref int _5, ref float _6, ref int _7, ref float _8, ref int _9, ref float _10)
        {
            fixed (int* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (float* __refParamPtr2 = &_2)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (int* __refParamPtr3 = &_3)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (float* __refParamPtr4 = &_4)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (int* __refParamPtr5 = &_5)
                            {
                                var __arg5 = __refParamPtr5;
                                fixed (float* __refParamPtr6 = &_6)
                                {
                                    var __arg6 = __refParamPtr6;
                                    fixed (int* __refParamPtr7 = &_7)
                                    {
                                        var __arg7 = __refParamPtr7;
                                        fixed (float* __refParamPtr8 = &_8)
                                        {
                                            var __arg8 = __refParamPtr8;
                                            fixed (int* __refParamPtr9 = &_9)
                                            {
                                                var __arg9 = __refParamPtr9;
                                                fixed (float* __refParamPtr10 = &_10)
                                                {
                                                    var __arg10 = __refParamPtr10;
                                                    var __ret = __Internal.VslsSSEditMissingValues(_0, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8, __arg9, __arg10);
                                                    return __ret;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static int VsldSSEditCorParameterization(global::System.IntPtr _0, ref double _1, ref int _2, ref double _3, ref int _4)
        {
            fixed (double* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (int* __refParamPtr2 = &_2)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (double* __refParamPtr3 = &_3)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (int* __refParamPtr4 = &_4)
                        {
                            var __arg4 = __refParamPtr4;
                            var __ret = __Internal.VsldSSEditCorParameterization(_0, __arg1, __arg2, __arg3, __arg4);
                            return __ret;
                        }
                    }
                }
            }
        }

        public static int VslsSSEditCorParameterization(global::System.IntPtr _0, ref float _1, ref int _2, ref float _3, ref int _4)
        {
            fixed (float* __refParamPtr1 = &_1)
            {
                var __arg1 = __refParamPtr1;
                fixed (int* __refParamPtr2 = &_2)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (float* __refParamPtr3 = &_3)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (int* __refParamPtr4 = &_4)
                        {
                            var __arg4 = __refParamPtr4;
                            var __ret = __Internal.VslsSSEditCorParameterization(_0, __arg1, __arg2, __arg3, __arg4);
                            return __ret;
                        }
                    }
                }
            }
        }

        public static int VsldSSCompute(global::System.IntPtr _0, ulong _1, int _2)
        {
            var __ret = __Internal.VsldSSCompute(_0, _1, _2);
            return __ret;
        }

        public static int VslsSSCompute(global::System.IntPtr _0, ulong _1, int _2)
        {
            var __ret = __Internal.VslsSSCompute(_0, _1, _2);
            return __ret;
        }

        public static int VslSSDeleteTask(global::System.IntPtr _0)
        {
            var __ret = __Internal.VslSSDeleteTask(_0);
            return __ret;
        }
    }
}
