// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace IntelMKL.LP64
{
    public unsafe partial class Blacs
    {
        public partial struct __Internal
        {
            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="igamx2d")]
            internal static extern void Igamx2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string scope, [MarshalAs(UnmanagedType.LPStr)] string top, int* m, int* n, int* A, int* lda, int* rA, int* cA, int* ldia, int* rdest, int* cdest);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="sgamx2d")]
            internal static extern void Sgamx2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string scope, [MarshalAs(UnmanagedType.LPStr)] string top, int* m, int* n, float* A, int* lda, int* rA, int* cA, int* ldia, int* rdest, int* cdest);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dgamx2d")]
            internal static extern void Dgamx2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string scope, [MarshalAs(UnmanagedType.LPStr)] string top, int* m, int* n, double* A, int* lda, int* rA, int* cA, int* ldia, int* rdest, int* cdest);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cgamx2d")]
            internal static extern void Cgamx2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string scope, [MarshalAs(UnmanagedType.LPStr)] string top, int* m, int* n, float* A, int* lda, int* rA, int* cA, int* ldia, int* rdest, int* cdest);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="zgamx2d")]
            internal static extern void Zgamx2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string scope, [MarshalAs(UnmanagedType.LPStr)] string top, int* m, int* n, double* A, int* lda, int* rA, int* cA, int* ldia, int* rdest, int* cdest);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="igamn2d")]
            internal static extern void Igamn2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string scope, [MarshalAs(UnmanagedType.LPStr)] string top, int* m, int* n, int* A, int* lda, int* rA, int* cA, int* ldia, int* rdest, int* cdest);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="sgamn2d")]
            internal static extern void Sgamn2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string scope, [MarshalAs(UnmanagedType.LPStr)] string top, int* m, int* n, float* A, int* lda, int* rA, int* cA, int* ldia, int* rdest, int* cdest);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dgamn2d")]
            internal static extern void Dgamn2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string scope, [MarshalAs(UnmanagedType.LPStr)] string top, int* m, int* n, double* A, int* lda, int* rA, int* cA, int* ldia, int* rdest, int* cdest);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cgamn2d")]
            internal static extern void Cgamn2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string scope, [MarshalAs(UnmanagedType.LPStr)] string top, int* m, int* n, float* A, int* lda, int* rA, int* cA, int* ldia, int* rdest, int* cdest);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="zgamn2d")]
            internal static extern void Zgamn2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string scope, [MarshalAs(UnmanagedType.LPStr)] string top, int* m, int* n, double* A, int* lda, int* rA, int* cA, int* ldia, int* rdest, int* cdest);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="igsum2d")]
            internal static extern void Igsum2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string scope, [MarshalAs(UnmanagedType.LPStr)] string top, int* m, int* n, int* A, int* lda, int* rdest, int* cdest);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="sgsum2d")]
            internal static extern void Sgsum2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string scope, [MarshalAs(UnmanagedType.LPStr)] string top, int* m, int* n, float* A, int* lda, int* rdest, int* cdest);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dgsum2d")]
            internal static extern void Dgsum2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string scope, [MarshalAs(UnmanagedType.LPStr)] string top, int* m, int* n, double* A, int* lda, int* rdest, int* cdest);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cgsum2d")]
            internal static extern void Cgsum2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string scope, [MarshalAs(UnmanagedType.LPStr)] string top, int* m, int* n, float* A, int* lda, int* rdest, int* cdest);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="zgsum2d")]
            internal static extern void Zgsum2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string scope, [MarshalAs(UnmanagedType.LPStr)] string top, int* m, int* n, double* A, int* lda, int* rdest, int* cdest);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="igesd2d")]
            internal static extern void Igesd2d(int* ConTxt, int* m, int* n, int* A, int* lda, int* rdest, int* cdest);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="sgesd2d")]
            internal static extern void Sgesd2d(int* ConTxt, int* m, int* n, float* A, int* lda, int* rdest, int* cdest);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dgesd2d")]
            internal static extern void Dgesd2d(int* ConTxt, int* m, int* n, double* A, int* lda, int* rdest, int* cdest);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cgesd2d")]
            internal static extern void Cgesd2d(int* ConTxt, int* m, int* n, float* A, int* lda, int* rdest, int* cdest);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="zgesd2d")]
            internal static extern void Zgesd2d(int* ConTxt, int* m, int* n, double* A, int* lda, int* rdest, int* cdest);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="itrsd2d")]
            internal static extern void Itrsd2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string diag, int* m, int* n, int* A, int* lda, int* rdest, int* cdest);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="strsd2d")]
            internal static extern void Strsd2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string diag, int* m, int* n, float* A, int* lda, int* rdest, int* cdest);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dtrsd2d")]
            internal static extern void Dtrsd2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string diag, int* m, int* n, double* A, int* lda, int* rdest, int* cdest);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="ctrsd2d")]
            internal static extern void Ctrsd2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string diag, int* m, int* n, float* A, int* lda, int* rdest, int* cdest);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="ztrsd2d")]
            internal static extern void Ztrsd2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string diag, int* m, int* n, double* A, int* lda, int* rdest, int* cdest);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="igerv2d")]
            internal static extern void Igerv2d(int* ConTxt, int* m, int* n, int* A, int* lda, int* rsrc, int* csrc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="sgerv2d")]
            internal static extern void Sgerv2d(int* ConTxt, int* m, int* n, float* A, int* lda, int* rsrc, int* csrc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dgerv2d")]
            internal static extern void Dgerv2d(int* ConTxt, int* m, int* n, double* A, int* lda, int* rsrc, int* csrc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cgerv2d")]
            internal static extern void Cgerv2d(int* ConTxt, int* m, int* n, float* A, int* lda, int* rsrc, int* csrc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="zgerv2d")]
            internal static extern void Zgerv2d(int* ConTxt, int* m, int* n, double* A, int* lda, int* rsrc, int* csrc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="itrrv2d")]
            internal static extern void Itrrv2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string diag, int* m, int* n, int* A, int* lda, int* rsrc, int* csrc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="strrv2d")]
            internal static extern void Strrv2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string diag, int* m, int* n, float* A, int* lda, int* rsrc, int* csrc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dtrrv2d")]
            internal static extern void Dtrrv2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string diag, int* m, int* n, double* A, int* lda, int* rsrc, int* csrc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="ctrrv2d")]
            internal static extern void Ctrrv2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string diag, int* m, int* n, float* A, int* lda, int* rsrc, int* csrc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="ztrrv2d")]
            internal static extern void Ztrrv2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string diag, int* m, int* n, double* A, int* lda, int* rsrc, int* csrc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="igebs2d")]
            internal static extern void Igebs2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string scope, [MarshalAs(UnmanagedType.LPStr)] string top, int* m, int* n, int* A, int* lda);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="sgebs2d")]
            internal static extern void Sgebs2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string scope, [MarshalAs(UnmanagedType.LPStr)] string top, int* m, int* n, float* A, int* lda);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dgebs2d")]
            internal static extern void Dgebs2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string scope, [MarshalAs(UnmanagedType.LPStr)] string top, int* m, int* n, double* A, int* lda);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cgebs2d")]
            internal static extern void Cgebs2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string scope, [MarshalAs(UnmanagedType.LPStr)] string top, int* m, int* n, float* A, int* lda);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="zgebs2d")]
            internal static extern void Zgebs2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string scope, [MarshalAs(UnmanagedType.LPStr)] string top, int* m, int* n, double* A, int* lda);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="itrbs2d")]
            internal static extern void Itrbs2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string scope, [MarshalAs(UnmanagedType.LPStr)] string top, [MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string diag, int* m, int* n, int* A, int* lda);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="strbs2d")]
            internal static extern void Strbs2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string scope, [MarshalAs(UnmanagedType.LPStr)] string top, [MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string diag, int* m, int* n, float* A, int* lda);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dtrbs2d")]
            internal static extern void Dtrbs2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string scope, [MarshalAs(UnmanagedType.LPStr)] string top, [MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string diag, int* m, int* n, double* A, int* lda);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="ctrbs2d")]
            internal static extern void Ctrbs2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string scope, [MarshalAs(UnmanagedType.LPStr)] string top, [MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string diag, int* m, int* n, float* A, int* lda);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="ztrbs2d")]
            internal static extern void Ztrbs2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string scope, [MarshalAs(UnmanagedType.LPStr)] string top, [MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string diag, int* m, int* n, double* A, int* lda);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="igebr2d")]
            internal static extern void Igebr2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string scope, [MarshalAs(UnmanagedType.LPStr)] string top, int* m, int* n, int* A, int* lda, int* rsrc, int* csrc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="sgebr2d")]
            internal static extern void Sgebr2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string scope, [MarshalAs(UnmanagedType.LPStr)] string top, int* m, int* n, float* A, int* lda, int* rsrc, int* csrc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dgebr2d")]
            internal static extern void Dgebr2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string scope, [MarshalAs(UnmanagedType.LPStr)] string top, int* m, int* n, double* A, int* lda, int* rsrc, int* csrc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cgebr2d")]
            internal static extern void Cgebr2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string scope, [MarshalAs(UnmanagedType.LPStr)] string top, int* m, int* n, float* A, int* lda, int* rsrc, int* csrc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="zgebr2d")]
            internal static extern void Zgebr2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string scope, [MarshalAs(UnmanagedType.LPStr)] string top, int* m, int* n, double* A, int* lda, int* rsrc, int* csrc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="itrbr2d")]
            internal static extern void Itrbr2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string scope, [MarshalAs(UnmanagedType.LPStr)] string top, [MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string diag, int* m, int* n, int* A, int* lda, int* rsrc, int* csrc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="strbr2d")]
            internal static extern void Strbr2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string scope, [MarshalAs(UnmanagedType.LPStr)] string top, [MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string diag, int* m, int* n, float* A, int* lda, int* rsrc, int* csrc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dtrbr2d")]
            internal static extern void Dtrbr2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string scope, [MarshalAs(UnmanagedType.LPStr)] string top, [MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string diag, int* m, int* n, double* A, int* lda, int* rsrc, int* csrc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="ctrbr2d")]
            internal static extern void Ctrbr2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string scope, [MarshalAs(UnmanagedType.LPStr)] string top, [MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string diag, int* m, int* n, float* A, int* lda, int* rsrc, int* csrc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="ztrbr2d")]
            internal static extern void Ztrbr2d(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string scope, [MarshalAs(UnmanagedType.LPStr)] string top, [MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string diag, int* m, int* n, double* A, int* lda, int* rsrc, int* csrc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="blacs_pinfo")]
            internal static extern void BlacsPinfo(int* mypnum, int* nprocs);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="blacs_setup")]
            internal static extern void BlacsSetup(int* mypnum, int* nprocs);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="blacs_get")]
            internal static extern void BlacsGet(int* ConTxt, int* what, int* val);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="blacs_set")]
            internal static extern void BlacsSet(int* ConTxt, int* what, int* val);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="blacs_gridinit")]
            internal static extern void BlacsGridinit(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string layout, int* nprow, int* npcol);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="blacs_gridmap")]
            internal static extern void BlacsGridmap(int* ConTxt, int* usermap, int* ldup, int* nprow0, int* npcol0);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="blacs_freebuff")]
            internal static extern void BlacsFreebuff(int* ConTxt, int* Wait);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="blacs_gridexit")]
            internal static extern void BlacsGridexit(int* ConTxt);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="blacs_abort")]
            internal static extern void BlacsAbort(int* ConTxt, int* ErrNo);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="blacs_exit")]
            internal static extern void BlacsExit(int* notDone);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="blacs_gridinfo")]
            internal static extern void BlacsGridinfo(int* ConTxt, int* nprow, int* npcol, int* myrow, int* mycol);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="blacs_pnum")]
            internal static extern int BlacsPnum(int* ConTxt, int* prow, int* pcol);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="blacs_pcoord")]
            internal static extern void BlacsPcoord(int* ConTxt, int* nodenum, int* prow, int* pcol);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="blacs_barrier")]
            internal static extern void BlacsBarrier(int* ConTxt, [MarshalAs(UnmanagedType.LPStr)] string scope);
        }

        public static void Igamx2d(ref int ConTxt, string scope, string top, ref int m, ref int n, ref int A, ref int lda, ref int rA, ref int cA, ref int ldia, ref int rdest, ref int cdest)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr3 = &m)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (int* __refParamPtr4 = &n)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (int* __refParamPtr5 = &A)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (int* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (int* __refParamPtr7 = &rA)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (int* __refParamPtr8 = &cA)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        fixed (int* __refParamPtr9 = &ldia)
                                        {
                                            var __arg9 = __refParamPtr9;
                                            fixed (int* __refParamPtr10 = &rdest)
                                            {
                                                var __arg10 = __refParamPtr10;
                                                fixed (int* __refParamPtr11 = &cdest)
                                                {
                                                    var __arg11 = __refParamPtr11;
                                                    __Internal.Igamx2d(__arg0, scope, top, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8, __arg9, __arg10, __arg11);
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Sgamx2d(ref int ConTxt, string scope, string top, ref int m, ref int n, ref float A, ref int lda, ref int rA, ref int cA, ref int ldia, ref int rdest, ref int cdest)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr3 = &m)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (int* __refParamPtr4 = &n)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (float* __refParamPtr5 = &A)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (int* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (int* __refParamPtr7 = &rA)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (int* __refParamPtr8 = &cA)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        fixed (int* __refParamPtr9 = &ldia)
                                        {
                                            var __arg9 = __refParamPtr9;
                                            fixed (int* __refParamPtr10 = &rdest)
                                            {
                                                var __arg10 = __refParamPtr10;
                                                fixed (int* __refParamPtr11 = &cdest)
                                                {
                                                    var __arg11 = __refParamPtr11;
                                                    __Internal.Sgamx2d(__arg0, scope, top, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8, __arg9, __arg10, __arg11);
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Dgamx2d(ref int ConTxt, string scope, string top, ref int m, ref int n, ref double A, ref int lda, ref int rA, ref int cA, ref int ldia, ref int rdest, ref int cdest)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr3 = &m)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (int* __refParamPtr4 = &n)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (double* __refParamPtr5 = &A)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (int* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (int* __refParamPtr7 = &rA)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (int* __refParamPtr8 = &cA)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        fixed (int* __refParamPtr9 = &ldia)
                                        {
                                            var __arg9 = __refParamPtr9;
                                            fixed (int* __refParamPtr10 = &rdest)
                                            {
                                                var __arg10 = __refParamPtr10;
                                                fixed (int* __refParamPtr11 = &cdest)
                                                {
                                                    var __arg11 = __refParamPtr11;
                                                    __Internal.Dgamx2d(__arg0, scope, top, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8, __arg9, __arg10, __arg11);
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Cgamx2d(ref int ConTxt, string scope, string top, ref int m, ref int n, ref float A, ref int lda, ref int rA, ref int cA, ref int ldia, ref int rdest, ref int cdest)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr3 = &m)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (int* __refParamPtr4 = &n)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (float* __refParamPtr5 = &A)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (int* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (int* __refParamPtr7 = &rA)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (int* __refParamPtr8 = &cA)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        fixed (int* __refParamPtr9 = &ldia)
                                        {
                                            var __arg9 = __refParamPtr9;
                                            fixed (int* __refParamPtr10 = &rdest)
                                            {
                                                var __arg10 = __refParamPtr10;
                                                fixed (int* __refParamPtr11 = &cdest)
                                                {
                                                    var __arg11 = __refParamPtr11;
                                                    __Internal.Cgamx2d(__arg0, scope, top, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8, __arg9, __arg10, __arg11);
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Zgamx2d(ref int ConTxt, string scope, string top, ref int m, ref int n, ref double A, ref int lda, ref int rA, ref int cA, ref int ldia, ref int rdest, ref int cdest)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr3 = &m)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (int* __refParamPtr4 = &n)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (double* __refParamPtr5 = &A)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (int* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (int* __refParamPtr7 = &rA)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (int* __refParamPtr8 = &cA)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        fixed (int* __refParamPtr9 = &ldia)
                                        {
                                            var __arg9 = __refParamPtr9;
                                            fixed (int* __refParamPtr10 = &rdest)
                                            {
                                                var __arg10 = __refParamPtr10;
                                                fixed (int* __refParamPtr11 = &cdest)
                                                {
                                                    var __arg11 = __refParamPtr11;
                                                    __Internal.Zgamx2d(__arg0, scope, top, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8, __arg9, __arg10, __arg11);
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Igamn2d(ref int ConTxt, string scope, string top, ref int m, ref int n, ref int A, ref int lda, ref int rA, ref int cA, ref int ldia, ref int rdest, ref int cdest)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr3 = &m)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (int* __refParamPtr4 = &n)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (int* __refParamPtr5 = &A)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (int* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (int* __refParamPtr7 = &rA)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (int* __refParamPtr8 = &cA)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        fixed (int* __refParamPtr9 = &ldia)
                                        {
                                            var __arg9 = __refParamPtr9;
                                            fixed (int* __refParamPtr10 = &rdest)
                                            {
                                                var __arg10 = __refParamPtr10;
                                                fixed (int* __refParamPtr11 = &cdest)
                                                {
                                                    var __arg11 = __refParamPtr11;
                                                    __Internal.Igamn2d(__arg0, scope, top, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8, __arg9, __arg10, __arg11);
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Sgamn2d(ref int ConTxt, string scope, string top, ref int m, ref int n, ref float A, ref int lda, ref int rA, ref int cA, ref int ldia, ref int rdest, ref int cdest)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr3 = &m)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (int* __refParamPtr4 = &n)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (float* __refParamPtr5 = &A)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (int* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (int* __refParamPtr7 = &rA)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (int* __refParamPtr8 = &cA)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        fixed (int* __refParamPtr9 = &ldia)
                                        {
                                            var __arg9 = __refParamPtr9;
                                            fixed (int* __refParamPtr10 = &rdest)
                                            {
                                                var __arg10 = __refParamPtr10;
                                                fixed (int* __refParamPtr11 = &cdest)
                                                {
                                                    var __arg11 = __refParamPtr11;
                                                    __Internal.Sgamn2d(__arg0, scope, top, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8, __arg9, __arg10, __arg11);
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Dgamn2d(ref int ConTxt, string scope, string top, ref int m, ref int n, ref double A, ref int lda, ref int rA, ref int cA, ref int ldia, ref int rdest, ref int cdest)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr3 = &m)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (int* __refParamPtr4 = &n)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (double* __refParamPtr5 = &A)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (int* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (int* __refParamPtr7 = &rA)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (int* __refParamPtr8 = &cA)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        fixed (int* __refParamPtr9 = &ldia)
                                        {
                                            var __arg9 = __refParamPtr9;
                                            fixed (int* __refParamPtr10 = &rdest)
                                            {
                                                var __arg10 = __refParamPtr10;
                                                fixed (int* __refParamPtr11 = &cdest)
                                                {
                                                    var __arg11 = __refParamPtr11;
                                                    __Internal.Dgamn2d(__arg0, scope, top, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8, __arg9, __arg10, __arg11);
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Cgamn2d(ref int ConTxt, string scope, string top, ref int m, ref int n, ref float A, ref int lda, ref int rA, ref int cA, ref int ldia, ref int rdest, ref int cdest)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr3 = &m)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (int* __refParamPtr4 = &n)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (float* __refParamPtr5 = &A)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (int* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (int* __refParamPtr7 = &rA)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (int* __refParamPtr8 = &cA)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        fixed (int* __refParamPtr9 = &ldia)
                                        {
                                            var __arg9 = __refParamPtr9;
                                            fixed (int* __refParamPtr10 = &rdest)
                                            {
                                                var __arg10 = __refParamPtr10;
                                                fixed (int* __refParamPtr11 = &cdest)
                                                {
                                                    var __arg11 = __refParamPtr11;
                                                    __Internal.Cgamn2d(__arg0, scope, top, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8, __arg9, __arg10, __arg11);
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Zgamn2d(ref int ConTxt, string scope, string top, ref int m, ref int n, ref double A, ref int lda, ref int rA, ref int cA, ref int ldia, ref int rdest, ref int cdest)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr3 = &m)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (int* __refParamPtr4 = &n)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (double* __refParamPtr5 = &A)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (int* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (int* __refParamPtr7 = &rA)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (int* __refParamPtr8 = &cA)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        fixed (int* __refParamPtr9 = &ldia)
                                        {
                                            var __arg9 = __refParamPtr9;
                                            fixed (int* __refParamPtr10 = &rdest)
                                            {
                                                var __arg10 = __refParamPtr10;
                                                fixed (int* __refParamPtr11 = &cdest)
                                                {
                                                    var __arg11 = __refParamPtr11;
                                                    __Internal.Zgamn2d(__arg0, scope, top, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8, __arg9, __arg10, __arg11);
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Igsum2d(ref int ConTxt, string scope, string top, ref int m, ref int n, ref int A, ref int lda, ref int rdest, ref int cdest)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr3 = &m)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (int* __refParamPtr4 = &n)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (int* __refParamPtr5 = &A)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (int* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (int* __refParamPtr7 = &rdest)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (int* __refParamPtr8 = &cdest)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        __Internal.Igsum2d(__arg0, scope, top, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Sgsum2d(ref int ConTxt, string scope, string top, ref int m, ref int n, ref float A, ref int lda, ref int rdest, ref int cdest)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr3 = &m)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (int* __refParamPtr4 = &n)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (float* __refParamPtr5 = &A)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (int* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (int* __refParamPtr7 = &rdest)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (int* __refParamPtr8 = &cdest)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        __Internal.Sgsum2d(__arg0, scope, top, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Dgsum2d(ref int ConTxt, string scope, string top, ref int m, ref int n, ref double A, ref int lda, ref int rdest, ref int cdest)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr3 = &m)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (int* __refParamPtr4 = &n)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (double* __refParamPtr5 = &A)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (int* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (int* __refParamPtr7 = &rdest)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (int* __refParamPtr8 = &cdest)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        __Internal.Dgsum2d(__arg0, scope, top, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Cgsum2d(ref int ConTxt, string scope, string top, ref int m, ref int n, ref float A, ref int lda, ref int rdest, ref int cdest)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr3 = &m)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (int* __refParamPtr4 = &n)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (float* __refParamPtr5 = &A)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (int* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (int* __refParamPtr7 = &rdest)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (int* __refParamPtr8 = &cdest)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        __Internal.Cgsum2d(__arg0, scope, top, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Zgsum2d(ref int ConTxt, string scope, string top, ref int m, ref int n, ref double A, ref int lda, ref int rdest, ref int cdest)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr3 = &m)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (int* __refParamPtr4 = &n)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (double* __refParamPtr5 = &A)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (int* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (int* __refParamPtr7 = &rdest)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (int* __refParamPtr8 = &cdest)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        __Internal.Zgsum2d(__arg0, scope, top, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Igesd2d(ref int ConTxt, ref int m, ref int n, ref int A, ref int lda, ref int rdest, ref int cdest)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr1 = &m)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (int* __refParamPtr2 = &n)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (int* __refParamPtr3 = &A)
                        {
                            var __arg3 = __refParamPtr3;
                            fixed (int* __refParamPtr4 = &lda)
                            {
                                var __arg4 = __refParamPtr4;
                                fixed (int* __refParamPtr5 = &rdest)
                                {
                                    var __arg5 = __refParamPtr5;
                                    fixed (int* __refParamPtr6 = &cdest)
                                    {
                                        var __arg6 = __refParamPtr6;
                                        __Internal.Igesd2d(__arg0, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Sgesd2d(ref int ConTxt, ref int m, ref int n, ref float A, ref int lda, ref int rdest, ref int cdest)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr1 = &m)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (int* __refParamPtr2 = &n)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (float* __refParamPtr3 = &A)
                        {
                            var __arg3 = __refParamPtr3;
                            fixed (int* __refParamPtr4 = &lda)
                            {
                                var __arg4 = __refParamPtr4;
                                fixed (int* __refParamPtr5 = &rdest)
                                {
                                    var __arg5 = __refParamPtr5;
                                    fixed (int* __refParamPtr6 = &cdest)
                                    {
                                        var __arg6 = __refParamPtr6;
                                        __Internal.Sgesd2d(__arg0, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Dgesd2d(ref int ConTxt, ref int m, ref int n, ref double A, ref int lda, ref int rdest, ref int cdest)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr1 = &m)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (int* __refParamPtr2 = &n)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (double* __refParamPtr3 = &A)
                        {
                            var __arg3 = __refParamPtr3;
                            fixed (int* __refParamPtr4 = &lda)
                            {
                                var __arg4 = __refParamPtr4;
                                fixed (int* __refParamPtr5 = &rdest)
                                {
                                    var __arg5 = __refParamPtr5;
                                    fixed (int* __refParamPtr6 = &cdest)
                                    {
                                        var __arg6 = __refParamPtr6;
                                        __Internal.Dgesd2d(__arg0, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Cgesd2d(ref int ConTxt, ref int m, ref int n, ref float A, ref int lda, ref int rdest, ref int cdest)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr1 = &m)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (int* __refParamPtr2 = &n)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (float* __refParamPtr3 = &A)
                        {
                            var __arg3 = __refParamPtr3;
                            fixed (int* __refParamPtr4 = &lda)
                            {
                                var __arg4 = __refParamPtr4;
                                fixed (int* __refParamPtr5 = &rdest)
                                {
                                    var __arg5 = __refParamPtr5;
                                    fixed (int* __refParamPtr6 = &cdest)
                                    {
                                        var __arg6 = __refParamPtr6;
                                        __Internal.Cgesd2d(__arg0, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Zgesd2d(ref int ConTxt, ref int m, ref int n, ref double A, ref int lda, ref int rdest, ref int cdest)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr1 = &m)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (int* __refParamPtr2 = &n)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (double* __refParamPtr3 = &A)
                        {
                            var __arg3 = __refParamPtr3;
                            fixed (int* __refParamPtr4 = &lda)
                            {
                                var __arg4 = __refParamPtr4;
                                fixed (int* __refParamPtr5 = &rdest)
                                {
                                    var __arg5 = __refParamPtr5;
                                    fixed (int* __refParamPtr6 = &cdest)
                                    {
                                        var __arg6 = __refParamPtr6;
                                        __Internal.Zgesd2d(__arg0, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Itrsd2d(ref int ConTxt, string uplo, string diag, ref int m, ref int n, ref int A, ref int lda, ref int rdest, ref int cdest)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr3 = &m)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (int* __refParamPtr4 = &n)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (int* __refParamPtr5 = &A)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (int* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (int* __refParamPtr7 = &rdest)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (int* __refParamPtr8 = &cdest)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        __Internal.Itrsd2d(__arg0, uplo, diag, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Strsd2d(ref int ConTxt, string uplo, string diag, ref int m, ref int n, ref float A, ref int lda, ref int rdest, ref int cdest)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr3 = &m)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (int* __refParamPtr4 = &n)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (float* __refParamPtr5 = &A)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (int* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (int* __refParamPtr7 = &rdest)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (int* __refParamPtr8 = &cdest)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        __Internal.Strsd2d(__arg0, uplo, diag, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Dtrsd2d(ref int ConTxt, string uplo, string diag, ref int m, ref int n, ref double A, ref int lda, ref int rdest, ref int cdest)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr3 = &m)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (int* __refParamPtr4 = &n)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (double* __refParamPtr5 = &A)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (int* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (int* __refParamPtr7 = &rdest)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (int* __refParamPtr8 = &cdest)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        __Internal.Dtrsd2d(__arg0, uplo, diag, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Ctrsd2d(ref int ConTxt, string uplo, string diag, ref int m, ref int n, ref float A, ref int lda, ref int rdest, ref int cdest)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr3 = &m)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (int* __refParamPtr4 = &n)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (float* __refParamPtr5 = &A)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (int* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (int* __refParamPtr7 = &rdest)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (int* __refParamPtr8 = &cdest)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        __Internal.Ctrsd2d(__arg0, uplo, diag, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Ztrsd2d(ref int ConTxt, string uplo, string diag, ref int m, ref int n, ref double A, ref int lda, ref int rdest, ref int cdest)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr3 = &m)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (int* __refParamPtr4 = &n)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (double* __refParamPtr5 = &A)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (int* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (int* __refParamPtr7 = &rdest)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (int* __refParamPtr8 = &cdest)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        __Internal.Ztrsd2d(__arg0, uplo, diag, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Igerv2d(ref int ConTxt, ref int m, ref int n, ref int A, ref int lda, ref int rsrc, ref int csrc)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr1 = &m)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (int* __refParamPtr2 = &n)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (int* __refParamPtr3 = &A)
                        {
                            var __arg3 = __refParamPtr3;
                            fixed (int* __refParamPtr4 = &lda)
                            {
                                var __arg4 = __refParamPtr4;
                                fixed (int* __refParamPtr5 = &rsrc)
                                {
                                    var __arg5 = __refParamPtr5;
                                    fixed (int* __refParamPtr6 = &csrc)
                                    {
                                        var __arg6 = __refParamPtr6;
                                        __Internal.Igerv2d(__arg0, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Sgerv2d(ref int ConTxt, ref int m, ref int n, ref float A, ref int lda, ref int rsrc, ref int csrc)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr1 = &m)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (int* __refParamPtr2 = &n)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (float* __refParamPtr3 = &A)
                        {
                            var __arg3 = __refParamPtr3;
                            fixed (int* __refParamPtr4 = &lda)
                            {
                                var __arg4 = __refParamPtr4;
                                fixed (int* __refParamPtr5 = &rsrc)
                                {
                                    var __arg5 = __refParamPtr5;
                                    fixed (int* __refParamPtr6 = &csrc)
                                    {
                                        var __arg6 = __refParamPtr6;
                                        __Internal.Sgerv2d(__arg0, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Dgerv2d(ref int ConTxt, ref int m, ref int n, ref double A, ref int lda, ref int rsrc, ref int csrc)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr1 = &m)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (int* __refParamPtr2 = &n)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (double* __refParamPtr3 = &A)
                        {
                            var __arg3 = __refParamPtr3;
                            fixed (int* __refParamPtr4 = &lda)
                            {
                                var __arg4 = __refParamPtr4;
                                fixed (int* __refParamPtr5 = &rsrc)
                                {
                                    var __arg5 = __refParamPtr5;
                                    fixed (int* __refParamPtr6 = &csrc)
                                    {
                                        var __arg6 = __refParamPtr6;
                                        __Internal.Dgerv2d(__arg0, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Cgerv2d(ref int ConTxt, ref int m, ref int n, ref float A, ref int lda, ref int rsrc, ref int csrc)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr1 = &m)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (int* __refParamPtr2 = &n)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (float* __refParamPtr3 = &A)
                        {
                            var __arg3 = __refParamPtr3;
                            fixed (int* __refParamPtr4 = &lda)
                            {
                                var __arg4 = __refParamPtr4;
                                fixed (int* __refParamPtr5 = &rsrc)
                                {
                                    var __arg5 = __refParamPtr5;
                                    fixed (int* __refParamPtr6 = &csrc)
                                    {
                                        var __arg6 = __refParamPtr6;
                                        __Internal.Cgerv2d(__arg0, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Zgerv2d(ref int ConTxt, ref int m, ref int n, ref double A, ref int lda, ref int rsrc, ref int csrc)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr1 = &m)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (int* __refParamPtr2 = &n)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (double* __refParamPtr3 = &A)
                        {
                            var __arg3 = __refParamPtr3;
                            fixed (int* __refParamPtr4 = &lda)
                            {
                                var __arg4 = __refParamPtr4;
                                fixed (int* __refParamPtr5 = &rsrc)
                                {
                                    var __arg5 = __refParamPtr5;
                                    fixed (int* __refParamPtr6 = &csrc)
                                    {
                                        var __arg6 = __refParamPtr6;
                                        __Internal.Zgerv2d(__arg0, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Itrrv2d(ref int ConTxt, string uplo, string diag, ref int m, ref int n, ref int A, ref int lda, ref int rsrc, ref int csrc)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr3 = &m)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (int* __refParamPtr4 = &n)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (int* __refParamPtr5 = &A)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (int* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (int* __refParamPtr7 = &rsrc)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (int* __refParamPtr8 = &csrc)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        __Internal.Itrrv2d(__arg0, uplo, diag, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Strrv2d(ref int ConTxt, string uplo, string diag, ref int m, ref int n, ref float A, ref int lda, ref int rsrc, ref int csrc)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr3 = &m)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (int* __refParamPtr4 = &n)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (float* __refParamPtr5 = &A)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (int* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (int* __refParamPtr7 = &rsrc)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (int* __refParamPtr8 = &csrc)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        __Internal.Strrv2d(__arg0, uplo, diag, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Dtrrv2d(ref int ConTxt, string uplo, string diag, ref int m, ref int n, ref double A, ref int lda, ref int rsrc, ref int csrc)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr3 = &m)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (int* __refParamPtr4 = &n)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (double* __refParamPtr5 = &A)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (int* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (int* __refParamPtr7 = &rsrc)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (int* __refParamPtr8 = &csrc)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        __Internal.Dtrrv2d(__arg0, uplo, diag, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Ctrrv2d(ref int ConTxt, string uplo, string diag, ref int m, ref int n, ref float A, ref int lda, ref int rsrc, ref int csrc)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr3 = &m)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (int* __refParamPtr4 = &n)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (float* __refParamPtr5 = &A)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (int* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (int* __refParamPtr7 = &rsrc)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (int* __refParamPtr8 = &csrc)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        __Internal.Ctrrv2d(__arg0, uplo, diag, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Ztrrv2d(ref int ConTxt, string uplo, string diag, ref int m, ref int n, ref double A, ref int lda, ref int rsrc, ref int csrc)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr3 = &m)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (int* __refParamPtr4 = &n)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (double* __refParamPtr5 = &A)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (int* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (int* __refParamPtr7 = &rsrc)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (int* __refParamPtr8 = &csrc)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        __Internal.Ztrrv2d(__arg0, uplo, diag, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Igebs2d(ref int ConTxt, string scope, string top, ref int m, ref int n, ref int A, ref int lda)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr3 = &m)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (int* __refParamPtr4 = &n)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (int* __refParamPtr5 = &A)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (int* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                __Internal.Igebs2d(__arg0, scope, top, __arg3, __arg4, __arg5, __arg6);
                            }
                        }
                    }
                }
            }
        }

        public static void Sgebs2d(ref int ConTxt, string scope, string top, ref int m, ref int n, ref float A, ref int lda)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr3 = &m)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (int* __refParamPtr4 = &n)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (float* __refParamPtr5 = &A)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (int* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                __Internal.Sgebs2d(__arg0, scope, top, __arg3, __arg4, __arg5, __arg6);
                            }
                        }
                    }
                }
            }
        }

        public static void Dgebs2d(ref int ConTxt, string scope, string top, ref int m, ref int n, ref double A, ref int lda)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr3 = &m)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (int* __refParamPtr4 = &n)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (double* __refParamPtr5 = &A)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (int* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                __Internal.Dgebs2d(__arg0, scope, top, __arg3, __arg4, __arg5, __arg6);
                            }
                        }
                    }
                }
            }
        }

        public static void Cgebs2d(ref int ConTxt, string scope, string top, ref int m, ref int n, ref float A, ref int lda)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr3 = &m)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (int* __refParamPtr4 = &n)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (float* __refParamPtr5 = &A)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (int* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                __Internal.Cgebs2d(__arg0, scope, top, __arg3, __arg4, __arg5, __arg6);
                            }
                        }
                    }
                }
            }
        }

        public static void Zgebs2d(ref int ConTxt, string scope, string top, ref int m, ref int n, ref double A, ref int lda)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr3 = &m)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (int* __refParamPtr4 = &n)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (double* __refParamPtr5 = &A)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (int* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                __Internal.Zgebs2d(__arg0, scope, top, __arg3, __arg4, __arg5, __arg6);
                            }
                        }
                    }
                }
            }
        }

        public static void Itrbs2d(ref int ConTxt, string scope, string top, string uplo, string diag, ref int m, ref int n, ref int A, ref int lda)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr5 = &m)
                {
                    var __arg5 = __refParamPtr5;
                    fixed (int* __refParamPtr6 = &n)
                    {
                        var __arg6 = __refParamPtr6;
                        fixed (int* __refParamPtr7 = &A)
                        {
                            var __arg7 = __refParamPtr7;
                            fixed (int* __refParamPtr8 = &lda)
                            {
                                var __arg8 = __refParamPtr8;
                                __Internal.Itrbs2d(__arg0, scope, top, uplo, diag, __arg5, __arg6, __arg7, __arg8);
                            }
                        }
                    }
                }
            }
        }

        public static void Strbs2d(ref int ConTxt, string scope, string top, string uplo, string diag, ref int m, ref int n, ref float A, ref int lda)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr5 = &m)
                {
                    var __arg5 = __refParamPtr5;
                    fixed (int* __refParamPtr6 = &n)
                    {
                        var __arg6 = __refParamPtr6;
                        fixed (float* __refParamPtr7 = &A)
                        {
                            var __arg7 = __refParamPtr7;
                            fixed (int* __refParamPtr8 = &lda)
                            {
                                var __arg8 = __refParamPtr8;
                                __Internal.Strbs2d(__arg0, scope, top, uplo, diag, __arg5, __arg6, __arg7, __arg8);
                            }
                        }
                    }
                }
            }
        }

        public static void Dtrbs2d(ref int ConTxt, string scope, string top, string uplo, string diag, ref int m, ref int n, ref double A, ref int lda)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr5 = &m)
                {
                    var __arg5 = __refParamPtr5;
                    fixed (int* __refParamPtr6 = &n)
                    {
                        var __arg6 = __refParamPtr6;
                        fixed (double* __refParamPtr7 = &A)
                        {
                            var __arg7 = __refParamPtr7;
                            fixed (int* __refParamPtr8 = &lda)
                            {
                                var __arg8 = __refParamPtr8;
                                __Internal.Dtrbs2d(__arg0, scope, top, uplo, diag, __arg5, __arg6, __arg7, __arg8);
                            }
                        }
                    }
                }
            }
        }

        public static void Ctrbs2d(ref int ConTxt, string scope, string top, string uplo, string diag, ref int m, ref int n, ref float A, ref int lda)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr5 = &m)
                {
                    var __arg5 = __refParamPtr5;
                    fixed (int* __refParamPtr6 = &n)
                    {
                        var __arg6 = __refParamPtr6;
                        fixed (float* __refParamPtr7 = &A)
                        {
                            var __arg7 = __refParamPtr7;
                            fixed (int* __refParamPtr8 = &lda)
                            {
                                var __arg8 = __refParamPtr8;
                                __Internal.Ctrbs2d(__arg0, scope, top, uplo, diag, __arg5, __arg6, __arg7, __arg8);
                            }
                        }
                    }
                }
            }
        }

        public static void Ztrbs2d(ref int ConTxt, string scope, string top, string uplo, string diag, ref int m, ref int n, ref double A, ref int lda)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr5 = &m)
                {
                    var __arg5 = __refParamPtr5;
                    fixed (int* __refParamPtr6 = &n)
                    {
                        var __arg6 = __refParamPtr6;
                        fixed (double* __refParamPtr7 = &A)
                        {
                            var __arg7 = __refParamPtr7;
                            fixed (int* __refParamPtr8 = &lda)
                            {
                                var __arg8 = __refParamPtr8;
                                __Internal.Ztrbs2d(__arg0, scope, top, uplo, diag, __arg5, __arg6, __arg7, __arg8);
                            }
                        }
                    }
                }
            }
        }

        public static void Igebr2d(ref int ConTxt, string scope, string top, ref int m, ref int n, ref int A, ref int lda, ref int rsrc, ref int csrc)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr3 = &m)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (int* __refParamPtr4 = &n)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (int* __refParamPtr5 = &A)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (int* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (int* __refParamPtr7 = &rsrc)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (int* __refParamPtr8 = &csrc)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        __Internal.Igebr2d(__arg0, scope, top, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Sgebr2d(ref int ConTxt, string scope, string top, ref int m, ref int n, ref float A, ref int lda, ref int rsrc, ref int csrc)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr3 = &m)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (int* __refParamPtr4 = &n)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (float* __refParamPtr5 = &A)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (int* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (int* __refParamPtr7 = &rsrc)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (int* __refParamPtr8 = &csrc)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        __Internal.Sgebr2d(__arg0, scope, top, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Dgebr2d(ref int ConTxt, string scope, string top, ref int m, ref int n, ref double A, ref int lda, ref int rsrc, ref int csrc)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr3 = &m)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (int* __refParamPtr4 = &n)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (double* __refParamPtr5 = &A)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (int* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (int* __refParamPtr7 = &rsrc)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (int* __refParamPtr8 = &csrc)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        __Internal.Dgebr2d(__arg0, scope, top, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Cgebr2d(ref int ConTxt, string scope, string top, ref int m, ref int n, ref float A, ref int lda, ref int rsrc, ref int csrc)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr3 = &m)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (int* __refParamPtr4 = &n)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (float* __refParamPtr5 = &A)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (int* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (int* __refParamPtr7 = &rsrc)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (int* __refParamPtr8 = &csrc)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        __Internal.Cgebr2d(__arg0, scope, top, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Zgebr2d(ref int ConTxt, string scope, string top, ref int m, ref int n, ref double A, ref int lda, ref int rsrc, ref int csrc)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr3 = &m)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (int* __refParamPtr4 = &n)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (double* __refParamPtr5 = &A)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (int* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (int* __refParamPtr7 = &rsrc)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (int* __refParamPtr8 = &csrc)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        __Internal.Zgebr2d(__arg0, scope, top, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Itrbr2d(ref int ConTxt, string scope, string top, string uplo, string diag, ref int m, ref int n, ref int A, ref int lda, ref int rsrc, ref int csrc)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr5 = &m)
                {
                    var __arg5 = __refParamPtr5;
                    fixed (int* __refParamPtr6 = &n)
                    {
                        var __arg6 = __refParamPtr6;
                        fixed (int* __refParamPtr7 = &A)
                        {
                            var __arg7 = __refParamPtr7;
                            fixed (int* __refParamPtr8 = &lda)
                            {
                                var __arg8 = __refParamPtr8;
                                fixed (int* __refParamPtr9 = &rsrc)
                                {
                                    var __arg9 = __refParamPtr9;
                                    fixed (int* __refParamPtr10 = &csrc)
                                    {
                                        var __arg10 = __refParamPtr10;
                                        __Internal.Itrbr2d(__arg0, scope, top, uplo, diag, __arg5, __arg6, __arg7, __arg8, __arg9, __arg10);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Strbr2d(ref int ConTxt, string scope, string top, string uplo, string diag, ref int m, ref int n, ref float A, ref int lda, ref int rsrc, ref int csrc)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr5 = &m)
                {
                    var __arg5 = __refParamPtr5;
                    fixed (int* __refParamPtr6 = &n)
                    {
                        var __arg6 = __refParamPtr6;
                        fixed (float* __refParamPtr7 = &A)
                        {
                            var __arg7 = __refParamPtr7;
                            fixed (int* __refParamPtr8 = &lda)
                            {
                                var __arg8 = __refParamPtr8;
                                fixed (int* __refParamPtr9 = &rsrc)
                                {
                                    var __arg9 = __refParamPtr9;
                                    fixed (int* __refParamPtr10 = &csrc)
                                    {
                                        var __arg10 = __refParamPtr10;
                                        __Internal.Strbr2d(__arg0, scope, top, uplo, diag, __arg5, __arg6, __arg7, __arg8, __arg9, __arg10);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Dtrbr2d(ref int ConTxt, string scope, string top, string uplo, string diag, ref int m, ref int n, ref double A, ref int lda, ref int rsrc, ref int csrc)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr5 = &m)
                {
                    var __arg5 = __refParamPtr5;
                    fixed (int* __refParamPtr6 = &n)
                    {
                        var __arg6 = __refParamPtr6;
                        fixed (double* __refParamPtr7 = &A)
                        {
                            var __arg7 = __refParamPtr7;
                            fixed (int* __refParamPtr8 = &lda)
                            {
                                var __arg8 = __refParamPtr8;
                                fixed (int* __refParamPtr9 = &rsrc)
                                {
                                    var __arg9 = __refParamPtr9;
                                    fixed (int* __refParamPtr10 = &csrc)
                                    {
                                        var __arg10 = __refParamPtr10;
                                        __Internal.Dtrbr2d(__arg0, scope, top, uplo, diag, __arg5, __arg6, __arg7, __arg8, __arg9, __arg10);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Ctrbr2d(ref int ConTxt, string scope, string top, string uplo, string diag, ref int m, ref int n, ref float A, ref int lda, ref int rsrc, ref int csrc)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr5 = &m)
                {
                    var __arg5 = __refParamPtr5;
                    fixed (int* __refParamPtr6 = &n)
                    {
                        var __arg6 = __refParamPtr6;
                        fixed (float* __refParamPtr7 = &A)
                        {
                            var __arg7 = __refParamPtr7;
                            fixed (int* __refParamPtr8 = &lda)
                            {
                                var __arg8 = __refParamPtr8;
                                fixed (int* __refParamPtr9 = &rsrc)
                                {
                                    var __arg9 = __refParamPtr9;
                                    fixed (int* __refParamPtr10 = &csrc)
                                    {
                                        var __arg10 = __refParamPtr10;
                                        __Internal.Ctrbr2d(__arg0, scope, top, uplo, diag, __arg5, __arg6, __arg7, __arg8, __arg9, __arg10);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Ztrbr2d(ref int ConTxt, string scope, string top, string uplo, string diag, ref int m, ref int n, ref double A, ref int lda, ref int rsrc, ref int csrc)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr5 = &m)
                {
                    var __arg5 = __refParamPtr5;
                    fixed (int* __refParamPtr6 = &n)
                    {
                        var __arg6 = __refParamPtr6;
                        fixed (double* __refParamPtr7 = &A)
                        {
                            var __arg7 = __refParamPtr7;
                            fixed (int* __refParamPtr8 = &lda)
                            {
                                var __arg8 = __refParamPtr8;
                                fixed (int* __refParamPtr9 = &rsrc)
                                {
                                    var __arg9 = __refParamPtr9;
                                    fixed (int* __refParamPtr10 = &csrc)
                                    {
                                        var __arg10 = __refParamPtr10;
                                        __Internal.Ztrbr2d(__arg0, scope, top, uplo, diag, __arg5, __arg6, __arg7, __arg8, __arg9, __arg10);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void BlacsPinfo(ref int mypnum, ref int nprocs)
        {
            fixed (int* __refParamPtr0 = &mypnum)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr1 = &nprocs)
                {
                    var __arg1 = __refParamPtr1;
                    __Internal.BlacsPinfo(__arg0, __arg1);
                }
            }
        }

        public static void BlacsSetup(ref int mypnum, ref int nprocs)
        {
            fixed (int* __refParamPtr0 = &mypnum)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr1 = &nprocs)
                {
                    var __arg1 = __refParamPtr1;
                    __Internal.BlacsSetup(__arg0, __arg1);
                }
            }
        }

        public static void BlacsGet(ref int ConTxt, ref int what, ref int val)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr1 = &what)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (int* __refParamPtr2 = &val)
                    {
                        var __arg2 = __refParamPtr2;
                        __Internal.BlacsGet(__arg0, __arg1, __arg2);
                    }
                }
            }
        }

        public static void BlacsSet(ref int ConTxt, ref int what, ref int val)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr1 = &what)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (int* __refParamPtr2 = &val)
                    {
                        var __arg2 = __refParamPtr2;
                        __Internal.BlacsSet(__arg0, __arg1, __arg2);
                    }
                }
            }
        }

        public static void BlacsGridinit(ref int ConTxt, string layout, ref int nprow, ref int npcol)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr2 = &nprow)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (int* __refParamPtr3 = &npcol)
                    {
                        var __arg3 = __refParamPtr3;
                        __Internal.BlacsGridinit(__arg0, layout, __arg2, __arg3);
                    }
                }
            }
        }

        public static void BlacsGridmap(ref int ConTxt, ref int usermap, ref int ldup, ref int nprow0, ref int npcol0)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr1 = &usermap)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (int* __refParamPtr2 = &ldup)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (int* __refParamPtr3 = &nprow0)
                        {
                            var __arg3 = __refParamPtr3;
                            fixed (int* __refParamPtr4 = &npcol0)
                            {
                                var __arg4 = __refParamPtr4;
                                __Internal.BlacsGridmap(__arg0, __arg1, __arg2, __arg3, __arg4);
                            }
                        }
                    }
                }
            }
        }

        public static void BlacsFreebuff(ref int ConTxt, ref int Wait)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr1 = &Wait)
                {
                    var __arg1 = __refParamPtr1;
                    __Internal.BlacsFreebuff(__arg0, __arg1);
                }
            }
        }

        public static void BlacsGridexit(ref int ConTxt)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                __Internal.BlacsGridexit(__arg0);
            }
        }

        public static void BlacsAbort(ref int ConTxt, ref int ErrNo)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr1 = &ErrNo)
                {
                    var __arg1 = __refParamPtr1;
                    __Internal.BlacsAbort(__arg0, __arg1);
                }
            }
        }

        public static void BlacsExit(ref int notDone)
        {
            fixed (int* __refParamPtr0 = &notDone)
            {
                var __arg0 = __refParamPtr0;
                __Internal.BlacsExit(__arg0);
            }
        }

        public static void BlacsGridinfo(ref int ConTxt, ref int nprow, ref int npcol, ref int myrow, ref int mycol)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr1 = &nprow)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (int* __refParamPtr2 = &npcol)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (int* __refParamPtr3 = &myrow)
                        {
                            var __arg3 = __refParamPtr3;
                            fixed (int* __refParamPtr4 = &mycol)
                            {
                                var __arg4 = __refParamPtr4;
                                __Internal.BlacsGridinfo(__arg0, __arg1, __arg2, __arg3, __arg4);
                            }
                        }
                    }
                }
            }
        }

        public static int BlacsPnum(ref int ConTxt, ref int prow, ref int pcol)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr1 = &prow)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (int* __refParamPtr2 = &pcol)
                    {
                        var __arg2 = __refParamPtr2;
                        var __ret = __Internal.BlacsPnum(__arg0, __arg1, __arg2);
                        return __ret;
                    }
                }
            }
        }

        public static void BlacsPcoord(ref int ConTxt, ref int nodenum, ref int prow, ref int pcol)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                fixed (int* __refParamPtr1 = &nodenum)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (int* __refParamPtr2 = &prow)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (int* __refParamPtr3 = &pcol)
                        {
                            var __arg3 = __refParamPtr3;
                            __Internal.BlacsPcoord(__arg0, __arg1, __arg2, __arg3);
                        }
                    }
                }
            }
        }

        public static void BlacsBarrier(ref int ConTxt, string scope)
        {
            fixed (int* __refParamPtr0 = &ConTxt)
            {
                var __arg0 = __refParamPtr0;
                __Internal.BlacsBarrier(__arg0, scope);
            }
        }
    }
}
