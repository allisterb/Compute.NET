// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace IntelMKL.ILP64
{
    public unsafe partial class Blas
    {
        public partial struct __Internal
        {
            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="xerbla")]
            internal static extern void Xerbla([MarshalAs(UnmanagedType.LPStr)] string srname, int* info, int lsrname);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="lsame")]
            internal static extern int Lsame([MarshalAs(UnmanagedType.LPStr)] string ca, [MarshalAs(UnmanagedType.LPStr)] string cb, long lca, long lcb);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="sasum")]
            internal static extern float Sasum(long* n, float* x, long* incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="saxpy")]
            internal static extern void Saxpy(long* n, float* alpha, float* x, long* incx, float* y, long* incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="saxpby")]
            internal static extern void Saxpby(long* n, float* alpha, float* x, long* incx, float* beta, float* y, long* incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="saxpyi")]
            internal static extern void Saxpyi(long* nz, float* a, float* x, long* indx, float* y);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="scopy")]
            internal static extern void Scopy(long* n, float* x, long* incx, float* y, long* incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="sdot")]
            internal static extern float Sdot(long* n, float* x, long* incx, float* y, long* incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="sdoti")]
            internal static extern float Sdoti(long* nz, float* x, long* indx, float* y);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="sdsdot")]
            internal static extern float Sdsdot(long* n, float* sb, float* x, long* incx, float* y, long* incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="sgthr")]
            internal static extern void Sgthr(long* nz, float* y, float* x, long* indx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="sgthrz")]
            internal static extern void Sgthrz(long* nz, float* y, float* x, long* indx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="snrm2")]
            internal static extern float Snrm2(long* n, float* x, long* incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="srot")]
            internal static extern void Srot(long* n, float* x, long* incx, float* y, long* incy, float* c, float* s);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="srotg")]
            internal static extern void Srotg(float* a, float* b, float* c, float* s);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="sroti")]
            internal static extern void Sroti(long* nz, float* x, long* indx, float* y, float* c, float* s);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="srotm")]
            internal static extern void Srotm(long* n, float* x, long* incx, float* y, long* incy, float* param);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="srotmg")]
            internal static extern void Srotmg(float* d1, float* d2, float* x1, float* y1, float* param);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="sscal")]
            internal static extern void Sscal(long* n, float* a, float* x, long* incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="ssctr")]
            internal static extern void Ssctr(long* nz, float* x, long* indx, float* y);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="sswap")]
            internal static extern void Sswap(long* n, float* x, long* incx, float* y, long* incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="isamax")]
            internal static extern long Isamax(long* n, float* x, long* incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="isamin")]
            internal static extern long Isamin(long* n, float* x, long* incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dasum")]
            internal static extern double Dasum(long* n, double* x, long* incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="daxpy")]
            internal static extern void Daxpy(long* n, double* alpha, double* x, long* incx, double* y, long* incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="daxpby")]
            internal static extern void Daxpby(long* n, double* alpha, double* x, long* incx, double* beta, double* y, long* incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="daxpyi")]
            internal static extern void Daxpyi(long* nz, double* a, double* x, long* indx, double* y);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dcopy")]
            internal static extern void Dcopy(long* n, double* x, long* incx, double* y, long* incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="ddot")]
            internal static extern double Ddot(long* n, double* x, long* incx, double* y, long* incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dsdot")]
            internal static extern double Dsdot(long* n, float* x, long* incx, float* y, long* incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="ddoti")]
            internal static extern double Ddoti(long* nz, double* x, long* indx, double* y);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dgthr")]
            internal static extern void Dgthr(long* nz, double* y, double* x, long* indx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dgthrz")]
            internal static extern void Dgthrz(long* nz, double* y, double* x, long* indx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dnrm2")]
            internal static extern double Dnrm2(long* n, double* x, long* incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="drot")]
            internal static extern void Drot(long* n, double* x, long* incx, double* y, long* incy, double* c, double* s);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="drotg")]
            internal static extern void Drotg(double* a, double* b, double* c, double* s);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="droti")]
            internal static extern void Droti(long* nz, double* x, long* indx, double* y, double* c, double* s);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="drotm")]
            internal static extern void Drotm(long* n, double* x, long* incx, double* y, long* incy, double* param);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="drotmg")]
            internal static extern void Drotmg(double* d1, double* d2, double* x1, double* y1, double* param);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dscal")]
            internal static extern void Dscal(long* n, double* a, double* x, long* incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dsctr")]
            internal static extern void Dsctr(long* nz, double* x, long* indx, double* y);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dswap")]
            internal static extern void Dswap(long* n, double* x, long* incx, double* y, long* incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="idamax")]
            internal static extern long Idamax(long* n, double* x, long* incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="idamin")]
            internal static extern long Idamin(long* n, double* x, long* incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="sgbmv")]
            internal static extern void Sgbmv([MarshalAs(UnmanagedType.LPStr)] string trans, long* m, long* n, long* kl, long* ku, float* alpha, float* a, long* lda, float* x, long* incx, float* beta, float* y, long* incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="sgemv")]
            internal static extern void Sgemv([MarshalAs(UnmanagedType.LPStr)] string trans, long* m, long* n, float* alpha, float* a, long* lda, float* x, long* incx, float* beta, float* y, long* incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="sger")]
            internal static extern void Sger(long* m, long* n, float* alpha, float* x, long* incx, float* y, long* incy, float* a, long* lda);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="ssbmv")]
            internal static extern void Ssbmv([MarshalAs(UnmanagedType.LPStr)] string uplo, long* n, long* k, float* alpha, float* a, long* lda, float* x, long* incx, float* beta, float* y, long* incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="sspmv")]
            internal static extern void Sspmv([MarshalAs(UnmanagedType.LPStr)] string uplo, long* n, float* alpha, float* ap, float* x, long* incx, float* beta, float* y, long* incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="sspr")]
            internal static extern void Sspr([MarshalAs(UnmanagedType.LPStr)] string uplo, long* n, float* alpha, float* x, long* incx, float* ap);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="sspr2")]
            internal static extern void Sspr2([MarshalAs(UnmanagedType.LPStr)] string uplo, long* n, float* alpha, float* x, long* incx, float* y, long* incy, float* ap);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="ssymv")]
            internal static extern void Ssymv([MarshalAs(UnmanagedType.LPStr)] string uplo, long* n, float* alpha, float* a, long* lda, float* x, long* incx, float* beta, float* y, long* incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="ssyr")]
            internal static extern void Ssyr([MarshalAs(UnmanagedType.LPStr)] string uplo, long* n, float* alpha, float* x, long* incx, float* a, long* lda);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="ssyr2")]
            internal static extern void Ssyr2([MarshalAs(UnmanagedType.LPStr)] string uplo, long* n, float* alpha, float* x, long* incx, float* y, long* incy, float* a, long* lda);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="stbmv")]
            internal static extern void Stbmv([MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string trans, [MarshalAs(UnmanagedType.LPStr)] string diag, long* n, long* k, float* a, long* lda, float* x, long* incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="stbsv")]
            internal static extern void Stbsv([MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string trans, [MarshalAs(UnmanagedType.LPStr)] string diag, long* n, long* k, float* a, long* lda, float* x, long* incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="stpmv")]
            internal static extern void Stpmv([MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string trans, [MarshalAs(UnmanagedType.LPStr)] string diag, long* n, float* ap, float* x, long* incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="stpsv")]
            internal static extern void Stpsv([MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string trans, [MarshalAs(UnmanagedType.LPStr)] string diag, long* n, float* ap, float* x, long* incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="strmv")]
            internal static extern void Strmv([MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string transa, [MarshalAs(UnmanagedType.LPStr)] string diag, long* n, float* a, long* lda, float* b, long* incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="strsv")]
            internal static extern void Strsv([MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string trans, [MarshalAs(UnmanagedType.LPStr)] string diag, long* n, float* a, long* lda, float* x, long* incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="sgem2vu")]
            internal static extern void Sgem2vu(long* m, long* n, float* alpha, float* a, long* lda, float* x1, long* incx1, float* x2, long* incx2, float* beta, float* y1, long* incy1, float* y2, long* incy2);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dgbmv")]
            internal static extern void Dgbmv([MarshalAs(UnmanagedType.LPStr)] string trans, long* m, long* n, long* kl, long* ku, double* alpha, double* a, long* lda, double* x, long* incx, double* beta, double* y, long* incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dgemv")]
            internal static extern void Dgemv([MarshalAs(UnmanagedType.LPStr)] string trans, long* m, long* n, double* alpha, double* a, long* lda, double* x, long* incx, double* beta, double* y, long* incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dger")]
            internal static extern void Dger(long* m, long* n, double* alpha, double* x, long* incx, double* y, long* incy, double* a, long* lda);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dsbmv")]
            internal static extern void Dsbmv([MarshalAs(UnmanagedType.LPStr)] string uplo, long* n, long* k, double* alpha, double* a, long* lda, double* x, long* incx, double* beta, double* y, long* incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dspmv")]
            internal static extern void Dspmv([MarshalAs(UnmanagedType.LPStr)] string uplo, long* n, double* alpha, double* ap, double* x, long* incx, double* beta, double* y, long* incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dspr")]
            internal static extern void Dspr([MarshalAs(UnmanagedType.LPStr)] string uplo, long* n, double* alpha, double* x, long* incx, double* ap);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dspr2")]
            internal static extern void Dspr2([MarshalAs(UnmanagedType.LPStr)] string uplo, long* n, double* alpha, double* x, long* incx, double* y, long* incy, double* ap);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dsymv")]
            internal static extern void Dsymv([MarshalAs(UnmanagedType.LPStr)] string uplo, long* n, double* alpha, double* a, long* lda, double* x, long* incx, double* beta, double* y, long* incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dsyr")]
            internal static extern void Dsyr([MarshalAs(UnmanagedType.LPStr)] string uplo, long* n, double* alpha, double* x, long* incx, double* a, long* lda);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dsyr2")]
            internal static extern void Dsyr2([MarshalAs(UnmanagedType.LPStr)] string uplo, long* n, double* alpha, double* x, long* incx, double* y, long* incy, double* a, long* lda);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dtbmv")]
            internal static extern void Dtbmv([MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string trans, [MarshalAs(UnmanagedType.LPStr)] string diag, long* n, long* k, double* a, long* lda, double* x, long* incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dtbsv")]
            internal static extern void Dtbsv([MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string trans, [MarshalAs(UnmanagedType.LPStr)] string diag, long* n, long* k, double* a, long* lda, double* x, long* incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dtpmv")]
            internal static extern void Dtpmv([MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string trans, [MarshalAs(UnmanagedType.LPStr)] string diag, long* n, double* ap, double* x, long* incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dtpsv")]
            internal static extern void Dtpsv([MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string trans, [MarshalAs(UnmanagedType.LPStr)] string diag, long* n, double* ap, double* x, long* incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dtrmv")]
            internal static extern void Dtrmv([MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string transa, [MarshalAs(UnmanagedType.LPStr)] string diag, long* n, double* a, long* lda, double* b, long* incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dtrsv")]
            internal static extern void Dtrsv([MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string trans, [MarshalAs(UnmanagedType.LPStr)] string diag, long* n, double* a, long* lda, double* x, long* incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dgem2vu")]
            internal static extern void Dgem2vu(long* m, long* n, double* alpha, double* a, long* lda, double* x1, long* incx1, double* x2, long* incx2, double* beta, double* y1, long* incy1, double* y2, long* incy2);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="sgemm")]
            internal static extern void Sgemm([MarshalAs(UnmanagedType.LPStr)] string transa, [MarshalAs(UnmanagedType.LPStr)] string transb, long* m, long* n, long* k, float* alpha, float* a, long* lda, float* b, long* ldb, float* beta, float* c, long* ldc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="sgemm_alloc")]
            internal static extern float* SgemmAlloc([MarshalAs(UnmanagedType.LPStr)] string identifier, long* m, long* n, long* k);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="sgemm_pack")]
            internal static extern void SgemmPack([MarshalAs(UnmanagedType.LPStr)] string identifier, [MarshalAs(UnmanagedType.LPStr)] string trans, long* m, long* n, long* k, float* alpha, float* src, long* ld, float* dest);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="sgemm_compute")]
            internal static extern void SgemmCompute([MarshalAs(UnmanagedType.LPStr)] string transa, [MarshalAs(UnmanagedType.LPStr)] string transb, long* m, long* n, long* k, float* a, long* lda, float* b, long* ldb, float* beta, float* c, long* ldc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="sgemm_free")]
            internal static extern void SgemmFree(float* mat);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="sgemm_batch")]
            internal static extern void SgemmBatch([MarshalAs(UnmanagedType.LPStr)] string transa_array, [MarshalAs(UnmanagedType.LPStr)] string transb_array, long* m_array, long* n_array, long* k_array, float* alpha_array, float** a_array, long* lda_array, float** b_array, long* ldb_array, float* beta_array, float** c_array, long* ldc_array, long* group_count, long* group_size);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="sgemmt")]
            internal static extern void Sgemmt([MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string transa, [MarshalAs(UnmanagedType.LPStr)] string transb, long* n, long* k, float* alpha, float* a, long* lda, float* b, long* ldb, float* beta, float* c, long* ldc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="ssymm")]
            internal static extern void Ssymm([MarshalAs(UnmanagedType.LPStr)] string side, [MarshalAs(UnmanagedType.LPStr)] string uplo, long* m, long* n, float* alpha, float* a, long* lda, float* b, long* ldb, float* beta, float* c, long* ldc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="ssyr2k")]
            internal static extern void Ssyr2k([MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string trans, long* n, long* k, float* alpha, float* a, long* lda, float* b, long* ldb, float* beta, float* c, long* ldc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="ssyrk")]
            internal static extern void Ssyrk([MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string trans, long* n, long* k, float* alpha, float* a, long* lda, float* beta, float* c, long* ldc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="strmm")]
            internal static extern void Strmm([MarshalAs(UnmanagedType.LPStr)] string side, [MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string transa, [MarshalAs(UnmanagedType.LPStr)] string diag, long* m, long* n, float* alpha, float* a, long* lda, float* b, long* ldb);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="strsm")]
            internal static extern void Strsm([MarshalAs(UnmanagedType.LPStr)] string side, [MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string transa, [MarshalAs(UnmanagedType.LPStr)] string diag, long* m, long* n, float* alpha, float* a, long* lda, float* b, long* ldb);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="strsm_batch")]
            internal static extern void StrsmBatch([MarshalAs(UnmanagedType.LPStr)] string side_array, [MarshalAs(UnmanagedType.LPStr)] string uplo_array, [MarshalAs(UnmanagedType.LPStr)] string transa_array, [MarshalAs(UnmanagedType.LPStr)] string diag_array, long* m_array, long* n_array, float* alpha_array, float** a_array, long* lda_array, float** b_array, long* ldb, long* group_count, long* group_size);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dgemm")]
            internal static extern void Dgemm([MarshalAs(UnmanagedType.LPStr)] string transa, [MarshalAs(UnmanagedType.LPStr)] string transb, long* m, long* n, long* k, double* alpha, double* a, long* lda, double* b, long* ldb, double* beta, double* c, long* ldc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dgemm_alloc")]
            internal static extern double* DgemmAlloc([MarshalAs(UnmanagedType.LPStr)] string identifier, long* m, long* n, long* k);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dgemm_pack")]
            internal static extern void DgemmPack([MarshalAs(UnmanagedType.LPStr)] string identifier, [MarshalAs(UnmanagedType.LPStr)] string trans, long* m, long* n, long* k, double* alpha, double* src, long* ld, double* dest);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dgemm_compute")]
            internal static extern void DgemmCompute([MarshalAs(UnmanagedType.LPStr)] string transa, [MarshalAs(UnmanagedType.LPStr)] string transb, long* m, long* n, long* k, double* a, long* lda, double* b, long* ldb, double* beta, double* c, long* ldc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dgemm_free")]
            internal static extern void DgemmFree(double* mat);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dgemm_batch")]
            internal static extern void DgemmBatch([MarshalAs(UnmanagedType.LPStr)] string transa_array, [MarshalAs(UnmanagedType.LPStr)] string transb_array, long* m_array, long* n_array, long* k_array, double* alpha_array, double** a_array, long* lda_array, double** b_array, long* ldb_array, double* beta_array, double** c_array, long* ldc_array, long* group_count, long* group_size);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dgemmt")]
            internal static extern void Dgemmt([MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string transa, [MarshalAs(UnmanagedType.LPStr)] string transb, long* n, long* k, double* alpha, double* a, long* lda, double* b, long* ldb, double* beta, double* c, long* ldc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dsymm")]
            internal static extern void Dsymm([MarshalAs(UnmanagedType.LPStr)] string side, [MarshalAs(UnmanagedType.LPStr)] string uplo, long* m, long* n, double* alpha, double* a, long* lda, double* b, long* ldb, double* beta, double* c, long* ldc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dsyr2k")]
            internal static extern void Dsyr2k([MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string trans, long* n, long* k, double* alpha, double* a, long* lda, double* b, long* ldb, double* beta, double* c, long* ldc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dsyrk")]
            internal static extern void Dsyrk([MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string trans, long* n, long* k, double* alpha, double* a, long* lda, double* beta, double* c, long* ldc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dtrmm")]
            internal static extern void Dtrmm([MarshalAs(UnmanagedType.LPStr)] string side, [MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string transa, [MarshalAs(UnmanagedType.LPStr)] string diag, long* m, long* n, double* alpha, double* a, long* lda, double* b, long* ldb);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dtrsm")]
            internal static extern void Dtrsm([MarshalAs(UnmanagedType.LPStr)] string side, [MarshalAs(UnmanagedType.LPStr)] string uplo, [MarshalAs(UnmanagedType.LPStr)] string transa, [MarshalAs(UnmanagedType.LPStr)] string diag, long* m, long* n, double* alpha, double* a, long* lda, double* b, long* ldb);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="dtrsm_batch")]
            internal static extern void DtrsmBatch([MarshalAs(UnmanagedType.LPStr)] string side_array, [MarshalAs(UnmanagedType.LPStr)] string uplo_array, [MarshalAs(UnmanagedType.LPStr)] string transa_array, [MarshalAs(UnmanagedType.LPStr)] string diag_array, long* m_array, long* n_array, double* alpha_array, double** a_array, long* lda_array, double** b_array, long* ldb, long* group_count, long* group_size);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="gemm_s8u8s32")]
            internal static extern void GemmS8u8s32([MarshalAs(UnmanagedType.LPStr)] string transa, [MarshalAs(UnmanagedType.LPStr)] string transb, [MarshalAs(UnmanagedType.LPStr)] string offsetc, long* m, long* n, long* k, float* alpha, [MarshalAs(UnmanagedType.LPStr)] string a, long* lda, [MarshalAs(UnmanagedType.LPStr)] string ao, byte* b, long* ldb, [MarshalAs(UnmanagedType.LPStr)] string bo, float* beta, int* c, long* ldc, int* co);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("mkl_rt", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="gemm_s16s16s32")]
            internal static extern void GemmS16s16s32([MarshalAs(UnmanagedType.LPStr)] string transa, [MarshalAs(UnmanagedType.LPStr)] string transb, [MarshalAs(UnmanagedType.LPStr)] string offsetc, long* m, long* n, long* k, float* alpha, short* a, long* lda, short* ao, short* b, long* ldb, short* bo, float* beta, int* c, long* ldc, int* co);
        }

        public static void Xerbla(string srname, ref int info, int lsrname)
        {
            fixed (int* __refParamPtr1 = &info)
            {
                var __arg1 = __refParamPtr1;
                __Internal.Xerbla(srname, __arg1, lsrname);
            }
        }

        public static int Lsame(string ca, string cb, long lca, long lcb)
        {
            var __ret = __Internal.Lsame(ca, cb, lca, lcb);
            return __ret;
        }

        public static float Sasum(ref long n, ref float x, ref long incx)
        {
            fixed (long* __refParamPtr0 = &n)
            {
                var __arg0 = __refParamPtr0;
                fixed (float* __refParamPtr1 = &x)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (long* __refParamPtr2 = &incx)
                    {
                        var __arg2 = __refParamPtr2;
                        var __ret = __Internal.Sasum(__arg0, __arg1, __arg2);
                        return __ret;
                    }
                }
            }
        }

        public static void Saxpy(ref long n, ref float alpha, ref float x, ref long incx, ref float y, ref long incy)
        {
            fixed (long* __refParamPtr0 = &n)
            {
                var __arg0 = __refParamPtr0;
                fixed (float* __refParamPtr1 = &alpha)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (float* __refParamPtr2 = &x)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (long* __refParamPtr3 = &incx)
                        {
                            var __arg3 = __refParamPtr3;
                            fixed (float* __refParamPtr4 = &y)
                            {
                                var __arg4 = __refParamPtr4;
                                fixed (long* __refParamPtr5 = &incy)
                                {
                                    var __arg5 = __refParamPtr5;
                                    __Internal.Saxpy(__arg0, __arg1, __arg2, __arg3, __arg4, __arg5);
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Saxpby(ref long n, ref float alpha, ref float x, ref long incx, ref float beta, ref float y, ref long incy)
        {
            fixed (long* __refParamPtr0 = &n)
            {
                var __arg0 = __refParamPtr0;
                fixed (float* __refParamPtr1 = &alpha)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (float* __refParamPtr2 = &x)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (long* __refParamPtr3 = &incx)
                        {
                            var __arg3 = __refParamPtr3;
                            fixed (float* __refParamPtr4 = &beta)
                            {
                                var __arg4 = __refParamPtr4;
                                fixed (float* __refParamPtr5 = &y)
                                {
                                    var __arg5 = __refParamPtr5;
                                    fixed (long* __refParamPtr6 = &incy)
                                    {
                                        var __arg6 = __refParamPtr6;
                                        __Internal.Saxpby(__arg0, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Saxpyi(ref long nz, ref float a, ref float x, ref long indx, ref float y)
        {
            fixed (long* __refParamPtr0 = &nz)
            {
                var __arg0 = __refParamPtr0;
                fixed (float* __refParamPtr1 = &a)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (float* __refParamPtr2 = &x)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (long* __refParamPtr3 = &indx)
                        {
                            var __arg3 = __refParamPtr3;
                            fixed (float* __refParamPtr4 = &y)
                            {
                                var __arg4 = __refParamPtr4;
                                __Internal.Saxpyi(__arg0, __arg1, __arg2, __arg3, __arg4);
                            }
                        }
                    }
                }
            }
        }

        public static void Scopy(ref long n, ref float x, ref long incx, ref float y, ref long incy)
        {
            fixed (long* __refParamPtr0 = &n)
            {
                var __arg0 = __refParamPtr0;
                fixed (float* __refParamPtr1 = &x)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (long* __refParamPtr2 = &incx)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (float* __refParamPtr3 = &y)
                        {
                            var __arg3 = __refParamPtr3;
                            fixed (long* __refParamPtr4 = &incy)
                            {
                                var __arg4 = __refParamPtr4;
                                __Internal.Scopy(__arg0, __arg1, __arg2, __arg3, __arg4);
                            }
                        }
                    }
                }
            }
        }

        public static float Sdot(ref long n, ref float x, ref long incx, ref float y, ref long incy)
        {
            fixed (long* __refParamPtr0 = &n)
            {
                var __arg0 = __refParamPtr0;
                fixed (float* __refParamPtr1 = &x)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (long* __refParamPtr2 = &incx)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (float* __refParamPtr3 = &y)
                        {
                            var __arg3 = __refParamPtr3;
                            fixed (long* __refParamPtr4 = &incy)
                            {
                                var __arg4 = __refParamPtr4;
                                var __ret = __Internal.Sdot(__arg0, __arg1, __arg2, __arg3, __arg4);
                                return __ret;
                            }
                        }
                    }
                }
            }
        }

        public static float Sdoti(ref long nz, ref float x, ref long indx, ref float y)
        {
            fixed (long* __refParamPtr0 = &nz)
            {
                var __arg0 = __refParamPtr0;
                fixed (float* __refParamPtr1 = &x)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (long* __refParamPtr2 = &indx)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (float* __refParamPtr3 = &y)
                        {
                            var __arg3 = __refParamPtr3;
                            var __ret = __Internal.Sdoti(__arg0, __arg1, __arg2, __arg3);
                            return __ret;
                        }
                    }
                }
            }
        }

        public static float Sdsdot(ref long n, ref float sb, ref float x, ref long incx, ref float y, ref long incy)
        {
            fixed (long* __refParamPtr0 = &n)
            {
                var __arg0 = __refParamPtr0;
                fixed (float* __refParamPtr1 = &sb)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (float* __refParamPtr2 = &x)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (long* __refParamPtr3 = &incx)
                        {
                            var __arg3 = __refParamPtr3;
                            fixed (float* __refParamPtr4 = &y)
                            {
                                var __arg4 = __refParamPtr4;
                                fixed (long* __refParamPtr5 = &incy)
                                {
                                    var __arg5 = __refParamPtr5;
                                    var __ret = __Internal.Sdsdot(__arg0, __arg1, __arg2, __arg3, __arg4, __arg5);
                                    return __ret;
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Sgthr(ref long nz, ref float y, ref float x, ref long indx)
        {
            fixed (long* __refParamPtr0 = &nz)
            {
                var __arg0 = __refParamPtr0;
                fixed (float* __refParamPtr1 = &y)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (float* __refParamPtr2 = &x)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (long* __refParamPtr3 = &indx)
                        {
                            var __arg3 = __refParamPtr3;
                            __Internal.Sgthr(__arg0, __arg1, __arg2, __arg3);
                        }
                    }
                }
            }
        }

        public static void Sgthrz(ref long nz, ref float y, ref float x, ref long indx)
        {
            fixed (long* __refParamPtr0 = &nz)
            {
                var __arg0 = __refParamPtr0;
                fixed (float* __refParamPtr1 = &y)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (float* __refParamPtr2 = &x)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (long* __refParamPtr3 = &indx)
                        {
                            var __arg3 = __refParamPtr3;
                            __Internal.Sgthrz(__arg0, __arg1, __arg2, __arg3);
                        }
                    }
                }
            }
        }

        public static float Snrm2(ref long n, ref float x, ref long incx)
        {
            fixed (long* __refParamPtr0 = &n)
            {
                var __arg0 = __refParamPtr0;
                fixed (float* __refParamPtr1 = &x)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (long* __refParamPtr2 = &incx)
                    {
                        var __arg2 = __refParamPtr2;
                        var __ret = __Internal.Snrm2(__arg0, __arg1, __arg2);
                        return __ret;
                    }
                }
            }
        }

        public static void Srot(ref long n, ref float x, ref long incx, ref float y, ref long incy, ref float c, ref float s)
        {
            fixed (long* __refParamPtr0 = &n)
            {
                var __arg0 = __refParamPtr0;
                fixed (float* __refParamPtr1 = &x)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (long* __refParamPtr2 = &incx)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (float* __refParamPtr3 = &y)
                        {
                            var __arg3 = __refParamPtr3;
                            fixed (long* __refParamPtr4 = &incy)
                            {
                                var __arg4 = __refParamPtr4;
                                fixed (float* __refParamPtr5 = &c)
                                {
                                    var __arg5 = __refParamPtr5;
                                    fixed (float* __refParamPtr6 = &s)
                                    {
                                        var __arg6 = __refParamPtr6;
                                        __Internal.Srot(__arg0, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Srotg(ref float a, ref float b, ref float c, ref float s)
        {
            fixed (float* __refParamPtr0 = &a)
            {
                var __arg0 = __refParamPtr0;
                fixed (float* __refParamPtr1 = &b)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (float* __refParamPtr2 = &c)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (float* __refParamPtr3 = &s)
                        {
                            var __arg3 = __refParamPtr3;
                            __Internal.Srotg(__arg0, __arg1, __arg2, __arg3);
                        }
                    }
                }
            }
        }

        public static void Sroti(ref long nz, ref float x, ref long indx, ref float y, ref float c, ref float s)
        {
            fixed (long* __refParamPtr0 = &nz)
            {
                var __arg0 = __refParamPtr0;
                fixed (float* __refParamPtr1 = &x)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (long* __refParamPtr2 = &indx)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (float* __refParamPtr3 = &y)
                        {
                            var __arg3 = __refParamPtr3;
                            fixed (float* __refParamPtr4 = &c)
                            {
                                var __arg4 = __refParamPtr4;
                                fixed (float* __refParamPtr5 = &s)
                                {
                                    var __arg5 = __refParamPtr5;
                                    __Internal.Sroti(__arg0, __arg1, __arg2, __arg3, __arg4, __arg5);
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Srotm(ref long n, ref float x, ref long incx, ref float y, ref long incy, ref float param)
        {
            fixed (long* __refParamPtr0 = &n)
            {
                var __arg0 = __refParamPtr0;
                fixed (float* __refParamPtr1 = &x)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (long* __refParamPtr2 = &incx)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (float* __refParamPtr3 = &y)
                        {
                            var __arg3 = __refParamPtr3;
                            fixed (long* __refParamPtr4 = &incy)
                            {
                                var __arg4 = __refParamPtr4;
                                fixed (float* __refParamPtr5 = &param)
                                {
                                    var __arg5 = __refParamPtr5;
                                    __Internal.Srotm(__arg0, __arg1, __arg2, __arg3, __arg4, __arg5);
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Srotmg(ref float d1, ref float d2, ref float x1, ref float y1, ref float param)
        {
            fixed (float* __refParamPtr0 = &d1)
            {
                var __arg0 = __refParamPtr0;
                fixed (float* __refParamPtr1 = &d2)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (float* __refParamPtr2 = &x1)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (float* __refParamPtr3 = &y1)
                        {
                            var __arg3 = __refParamPtr3;
                            fixed (float* __refParamPtr4 = &param)
                            {
                                var __arg4 = __refParamPtr4;
                                __Internal.Srotmg(__arg0, __arg1, __arg2, __arg3, __arg4);
                            }
                        }
                    }
                }
            }
        }

        public static void Sscal(ref long n, ref float a, ref float x, ref long incx)
        {
            fixed (long* __refParamPtr0 = &n)
            {
                var __arg0 = __refParamPtr0;
                fixed (float* __refParamPtr1 = &a)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (float* __refParamPtr2 = &x)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (long* __refParamPtr3 = &incx)
                        {
                            var __arg3 = __refParamPtr3;
                            __Internal.Sscal(__arg0, __arg1, __arg2, __arg3);
                        }
                    }
                }
            }
        }

        public static void Ssctr(ref long nz, ref float x, ref long indx, ref float y)
        {
            fixed (long* __refParamPtr0 = &nz)
            {
                var __arg0 = __refParamPtr0;
                fixed (float* __refParamPtr1 = &x)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (long* __refParamPtr2 = &indx)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (float* __refParamPtr3 = &y)
                        {
                            var __arg3 = __refParamPtr3;
                            __Internal.Ssctr(__arg0, __arg1, __arg2, __arg3);
                        }
                    }
                }
            }
        }

        public static void Sswap(ref long n, ref float x, ref long incx, ref float y, ref long incy)
        {
            fixed (long* __refParamPtr0 = &n)
            {
                var __arg0 = __refParamPtr0;
                fixed (float* __refParamPtr1 = &x)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (long* __refParamPtr2 = &incx)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (float* __refParamPtr3 = &y)
                        {
                            var __arg3 = __refParamPtr3;
                            fixed (long* __refParamPtr4 = &incy)
                            {
                                var __arg4 = __refParamPtr4;
                                __Internal.Sswap(__arg0, __arg1, __arg2, __arg3, __arg4);
                            }
                        }
                    }
                }
            }
        }

        public static long Isamax(ref long n, ref float x, ref long incx)
        {
            fixed (long* __refParamPtr0 = &n)
            {
                var __arg0 = __refParamPtr0;
                fixed (float* __refParamPtr1 = &x)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (long* __refParamPtr2 = &incx)
                    {
                        var __arg2 = __refParamPtr2;
                        var __ret = __Internal.Isamax(__arg0, __arg1, __arg2);
                        return __ret;
                    }
                }
            }
        }

        public static long Isamin(ref long n, ref float x, ref long incx)
        {
            fixed (long* __refParamPtr0 = &n)
            {
                var __arg0 = __refParamPtr0;
                fixed (float* __refParamPtr1 = &x)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (long* __refParamPtr2 = &incx)
                    {
                        var __arg2 = __refParamPtr2;
                        var __ret = __Internal.Isamin(__arg0, __arg1, __arg2);
                        return __ret;
                    }
                }
            }
        }

        public static double Dasum(ref long n, ref double x, ref long incx)
        {
            fixed (long* __refParamPtr0 = &n)
            {
                var __arg0 = __refParamPtr0;
                fixed (double* __refParamPtr1 = &x)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (long* __refParamPtr2 = &incx)
                    {
                        var __arg2 = __refParamPtr2;
                        var __ret = __Internal.Dasum(__arg0, __arg1, __arg2);
                        return __ret;
                    }
                }
            }
        }

        public static void Daxpy(ref long n, ref double alpha, ref double x, ref long incx, ref double y, ref long incy)
        {
            fixed (long* __refParamPtr0 = &n)
            {
                var __arg0 = __refParamPtr0;
                fixed (double* __refParamPtr1 = &alpha)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (double* __refParamPtr2 = &x)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (long* __refParamPtr3 = &incx)
                        {
                            var __arg3 = __refParamPtr3;
                            fixed (double* __refParamPtr4 = &y)
                            {
                                var __arg4 = __refParamPtr4;
                                fixed (long* __refParamPtr5 = &incy)
                                {
                                    var __arg5 = __refParamPtr5;
                                    __Internal.Daxpy(__arg0, __arg1, __arg2, __arg3, __arg4, __arg5);
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Daxpby(ref long n, ref double alpha, ref double x, ref long incx, ref double beta, ref double y, ref long incy)
        {
            fixed (long* __refParamPtr0 = &n)
            {
                var __arg0 = __refParamPtr0;
                fixed (double* __refParamPtr1 = &alpha)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (double* __refParamPtr2 = &x)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (long* __refParamPtr3 = &incx)
                        {
                            var __arg3 = __refParamPtr3;
                            fixed (double* __refParamPtr4 = &beta)
                            {
                                var __arg4 = __refParamPtr4;
                                fixed (double* __refParamPtr5 = &y)
                                {
                                    var __arg5 = __refParamPtr5;
                                    fixed (long* __refParamPtr6 = &incy)
                                    {
                                        var __arg6 = __refParamPtr6;
                                        __Internal.Daxpby(__arg0, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Daxpyi(ref long nz, ref double a, ref double x, ref long indx, ref double y)
        {
            fixed (long* __refParamPtr0 = &nz)
            {
                var __arg0 = __refParamPtr0;
                fixed (double* __refParamPtr1 = &a)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (double* __refParamPtr2 = &x)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (long* __refParamPtr3 = &indx)
                        {
                            var __arg3 = __refParamPtr3;
                            fixed (double* __refParamPtr4 = &y)
                            {
                                var __arg4 = __refParamPtr4;
                                __Internal.Daxpyi(__arg0, __arg1, __arg2, __arg3, __arg4);
                            }
                        }
                    }
                }
            }
        }

        public static void Dcopy(ref long n, ref double x, ref long incx, ref double y, ref long incy)
        {
            fixed (long* __refParamPtr0 = &n)
            {
                var __arg0 = __refParamPtr0;
                fixed (double* __refParamPtr1 = &x)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (long* __refParamPtr2 = &incx)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (double* __refParamPtr3 = &y)
                        {
                            var __arg3 = __refParamPtr3;
                            fixed (long* __refParamPtr4 = &incy)
                            {
                                var __arg4 = __refParamPtr4;
                                __Internal.Dcopy(__arg0, __arg1, __arg2, __arg3, __arg4);
                            }
                        }
                    }
                }
            }
        }

        public static double Ddot(ref long n, ref double x, ref long incx, ref double y, ref long incy)
        {
            fixed (long* __refParamPtr0 = &n)
            {
                var __arg0 = __refParamPtr0;
                fixed (double* __refParamPtr1 = &x)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (long* __refParamPtr2 = &incx)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (double* __refParamPtr3 = &y)
                        {
                            var __arg3 = __refParamPtr3;
                            fixed (long* __refParamPtr4 = &incy)
                            {
                                var __arg4 = __refParamPtr4;
                                var __ret = __Internal.Ddot(__arg0, __arg1, __arg2, __arg3, __arg4);
                                return __ret;
                            }
                        }
                    }
                }
            }
        }

        public static double Dsdot(ref long n, ref float x, ref long incx, ref float y, ref long incy)
        {
            fixed (long* __refParamPtr0 = &n)
            {
                var __arg0 = __refParamPtr0;
                fixed (float* __refParamPtr1 = &x)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (long* __refParamPtr2 = &incx)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (float* __refParamPtr3 = &y)
                        {
                            var __arg3 = __refParamPtr3;
                            fixed (long* __refParamPtr4 = &incy)
                            {
                                var __arg4 = __refParamPtr4;
                                var __ret = __Internal.Dsdot(__arg0, __arg1, __arg2, __arg3, __arg4);
                                return __ret;
                            }
                        }
                    }
                }
            }
        }

        public static double Ddoti(ref long nz, ref double x, ref long indx, ref double y)
        {
            fixed (long* __refParamPtr0 = &nz)
            {
                var __arg0 = __refParamPtr0;
                fixed (double* __refParamPtr1 = &x)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (long* __refParamPtr2 = &indx)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (double* __refParamPtr3 = &y)
                        {
                            var __arg3 = __refParamPtr3;
                            var __ret = __Internal.Ddoti(__arg0, __arg1, __arg2, __arg3);
                            return __ret;
                        }
                    }
                }
            }
        }

        public static void Dgthr(ref long nz, ref double y, ref double x, ref long indx)
        {
            fixed (long* __refParamPtr0 = &nz)
            {
                var __arg0 = __refParamPtr0;
                fixed (double* __refParamPtr1 = &y)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (double* __refParamPtr2 = &x)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (long* __refParamPtr3 = &indx)
                        {
                            var __arg3 = __refParamPtr3;
                            __Internal.Dgthr(__arg0, __arg1, __arg2, __arg3);
                        }
                    }
                }
            }
        }

        public static void Dgthrz(ref long nz, ref double y, ref double x, ref long indx)
        {
            fixed (long* __refParamPtr0 = &nz)
            {
                var __arg0 = __refParamPtr0;
                fixed (double* __refParamPtr1 = &y)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (double* __refParamPtr2 = &x)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (long* __refParamPtr3 = &indx)
                        {
                            var __arg3 = __refParamPtr3;
                            __Internal.Dgthrz(__arg0, __arg1, __arg2, __arg3);
                        }
                    }
                }
            }
        }

        public static double Dnrm2(ref long n, ref double x, ref long incx)
        {
            fixed (long* __refParamPtr0 = &n)
            {
                var __arg0 = __refParamPtr0;
                fixed (double* __refParamPtr1 = &x)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (long* __refParamPtr2 = &incx)
                    {
                        var __arg2 = __refParamPtr2;
                        var __ret = __Internal.Dnrm2(__arg0, __arg1, __arg2);
                        return __ret;
                    }
                }
            }
        }

        public static void Drot(ref long n, ref double x, ref long incx, ref double y, ref long incy, ref double c, ref double s)
        {
            fixed (long* __refParamPtr0 = &n)
            {
                var __arg0 = __refParamPtr0;
                fixed (double* __refParamPtr1 = &x)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (long* __refParamPtr2 = &incx)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (double* __refParamPtr3 = &y)
                        {
                            var __arg3 = __refParamPtr3;
                            fixed (long* __refParamPtr4 = &incy)
                            {
                                var __arg4 = __refParamPtr4;
                                fixed (double* __refParamPtr5 = &c)
                                {
                                    var __arg5 = __refParamPtr5;
                                    fixed (double* __refParamPtr6 = &s)
                                    {
                                        var __arg6 = __refParamPtr6;
                                        __Internal.Drot(__arg0, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Drotg(ref double a, ref double b, ref double c, ref double s)
        {
            fixed (double* __refParamPtr0 = &a)
            {
                var __arg0 = __refParamPtr0;
                fixed (double* __refParamPtr1 = &b)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (double* __refParamPtr2 = &c)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (double* __refParamPtr3 = &s)
                        {
                            var __arg3 = __refParamPtr3;
                            __Internal.Drotg(__arg0, __arg1, __arg2, __arg3);
                        }
                    }
                }
            }
        }

        public static void Droti(ref long nz, ref double x, ref long indx, ref double y, ref double c, ref double s)
        {
            fixed (long* __refParamPtr0 = &nz)
            {
                var __arg0 = __refParamPtr0;
                fixed (double* __refParamPtr1 = &x)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (long* __refParamPtr2 = &indx)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (double* __refParamPtr3 = &y)
                        {
                            var __arg3 = __refParamPtr3;
                            fixed (double* __refParamPtr4 = &c)
                            {
                                var __arg4 = __refParamPtr4;
                                fixed (double* __refParamPtr5 = &s)
                                {
                                    var __arg5 = __refParamPtr5;
                                    __Internal.Droti(__arg0, __arg1, __arg2, __arg3, __arg4, __arg5);
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Drotm(ref long n, ref double x, ref long incx, ref double y, ref long incy, ref double param)
        {
            fixed (long* __refParamPtr0 = &n)
            {
                var __arg0 = __refParamPtr0;
                fixed (double* __refParamPtr1 = &x)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (long* __refParamPtr2 = &incx)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (double* __refParamPtr3 = &y)
                        {
                            var __arg3 = __refParamPtr3;
                            fixed (long* __refParamPtr4 = &incy)
                            {
                                var __arg4 = __refParamPtr4;
                                fixed (double* __refParamPtr5 = &param)
                                {
                                    var __arg5 = __refParamPtr5;
                                    __Internal.Drotm(__arg0, __arg1, __arg2, __arg3, __arg4, __arg5);
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Drotmg(ref double d1, ref double d2, ref double x1, ref double y1, ref double param)
        {
            fixed (double* __refParamPtr0 = &d1)
            {
                var __arg0 = __refParamPtr0;
                fixed (double* __refParamPtr1 = &d2)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (double* __refParamPtr2 = &x1)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (double* __refParamPtr3 = &y1)
                        {
                            var __arg3 = __refParamPtr3;
                            fixed (double* __refParamPtr4 = &param)
                            {
                                var __arg4 = __refParamPtr4;
                                __Internal.Drotmg(__arg0, __arg1, __arg2, __arg3, __arg4);
                            }
                        }
                    }
                }
            }
        }

        public static void Dscal(ref long n, ref double a, ref double x, ref long incx)
        {
            fixed (long* __refParamPtr0 = &n)
            {
                var __arg0 = __refParamPtr0;
                fixed (double* __refParamPtr1 = &a)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (double* __refParamPtr2 = &x)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (long* __refParamPtr3 = &incx)
                        {
                            var __arg3 = __refParamPtr3;
                            __Internal.Dscal(__arg0, __arg1, __arg2, __arg3);
                        }
                    }
                }
            }
        }

        public static void Dsctr(ref long nz, ref double x, ref long indx, ref double y)
        {
            fixed (long* __refParamPtr0 = &nz)
            {
                var __arg0 = __refParamPtr0;
                fixed (double* __refParamPtr1 = &x)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (long* __refParamPtr2 = &indx)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (double* __refParamPtr3 = &y)
                        {
                            var __arg3 = __refParamPtr3;
                            __Internal.Dsctr(__arg0, __arg1, __arg2, __arg3);
                        }
                    }
                }
            }
        }

        public static void Dswap(ref long n, ref double x, ref long incx, ref double y, ref long incy)
        {
            fixed (long* __refParamPtr0 = &n)
            {
                var __arg0 = __refParamPtr0;
                fixed (double* __refParamPtr1 = &x)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (long* __refParamPtr2 = &incx)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (double* __refParamPtr3 = &y)
                        {
                            var __arg3 = __refParamPtr3;
                            fixed (long* __refParamPtr4 = &incy)
                            {
                                var __arg4 = __refParamPtr4;
                                __Internal.Dswap(__arg0, __arg1, __arg2, __arg3, __arg4);
                            }
                        }
                    }
                }
            }
        }

        public static long Idamax(ref long n, ref double x, ref long incx)
        {
            fixed (long* __refParamPtr0 = &n)
            {
                var __arg0 = __refParamPtr0;
                fixed (double* __refParamPtr1 = &x)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (long* __refParamPtr2 = &incx)
                    {
                        var __arg2 = __refParamPtr2;
                        var __ret = __Internal.Idamax(__arg0, __arg1, __arg2);
                        return __ret;
                    }
                }
            }
        }

        public static long Idamin(ref long n, ref double x, ref long incx)
        {
            fixed (long* __refParamPtr0 = &n)
            {
                var __arg0 = __refParamPtr0;
                fixed (double* __refParamPtr1 = &x)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (long* __refParamPtr2 = &incx)
                    {
                        var __arg2 = __refParamPtr2;
                        var __ret = __Internal.Idamin(__arg0, __arg1, __arg2);
                        return __ret;
                    }
                }
            }
        }

        public static void Sgbmv(string trans, ref long m, ref long n, ref long kl, ref long ku, ref float alpha, ref float a, ref long lda, ref float x, ref long incx, ref float beta, ref float y, ref long incy)
        {
            fixed (long* __refParamPtr1 = &m)
            {
                var __arg1 = __refParamPtr1;
                fixed (long* __refParamPtr2 = &n)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (long* __refParamPtr3 = &kl)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (long* __refParamPtr4 = &ku)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (float* __refParamPtr5 = &alpha)
                            {
                                var __arg5 = __refParamPtr5;
                                fixed (float* __refParamPtr6 = &a)
                                {
                                    var __arg6 = __refParamPtr6;
                                    fixed (long* __refParamPtr7 = &lda)
                                    {
                                        var __arg7 = __refParamPtr7;
                                        fixed (float* __refParamPtr8 = &x)
                                        {
                                            var __arg8 = __refParamPtr8;
                                            fixed (long* __refParamPtr9 = &incx)
                                            {
                                                var __arg9 = __refParamPtr9;
                                                fixed (float* __refParamPtr10 = &beta)
                                                {
                                                    var __arg10 = __refParamPtr10;
                                                    fixed (float* __refParamPtr11 = &y)
                                                    {
                                                        var __arg11 = __refParamPtr11;
                                                        fixed (long* __refParamPtr12 = &incy)
                                                        {
                                                            var __arg12 = __refParamPtr12;
                                                            __Internal.Sgbmv(trans, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8, __arg9, __arg10, __arg11, __arg12);
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Sgemv(string trans, ref long m, ref long n, ref float alpha, ref float a, ref long lda, ref float x, ref long incx, ref float beta, ref float y, ref long incy)
        {
            fixed (long* __refParamPtr1 = &m)
            {
                var __arg1 = __refParamPtr1;
                fixed (long* __refParamPtr2 = &n)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (float* __refParamPtr3 = &alpha)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (float* __refParamPtr4 = &a)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (long* __refParamPtr5 = &lda)
                            {
                                var __arg5 = __refParamPtr5;
                                fixed (float* __refParamPtr6 = &x)
                                {
                                    var __arg6 = __refParamPtr6;
                                    fixed (long* __refParamPtr7 = &incx)
                                    {
                                        var __arg7 = __refParamPtr7;
                                        fixed (float* __refParamPtr8 = &beta)
                                        {
                                            var __arg8 = __refParamPtr8;
                                            fixed (float* __refParamPtr9 = &y)
                                            {
                                                var __arg9 = __refParamPtr9;
                                                fixed (long* __refParamPtr10 = &incy)
                                                {
                                                    var __arg10 = __refParamPtr10;
                                                    __Internal.Sgemv(trans, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8, __arg9, __arg10);
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Sger(ref long m, ref long n, ref float alpha, ref float x, ref long incx, ref float y, ref long incy, ref float a, ref long lda)
        {
            fixed (long* __refParamPtr0 = &m)
            {
                var __arg0 = __refParamPtr0;
                fixed (long* __refParamPtr1 = &n)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (float* __refParamPtr2 = &alpha)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (float* __refParamPtr3 = &x)
                        {
                            var __arg3 = __refParamPtr3;
                            fixed (long* __refParamPtr4 = &incx)
                            {
                                var __arg4 = __refParamPtr4;
                                fixed (float* __refParamPtr5 = &y)
                                {
                                    var __arg5 = __refParamPtr5;
                                    fixed (long* __refParamPtr6 = &incy)
                                    {
                                        var __arg6 = __refParamPtr6;
                                        fixed (float* __refParamPtr7 = &a)
                                        {
                                            var __arg7 = __refParamPtr7;
                                            fixed (long* __refParamPtr8 = &lda)
                                            {
                                                var __arg8 = __refParamPtr8;
                                                __Internal.Sger(__arg0, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8);
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Ssbmv(string uplo, ref long n, ref long k, ref float alpha, ref float a, ref long lda, ref float x, ref long incx, ref float beta, ref float y, ref long incy)
        {
            fixed (long* __refParamPtr1 = &n)
            {
                var __arg1 = __refParamPtr1;
                fixed (long* __refParamPtr2 = &k)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (float* __refParamPtr3 = &alpha)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (float* __refParamPtr4 = &a)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (long* __refParamPtr5 = &lda)
                            {
                                var __arg5 = __refParamPtr5;
                                fixed (float* __refParamPtr6 = &x)
                                {
                                    var __arg6 = __refParamPtr6;
                                    fixed (long* __refParamPtr7 = &incx)
                                    {
                                        var __arg7 = __refParamPtr7;
                                        fixed (float* __refParamPtr8 = &beta)
                                        {
                                            var __arg8 = __refParamPtr8;
                                            fixed (float* __refParamPtr9 = &y)
                                            {
                                                var __arg9 = __refParamPtr9;
                                                fixed (long* __refParamPtr10 = &incy)
                                                {
                                                    var __arg10 = __refParamPtr10;
                                                    __Internal.Ssbmv(uplo, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8, __arg9, __arg10);
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Sspmv(string uplo, ref long n, ref float alpha, ref float ap, ref float x, ref long incx, ref float beta, ref float y, ref long incy)
        {
            fixed (long* __refParamPtr1 = &n)
            {
                var __arg1 = __refParamPtr1;
                fixed (float* __refParamPtr2 = &alpha)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (float* __refParamPtr3 = &ap)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (float* __refParamPtr4 = &x)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (long* __refParamPtr5 = &incx)
                            {
                                var __arg5 = __refParamPtr5;
                                fixed (float* __refParamPtr6 = &beta)
                                {
                                    var __arg6 = __refParamPtr6;
                                    fixed (float* __refParamPtr7 = &y)
                                    {
                                        var __arg7 = __refParamPtr7;
                                        fixed (long* __refParamPtr8 = &incy)
                                        {
                                            var __arg8 = __refParamPtr8;
                                            __Internal.Sspmv(uplo, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Sspr(string uplo, ref long n, ref float alpha, ref float x, ref long incx, ref float ap)
        {
            fixed (long* __refParamPtr1 = &n)
            {
                var __arg1 = __refParamPtr1;
                fixed (float* __refParamPtr2 = &alpha)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (float* __refParamPtr3 = &x)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (long* __refParamPtr4 = &incx)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (float* __refParamPtr5 = &ap)
                            {
                                var __arg5 = __refParamPtr5;
                                __Internal.Sspr(uplo, __arg1, __arg2, __arg3, __arg4, __arg5);
                            }
                        }
                    }
                }
            }
        }

        public static void Sspr2(string uplo, ref long n, ref float alpha, ref float x, ref long incx, ref float y, ref long incy, ref float ap)
        {
            fixed (long* __refParamPtr1 = &n)
            {
                var __arg1 = __refParamPtr1;
                fixed (float* __refParamPtr2 = &alpha)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (float* __refParamPtr3 = &x)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (long* __refParamPtr4 = &incx)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (float* __refParamPtr5 = &y)
                            {
                                var __arg5 = __refParamPtr5;
                                fixed (long* __refParamPtr6 = &incy)
                                {
                                    var __arg6 = __refParamPtr6;
                                    fixed (float* __refParamPtr7 = &ap)
                                    {
                                        var __arg7 = __refParamPtr7;
                                        __Internal.Sspr2(uplo, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6, __arg7);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Ssymv(string uplo, ref long n, ref float alpha, ref float a, ref long lda, ref float x, ref long incx, ref float beta, ref float y, ref long incy)
        {
            fixed (long* __refParamPtr1 = &n)
            {
                var __arg1 = __refParamPtr1;
                fixed (float* __refParamPtr2 = &alpha)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (float* __refParamPtr3 = &a)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (long* __refParamPtr4 = &lda)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (float* __refParamPtr5 = &x)
                            {
                                var __arg5 = __refParamPtr5;
                                fixed (long* __refParamPtr6 = &incx)
                                {
                                    var __arg6 = __refParamPtr6;
                                    fixed (float* __refParamPtr7 = &beta)
                                    {
                                        var __arg7 = __refParamPtr7;
                                        fixed (float* __refParamPtr8 = &y)
                                        {
                                            var __arg8 = __refParamPtr8;
                                            fixed (long* __refParamPtr9 = &incy)
                                            {
                                                var __arg9 = __refParamPtr9;
                                                __Internal.Ssymv(uplo, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8, __arg9);
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Ssyr(string uplo, ref long n, ref float alpha, ref float x, ref long incx, ref float a, ref long lda)
        {
            fixed (long* __refParamPtr1 = &n)
            {
                var __arg1 = __refParamPtr1;
                fixed (float* __refParamPtr2 = &alpha)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (float* __refParamPtr3 = &x)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (long* __refParamPtr4 = &incx)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (float* __refParamPtr5 = &a)
                            {
                                var __arg5 = __refParamPtr5;
                                fixed (long* __refParamPtr6 = &lda)
                                {
                                    var __arg6 = __refParamPtr6;
                                    __Internal.Ssyr(uplo, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6);
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Ssyr2(string uplo, ref long n, ref float alpha, ref float x, ref long incx, ref float y, ref long incy, ref float a, ref long lda)
        {
            fixed (long* __refParamPtr1 = &n)
            {
                var __arg1 = __refParamPtr1;
                fixed (float* __refParamPtr2 = &alpha)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (float* __refParamPtr3 = &x)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (long* __refParamPtr4 = &incx)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (float* __refParamPtr5 = &y)
                            {
                                var __arg5 = __refParamPtr5;
                                fixed (long* __refParamPtr6 = &incy)
                                {
                                    var __arg6 = __refParamPtr6;
                                    fixed (float* __refParamPtr7 = &a)
                                    {
                                        var __arg7 = __refParamPtr7;
                                        fixed (long* __refParamPtr8 = &lda)
                                        {
                                            var __arg8 = __refParamPtr8;
                                            __Internal.Ssyr2(uplo, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Stbmv(string uplo, string trans, string diag, ref long n, ref long k, ref float a, ref long lda, ref float x, ref long incx)
        {
            fixed (long* __refParamPtr3 = &n)
            {
                var __arg3 = __refParamPtr3;
                fixed (long* __refParamPtr4 = &k)
                {
                    var __arg4 = __refParamPtr4;
                    fixed (float* __refParamPtr5 = &a)
                    {
                        var __arg5 = __refParamPtr5;
                        fixed (long* __refParamPtr6 = &lda)
                        {
                            var __arg6 = __refParamPtr6;
                            fixed (float* __refParamPtr7 = &x)
                            {
                                var __arg7 = __refParamPtr7;
                                fixed (long* __refParamPtr8 = &incx)
                                {
                                    var __arg8 = __refParamPtr8;
                                    __Internal.Stbmv(uplo, trans, diag, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8);
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Stbsv(string uplo, string trans, string diag, ref long n, ref long k, ref float a, ref long lda, ref float x, ref long incx)
        {
            fixed (long* __refParamPtr3 = &n)
            {
                var __arg3 = __refParamPtr3;
                fixed (long* __refParamPtr4 = &k)
                {
                    var __arg4 = __refParamPtr4;
                    fixed (float* __refParamPtr5 = &a)
                    {
                        var __arg5 = __refParamPtr5;
                        fixed (long* __refParamPtr6 = &lda)
                        {
                            var __arg6 = __refParamPtr6;
                            fixed (float* __refParamPtr7 = &x)
                            {
                                var __arg7 = __refParamPtr7;
                                fixed (long* __refParamPtr8 = &incx)
                                {
                                    var __arg8 = __refParamPtr8;
                                    __Internal.Stbsv(uplo, trans, diag, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8);
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Stpmv(string uplo, string trans, string diag, ref long n, ref float ap, ref float x, ref long incx)
        {
            fixed (long* __refParamPtr3 = &n)
            {
                var __arg3 = __refParamPtr3;
                fixed (float* __refParamPtr4 = &ap)
                {
                    var __arg4 = __refParamPtr4;
                    fixed (float* __refParamPtr5 = &x)
                    {
                        var __arg5 = __refParamPtr5;
                        fixed (long* __refParamPtr6 = &incx)
                        {
                            var __arg6 = __refParamPtr6;
                            __Internal.Stpmv(uplo, trans, diag, __arg3, __arg4, __arg5, __arg6);
                        }
                    }
                }
            }
        }

        public static void Stpsv(string uplo, string trans, string diag, ref long n, ref float ap, ref float x, ref long incx)
        {
            fixed (long* __refParamPtr3 = &n)
            {
                var __arg3 = __refParamPtr3;
                fixed (float* __refParamPtr4 = &ap)
                {
                    var __arg4 = __refParamPtr4;
                    fixed (float* __refParamPtr5 = &x)
                    {
                        var __arg5 = __refParamPtr5;
                        fixed (long* __refParamPtr6 = &incx)
                        {
                            var __arg6 = __refParamPtr6;
                            __Internal.Stpsv(uplo, trans, diag, __arg3, __arg4, __arg5, __arg6);
                        }
                    }
                }
            }
        }

        public static void Strmv(string uplo, string transa, string diag, ref long n, ref float a, ref long lda, ref float b, ref long incx)
        {
            fixed (long* __refParamPtr3 = &n)
            {
                var __arg3 = __refParamPtr3;
                fixed (float* __refParamPtr4 = &a)
                {
                    var __arg4 = __refParamPtr4;
                    fixed (long* __refParamPtr5 = &lda)
                    {
                        var __arg5 = __refParamPtr5;
                        fixed (float* __refParamPtr6 = &b)
                        {
                            var __arg6 = __refParamPtr6;
                            fixed (long* __refParamPtr7 = &incx)
                            {
                                var __arg7 = __refParamPtr7;
                                __Internal.Strmv(uplo, transa, diag, __arg3, __arg4, __arg5, __arg6, __arg7);
                            }
                        }
                    }
                }
            }
        }

        public static void Strsv(string uplo, string trans, string diag, ref long n, ref float a, ref long lda, ref float x, ref long incx)
        {
            fixed (long* __refParamPtr3 = &n)
            {
                var __arg3 = __refParamPtr3;
                fixed (float* __refParamPtr4 = &a)
                {
                    var __arg4 = __refParamPtr4;
                    fixed (long* __refParamPtr5 = &lda)
                    {
                        var __arg5 = __refParamPtr5;
                        fixed (float* __refParamPtr6 = &x)
                        {
                            var __arg6 = __refParamPtr6;
                            fixed (long* __refParamPtr7 = &incx)
                            {
                                var __arg7 = __refParamPtr7;
                                __Internal.Strsv(uplo, trans, diag, __arg3, __arg4, __arg5, __arg6, __arg7);
                            }
                        }
                    }
                }
            }
        }

        public static void Sgem2vu(ref long m, ref long n, ref float alpha, ref float a, ref long lda, ref float x1, ref long incx1, ref float x2, ref long incx2, ref float beta, ref float y1, ref long incy1, ref float y2, ref long incy2)
        {
            fixed (long* __refParamPtr0 = &m)
            {
                var __arg0 = __refParamPtr0;
                fixed (long* __refParamPtr1 = &n)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (float* __refParamPtr2 = &alpha)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (float* __refParamPtr3 = &a)
                        {
                            var __arg3 = __refParamPtr3;
                            fixed (long* __refParamPtr4 = &lda)
                            {
                                var __arg4 = __refParamPtr4;
                                fixed (float* __refParamPtr5 = &x1)
                                {
                                    var __arg5 = __refParamPtr5;
                                    fixed (long* __refParamPtr6 = &incx1)
                                    {
                                        var __arg6 = __refParamPtr6;
                                        fixed (float* __refParamPtr7 = &x2)
                                        {
                                            var __arg7 = __refParamPtr7;
                                            fixed (long* __refParamPtr8 = &incx2)
                                            {
                                                var __arg8 = __refParamPtr8;
                                                fixed (float* __refParamPtr9 = &beta)
                                                {
                                                    var __arg9 = __refParamPtr9;
                                                    fixed (float* __refParamPtr10 = &y1)
                                                    {
                                                        var __arg10 = __refParamPtr10;
                                                        fixed (long* __refParamPtr11 = &incy1)
                                                        {
                                                            var __arg11 = __refParamPtr11;
                                                            fixed (float* __refParamPtr12 = &y2)
                                                            {
                                                                var __arg12 = __refParamPtr12;
                                                                fixed (long* __refParamPtr13 = &incy2)
                                                                {
                                                                    var __arg13 = __refParamPtr13;
                                                                    __Internal.Sgem2vu(__arg0, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8, __arg9, __arg10, __arg11, __arg12, __arg13);
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Dgbmv(string trans, ref long m, ref long n, ref long kl, ref long ku, ref double alpha, ref double a, ref long lda, ref double x, ref long incx, ref double beta, ref double y, ref long incy)
        {
            fixed (long* __refParamPtr1 = &m)
            {
                var __arg1 = __refParamPtr1;
                fixed (long* __refParamPtr2 = &n)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (long* __refParamPtr3 = &kl)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (long* __refParamPtr4 = &ku)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (double* __refParamPtr5 = &alpha)
                            {
                                var __arg5 = __refParamPtr5;
                                fixed (double* __refParamPtr6 = &a)
                                {
                                    var __arg6 = __refParamPtr6;
                                    fixed (long* __refParamPtr7 = &lda)
                                    {
                                        var __arg7 = __refParamPtr7;
                                        fixed (double* __refParamPtr8 = &x)
                                        {
                                            var __arg8 = __refParamPtr8;
                                            fixed (long* __refParamPtr9 = &incx)
                                            {
                                                var __arg9 = __refParamPtr9;
                                                fixed (double* __refParamPtr10 = &beta)
                                                {
                                                    var __arg10 = __refParamPtr10;
                                                    fixed (double* __refParamPtr11 = &y)
                                                    {
                                                        var __arg11 = __refParamPtr11;
                                                        fixed (long* __refParamPtr12 = &incy)
                                                        {
                                                            var __arg12 = __refParamPtr12;
                                                            __Internal.Dgbmv(trans, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8, __arg9, __arg10, __arg11, __arg12);
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Dgemv(string trans, ref long m, ref long n, ref double alpha, ref double a, ref long lda, ref double x, ref long incx, ref double beta, ref double y, ref long incy)
        {
            fixed (long* __refParamPtr1 = &m)
            {
                var __arg1 = __refParamPtr1;
                fixed (long* __refParamPtr2 = &n)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (double* __refParamPtr3 = &alpha)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (double* __refParamPtr4 = &a)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (long* __refParamPtr5 = &lda)
                            {
                                var __arg5 = __refParamPtr5;
                                fixed (double* __refParamPtr6 = &x)
                                {
                                    var __arg6 = __refParamPtr6;
                                    fixed (long* __refParamPtr7 = &incx)
                                    {
                                        var __arg7 = __refParamPtr7;
                                        fixed (double* __refParamPtr8 = &beta)
                                        {
                                            var __arg8 = __refParamPtr8;
                                            fixed (double* __refParamPtr9 = &y)
                                            {
                                                var __arg9 = __refParamPtr9;
                                                fixed (long* __refParamPtr10 = &incy)
                                                {
                                                    var __arg10 = __refParamPtr10;
                                                    __Internal.Dgemv(trans, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8, __arg9, __arg10);
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Dger(ref long m, ref long n, ref double alpha, ref double x, ref long incx, ref double y, ref long incy, ref double a, ref long lda)
        {
            fixed (long* __refParamPtr0 = &m)
            {
                var __arg0 = __refParamPtr0;
                fixed (long* __refParamPtr1 = &n)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (double* __refParamPtr2 = &alpha)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (double* __refParamPtr3 = &x)
                        {
                            var __arg3 = __refParamPtr3;
                            fixed (long* __refParamPtr4 = &incx)
                            {
                                var __arg4 = __refParamPtr4;
                                fixed (double* __refParamPtr5 = &y)
                                {
                                    var __arg5 = __refParamPtr5;
                                    fixed (long* __refParamPtr6 = &incy)
                                    {
                                        var __arg6 = __refParamPtr6;
                                        fixed (double* __refParamPtr7 = &a)
                                        {
                                            var __arg7 = __refParamPtr7;
                                            fixed (long* __refParamPtr8 = &lda)
                                            {
                                                var __arg8 = __refParamPtr8;
                                                __Internal.Dger(__arg0, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8);
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Dsbmv(string uplo, ref long n, ref long k, ref double alpha, ref double a, ref long lda, ref double x, ref long incx, ref double beta, ref double y, ref long incy)
        {
            fixed (long* __refParamPtr1 = &n)
            {
                var __arg1 = __refParamPtr1;
                fixed (long* __refParamPtr2 = &k)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (double* __refParamPtr3 = &alpha)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (double* __refParamPtr4 = &a)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (long* __refParamPtr5 = &lda)
                            {
                                var __arg5 = __refParamPtr5;
                                fixed (double* __refParamPtr6 = &x)
                                {
                                    var __arg6 = __refParamPtr6;
                                    fixed (long* __refParamPtr7 = &incx)
                                    {
                                        var __arg7 = __refParamPtr7;
                                        fixed (double* __refParamPtr8 = &beta)
                                        {
                                            var __arg8 = __refParamPtr8;
                                            fixed (double* __refParamPtr9 = &y)
                                            {
                                                var __arg9 = __refParamPtr9;
                                                fixed (long* __refParamPtr10 = &incy)
                                                {
                                                    var __arg10 = __refParamPtr10;
                                                    __Internal.Dsbmv(uplo, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8, __arg9, __arg10);
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Dspmv(string uplo, ref long n, ref double alpha, ref double ap, ref double x, ref long incx, ref double beta, ref double y, ref long incy)
        {
            fixed (long* __refParamPtr1 = &n)
            {
                var __arg1 = __refParamPtr1;
                fixed (double* __refParamPtr2 = &alpha)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (double* __refParamPtr3 = &ap)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (double* __refParamPtr4 = &x)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (long* __refParamPtr5 = &incx)
                            {
                                var __arg5 = __refParamPtr5;
                                fixed (double* __refParamPtr6 = &beta)
                                {
                                    var __arg6 = __refParamPtr6;
                                    fixed (double* __refParamPtr7 = &y)
                                    {
                                        var __arg7 = __refParamPtr7;
                                        fixed (long* __refParamPtr8 = &incy)
                                        {
                                            var __arg8 = __refParamPtr8;
                                            __Internal.Dspmv(uplo, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Dspr(string uplo, ref long n, ref double alpha, ref double x, ref long incx, ref double ap)
        {
            fixed (long* __refParamPtr1 = &n)
            {
                var __arg1 = __refParamPtr1;
                fixed (double* __refParamPtr2 = &alpha)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (double* __refParamPtr3 = &x)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (long* __refParamPtr4 = &incx)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (double* __refParamPtr5 = &ap)
                            {
                                var __arg5 = __refParamPtr5;
                                __Internal.Dspr(uplo, __arg1, __arg2, __arg3, __arg4, __arg5);
                            }
                        }
                    }
                }
            }
        }

        public static void Dspr2(string uplo, ref long n, ref double alpha, ref double x, ref long incx, ref double y, ref long incy, ref double ap)
        {
            fixed (long* __refParamPtr1 = &n)
            {
                var __arg1 = __refParamPtr1;
                fixed (double* __refParamPtr2 = &alpha)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (double* __refParamPtr3 = &x)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (long* __refParamPtr4 = &incx)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (double* __refParamPtr5 = &y)
                            {
                                var __arg5 = __refParamPtr5;
                                fixed (long* __refParamPtr6 = &incy)
                                {
                                    var __arg6 = __refParamPtr6;
                                    fixed (double* __refParamPtr7 = &ap)
                                    {
                                        var __arg7 = __refParamPtr7;
                                        __Internal.Dspr2(uplo, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6, __arg7);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Dsymv(string uplo, ref long n, ref double alpha, ref double a, ref long lda, ref double x, ref long incx, ref double beta, ref double y, ref long incy)
        {
            fixed (long* __refParamPtr1 = &n)
            {
                var __arg1 = __refParamPtr1;
                fixed (double* __refParamPtr2 = &alpha)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (double* __refParamPtr3 = &a)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (long* __refParamPtr4 = &lda)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (double* __refParamPtr5 = &x)
                            {
                                var __arg5 = __refParamPtr5;
                                fixed (long* __refParamPtr6 = &incx)
                                {
                                    var __arg6 = __refParamPtr6;
                                    fixed (double* __refParamPtr7 = &beta)
                                    {
                                        var __arg7 = __refParamPtr7;
                                        fixed (double* __refParamPtr8 = &y)
                                        {
                                            var __arg8 = __refParamPtr8;
                                            fixed (long* __refParamPtr9 = &incy)
                                            {
                                                var __arg9 = __refParamPtr9;
                                                __Internal.Dsymv(uplo, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8, __arg9);
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Dsyr(string uplo, ref long n, ref double alpha, ref double x, ref long incx, ref double a, ref long lda)
        {
            fixed (long* __refParamPtr1 = &n)
            {
                var __arg1 = __refParamPtr1;
                fixed (double* __refParamPtr2 = &alpha)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (double* __refParamPtr3 = &x)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (long* __refParamPtr4 = &incx)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (double* __refParamPtr5 = &a)
                            {
                                var __arg5 = __refParamPtr5;
                                fixed (long* __refParamPtr6 = &lda)
                                {
                                    var __arg6 = __refParamPtr6;
                                    __Internal.Dsyr(uplo, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6);
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Dsyr2(string uplo, ref long n, ref double alpha, ref double x, ref long incx, ref double y, ref long incy, ref double a, ref long lda)
        {
            fixed (long* __refParamPtr1 = &n)
            {
                var __arg1 = __refParamPtr1;
                fixed (double* __refParamPtr2 = &alpha)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (double* __refParamPtr3 = &x)
                    {
                        var __arg3 = __refParamPtr3;
                        fixed (long* __refParamPtr4 = &incx)
                        {
                            var __arg4 = __refParamPtr4;
                            fixed (double* __refParamPtr5 = &y)
                            {
                                var __arg5 = __refParamPtr5;
                                fixed (long* __refParamPtr6 = &incy)
                                {
                                    var __arg6 = __refParamPtr6;
                                    fixed (double* __refParamPtr7 = &a)
                                    {
                                        var __arg7 = __refParamPtr7;
                                        fixed (long* __refParamPtr8 = &lda)
                                        {
                                            var __arg8 = __refParamPtr8;
                                            __Internal.Dsyr2(uplo, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Dtbmv(string uplo, string trans, string diag, ref long n, ref long k, ref double a, ref long lda, ref double x, ref long incx)
        {
            fixed (long* __refParamPtr3 = &n)
            {
                var __arg3 = __refParamPtr3;
                fixed (long* __refParamPtr4 = &k)
                {
                    var __arg4 = __refParamPtr4;
                    fixed (double* __refParamPtr5 = &a)
                    {
                        var __arg5 = __refParamPtr5;
                        fixed (long* __refParamPtr6 = &lda)
                        {
                            var __arg6 = __refParamPtr6;
                            fixed (double* __refParamPtr7 = &x)
                            {
                                var __arg7 = __refParamPtr7;
                                fixed (long* __refParamPtr8 = &incx)
                                {
                                    var __arg8 = __refParamPtr8;
                                    __Internal.Dtbmv(uplo, trans, diag, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8);
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Dtbsv(string uplo, string trans, string diag, ref long n, ref long k, ref double a, ref long lda, ref double x, ref long incx)
        {
            fixed (long* __refParamPtr3 = &n)
            {
                var __arg3 = __refParamPtr3;
                fixed (long* __refParamPtr4 = &k)
                {
                    var __arg4 = __refParamPtr4;
                    fixed (double* __refParamPtr5 = &a)
                    {
                        var __arg5 = __refParamPtr5;
                        fixed (long* __refParamPtr6 = &lda)
                        {
                            var __arg6 = __refParamPtr6;
                            fixed (double* __refParamPtr7 = &x)
                            {
                                var __arg7 = __refParamPtr7;
                                fixed (long* __refParamPtr8 = &incx)
                                {
                                    var __arg8 = __refParamPtr8;
                                    __Internal.Dtbsv(uplo, trans, diag, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8);
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Dtpmv(string uplo, string trans, string diag, ref long n, ref double ap, ref double x, ref long incx)
        {
            fixed (long* __refParamPtr3 = &n)
            {
                var __arg3 = __refParamPtr3;
                fixed (double* __refParamPtr4 = &ap)
                {
                    var __arg4 = __refParamPtr4;
                    fixed (double* __refParamPtr5 = &x)
                    {
                        var __arg5 = __refParamPtr5;
                        fixed (long* __refParamPtr6 = &incx)
                        {
                            var __arg6 = __refParamPtr6;
                            __Internal.Dtpmv(uplo, trans, diag, __arg3, __arg4, __arg5, __arg6);
                        }
                    }
                }
            }
        }

        public static void Dtpsv(string uplo, string trans, string diag, ref long n, ref double ap, ref double x, ref long incx)
        {
            fixed (long* __refParamPtr3 = &n)
            {
                var __arg3 = __refParamPtr3;
                fixed (double* __refParamPtr4 = &ap)
                {
                    var __arg4 = __refParamPtr4;
                    fixed (double* __refParamPtr5 = &x)
                    {
                        var __arg5 = __refParamPtr5;
                        fixed (long* __refParamPtr6 = &incx)
                        {
                            var __arg6 = __refParamPtr6;
                            __Internal.Dtpsv(uplo, trans, diag, __arg3, __arg4, __arg5, __arg6);
                        }
                    }
                }
            }
        }

        public static void Dtrmv(string uplo, string transa, string diag, ref long n, ref double a, ref long lda, ref double b, ref long incx)
        {
            fixed (long* __refParamPtr3 = &n)
            {
                var __arg3 = __refParamPtr3;
                fixed (double* __refParamPtr4 = &a)
                {
                    var __arg4 = __refParamPtr4;
                    fixed (long* __refParamPtr5 = &lda)
                    {
                        var __arg5 = __refParamPtr5;
                        fixed (double* __refParamPtr6 = &b)
                        {
                            var __arg6 = __refParamPtr6;
                            fixed (long* __refParamPtr7 = &incx)
                            {
                                var __arg7 = __refParamPtr7;
                                __Internal.Dtrmv(uplo, transa, diag, __arg3, __arg4, __arg5, __arg6, __arg7);
                            }
                        }
                    }
                }
            }
        }

        public static void Dtrsv(string uplo, string trans, string diag, ref long n, ref double a, ref long lda, ref double x, ref long incx)
        {
            fixed (long* __refParamPtr3 = &n)
            {
                var __arg3 = __refParamPtr3;
                fixed (double* __refParamPtr4 = &a)
                {
                    var __arg4 = __refParamPtr4;
                    fixed (long* __refParamPtr5 = &lda)
                    {
                        var __arg5 = __refParamPtr5;
                        fixed (double* __refParamPtr6 = &x)
                        {
                            var __arg6 = __refParamPtr6;
                            fixed (long* __refParamPtr7 = &incx)
                            {
                                var __arg7 = __refParamPtr7;
                                __Internal.Dtrsv(uplo, trans, diag, __arg3, __arg4, __arg5, __arg6, __arg7);
                            }
                        }
                    }
                }
            }
        }

        public static void Dgem2vu(ref long m, ref long n, ref double alpha, ref double a, ref long lda, ref double x1, ref long incx1, ref double x2, ref long incx2, ref double beta, ref double y1, ref long incy1, ref double y2, ref long incy2)
        {
            fixed (long* __refParamPtr0 = &m)
            {
                var __arg0 = __refParamPtr0;
                fixed (long* __refParamPtr1 = &n)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (double* __refParamPtr2 = &alpha)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (double* __refParamPtr3 = &a)
                        {
                            var __arg3 = __refParamPtr3;
                            fixed (long* __refParamPtr4 = &lda)
                            {
                                var __arg4 = __refParamPtr4;
                                fixed (double* __refParamPtr5 = &x1)
                                {
                                    var __arg5 = __refParamPtr5;
                                    fixed (long* __refParamPtr6 = &incx1)
                                    {
                                        var __arg6 = __refParamPtr6;
                                        fixed (double* __refParamPtr7 = &x2)
                                        {
                                            var __arg7 = __refParamPtr7;
                                            fixed (long* __refParamPtr8 = &incx2)
                                            {
                                                var __arg8 = __refParamPtr8;
                                                fixed (double* __refParamPtr9 = &beta)
                                                {
                                                    var __arg9 = __refParamPtr9;
                                                    fixed (double* __refParamPtr10 = &y1)
                                                    {
                                                        var __arg10 = __refParamPtr10;
                                                        fixed (long* __refParamPtr11 = &incy1)
                                                        {
                                                            var __arg11 = __refParamPtr11;
                                                            fixed (double* __refParamPtr12 = &y2)
                                                            {
                                                                var __arg12 = __refParamPtr12;
                                                                fixed (long* __refParamPtr13 = &incy2)
                                                                {
                                                                    var __arg13 = __refParamPtr13;
                                                                    __Internal.Dgem2vu(__arg0, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8, __arg9, __arg10, __arg11, __arg12, __arg13);
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Sgemm(string transa, string transb, ref long m, ref long n, ref long k, ref float alpha, ref float a, ref long lda, ref float b, ref long ldb, ref float beta, ref float c, ref long ldc)
        {
            fixed (long* __refParamPtr2 = &m)
            {
                var __arg2 = __refParamPtr2;
                fixed (long* __refParamPtr3 = &n)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (long* __refParamPtr4 = &k)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (float* __refParamPtr5 = &alpha)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (float* __refParamPtr6 = &a)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (long* __refParamPtr7 = &lda)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (float* __refParamPtr8 = &b)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        fixed (long* __refParamPtr9 = &ldb)
                                        {
                                            var __arg9 = __refParamPtr9;
                                            fixed (float* __refParamPtr10 = &beta)
                                            {
                                                var __arg10 = __refParamPtr10;
                                                fixed (float* __refParamPtr11 = &c)
                                                {
                                                    var __arg11 = __refParamPtr11;
                                                    fixed (long* __refParamPtr12 = &ldc)
                                                    {
                                                        var __arg12 = __refParamPtr12;
                                                        __Internal.Sgemm(transa, transb, __arg2, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8, __arg9, __arg10, __arg11, __arg12);
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static float* SgemmAlloc(string identifier, ref long m, ref long n, ref long k)
        {
            fixed (long* __refParamPtr1 = &m)
            {
                var __arg1 = __refParamPtr1;
                fixed (long* __refParamPtr2 = &n)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (long* __refParamPtr3 = &k)
                    {
                        var __arg3 = __refParamPtr3;
                        var __ret = __Internal.SgemmAlloc(identifier, __arg1, __arg2, __arg3);
                        return __ret;
                    }
                }
            }
        }

        public static void SgemmPack(string identifier, string trans, ref long m, ref long n, ref long k, ref float alpha, ref float src, ref long ld, ref float dest)
        {
            fixed (long* __refParamPtr2 = &m)
            {
                var __arg2 = __refParamPtr2;
                fixed (long* __refParamPtr3 = &n)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (long* __refParamPtr4 = &k)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (float* __refParamPtr5 = &alpha)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (float* __refParamPtr6 = &src)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (long* __refParamPtr7 = &ld)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (float* __refParamPtr8 = &dest)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        __Internal.SgemmPack(identifier, trans, __arg2, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void SgemmCompute(string transa, string transb, ref long m, ref long n, ref long k, ref float a, ref long lda, ref float b, ref long ldb, ref float beta, ref float c, ref long ldc)
        {
            fixed (long* __refParamPtr2 = &m)
            {
                var __arg2 = __refParamPtr2;
                fixed (long* __refParamPtr3 = &n)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (long* __refParamPtr4 = &k)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (float* __refParamPtr5 = &a)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (long* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (float* __refParamPtr7 = &b)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (long* __refParamPtr8 = &ldb)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        fixed (float* __refParamPtr9 = &beta)
                                        {
                                            var __arg9 = __refParamPtr9;
                                            fixed (float* __refParamPtr10 = &c)
                                            {
                                                var __arg10 = __refParamPtr10;
                                                fixed (long* __refParamPtr11 = &ldc)
                                                {
                                                    var __arg11 = __refParamPtr11;
                                                    __Internal.SgemmCompute(transa, transb, __arg2, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8, __arg9, __arg10, __arg11);
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void SgemmFree(ref float mat)
        {
            fixed (float* __refParamPtr0 = &mat)
            {
                var __arg0 = __refParamPtr0;
                __Internal.SgemmFree(__arg0);
            }
        }

        public static void SgemmBatch(string transa_array, string transb_array, ref long m_array, ref long n_array, ref long k_array, ref float alpha_array, float** a_array, ref long lda_array, float** b_array, ref long ldb_array, ref float beta_array, float** c_array, ref long ldc_array, ref long group_count, ref long group_size)
        {
            fixed (long* __refParamPtr2 = &m_array)
            {
                var __arg2 = __refParamPtr2;
                fixed (long* __refParamPtr3 = &n_array)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (long* __refParamPtr4 = &k_array)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (float* __refParamPtr5 = &alpha_array)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (long* __refParamPtr7 = &lda_array)
                            {
                                var __arg7 = __refParamPtr7;
                                fixed (long* __refParamPtr9 = &ldb_array)
                                {
                                    var __arg9 = __refParamPtr9;
                                    fixed (float* __refParamPtr10 = &beta_array)
                                    {
                                        var __arg10 = __refParamPtr10;
                                        fixed (long* __refParamPtr12 = &ldc_array)
                                        {
                                            var __arg12 = __refParamPtr12;
                                            fixed (long* __refParamPtr13 = &group_count)
                                            {
                                                var __arg13 = __refParamPtr13;
                                                fixed (long* __refParamPtr14 = &group_size)
                                                {
                                                    var __arg14 = __refParamPtr14;
                                                    __Internal.SgemmBatch(transa_array, transb_array, __arg2, __arg3, __arg4, __arg5, a_array, __arg7, b_array, __arg9, __arg10, c_array, __arg12, __arg13, __arg14);
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Sgemmt(string uplo, string transa, string transb, ref long n, ref long k, ref float alpha, ref float a, ref long lda, ref float b, ref long ldb, ref float beta, ref float c, ref long ldc)
        {
            fixed (long* __refParamPtr3 = &n)
            {
                var __arg3 = __refParamPtr3;
                fixed (long* __refParamPtr4 = &k)
                {
                    var __arg4 = __refParamPtr4;
                    fixed (float* __refParamPtr5 = &alpha)
                    {
                        var __arg5 = __refParamPtr5;
                        fixed (float* __refParamPtr6 = &a)
                        {
                            var __arg6 = __refParamPtr6;
                            fixed (long* __refParamPtr7 = &lda)
                            {
                                var __arg7 = __refParamPtr7;
                                fixed (float* __refParamPtr8 = &b)
                                {
                                    var __arg8 = __refParamPtr8;
                                    fixed (long* __refParamPtr9 = &ldb)
                                    {
                                        var __arg9 = __refParamPtr9;
                                        fixed (float* __refParamPtr10 = &beta)
                                        {
                                            var __arg10 = __refParamPtr10;
                                            fixed (float* __refParamPtr11 = &c)
                                            {
                                                var __arg11 = __refParamPtr11;
                                                fixed (long* __refParamPtr12 = &ldc)
                                                {
                                                    var __arg12 = __refParamPtr12;
                                                    __Internal.Sgemmt(uplo, transa, transb, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8, __arg9, __arg10, __arg11, __arg12);
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Ssymm(string side, string uplo, ref long m, ref long n, ref float alpha, ref float a, ref long lda, ref float b, ref long ldb, ref float beta, ref float c, ref long ldc)
        {
            fixed (long* __refParamPtr2 = &m)
            {
                var __arg2 = __refParamPtr2;
                fixed (long* __refParamPtr3 = &n)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (float* __refParamPtr4 = &alpha)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (float* __refParamPtr5 = &a)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (long* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (float* __refParamPtr7 = &b)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (long* __refParamPtr8 = &ldb)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        fixed (float* __refParamPtr9 = &beta)
                                        {
                                            var __arg9 = __refParamPtr9;
                                            fixed (float* __refParamPtr10 = &c)
                                            {
                                                var __arg10 = __refParamPtr10;
                                                fixed (long* __refParamPtr11 = &ldc)
                                                {
                                                    var __arg11 = __refParamPtr11;
                                                    __Internal.Ssymm(side, uplo, __arg2, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8, __arg9, __arg10, __arg11);
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Ssyr2k(string uplo, string trans, ref long n, ref long k, ref float alpha, ref float a, ref long lda, ref float b, ref long ldb, ref float beta, ref float c, ref long ldc)
        {
            fixed (long* __refParamPtr2 = &n)
            {
                var __arg2 = __refParamPtr2;
                fixed (long* __refParamPtr3 = &k)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (float* __refParamPtr4 = &alpha)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (float* __refParamPtr5 = &a)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (long* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (float* __refParamPtr7 = &b)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (long* __refParamPtr8 = &ldb)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        fixed (float* __refParamPtr9 = &beta)
                                        {
                                            var __arg9 = __refParamPtr9;
                                            fixed (float* __refParamPtr10 = &c)
                                            {
                                                var __arg10 = __refParamPtr10;
                                                fixed (long* __refParamPtr11 = &ldc)
                                                {
                                                    var __arg11 = __refParamPtr11;
                                                    __Internal.Ssyr2k(uplo, trans, __arg2, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8, __arg9, __arg10, __arg11);
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Ssyrk(string uplo, string trans, ref long n, ref long k, ref float alpha, ref float a, ref long lda, ref float beta, ref float c, ref long ldc)
        {
            fixed (long* __refParamPtr2 = &n)
            {
                var __arg2 = __refParamPtr2;
                fixed (long* __refParamPtr3 = &k)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (float* __refParamPtr4 = &alpha)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (float* __refParamPtr5 = &a)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (long* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (float* __refParamPtr7 = &beta)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (float* __refParamPtr8 = &c)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        fixed (long* __refParamPtr9 = &ldc)
                                        {
                                            var __arg9 = __refParamPtr9;
                                            __Internal.Ssyrk(uplo, trans, __arg2, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8, __arg9);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Strmm(string side, string uplo, string transa, string diag, ref long m, ref long n, ref float alpha, ref float a, ref long lda, ref float b, ref long ldb)
        {
            fixed (long* __refParamPtr4 = &m)
            {
                var __arg4 = __refParamPtr4;
                fixed (long* __refParamPtr5 = &n)
                {
                    var __arg5 = __refParamPtr5;
                    fixed (float* __refParamPtr6 = &alpha)
                    {
                        var __arg6 = __refParamPtr6;
                        fixed (float* __refParamPtr7 = &a)
                        {
                            var __arg7 = __refParamPtr7;
                            fixed (long* __refParamPtr8 = &lda)
                            {
                                var __arg8 = __refParamPtr8;
                                fixed (float* __refParamPtr9 = &b)
                                {
                                    var __arg9 = __refParamPtr9;
                                    fixed (long* __refParamPtr10 = &ldb)
                                    {
                                        var __arg10 = __refParamPtr10;
                                        __Internal.Strmm(side, uplo, transa, diag, __arg4, __arg5, __arg6, __arg7, __arg8, __arg9, __arg10);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Strsm(string side, string uplo, string transa, string diag, ref long m, ref long n, ref float alpha, ref float a, ref long lda, ref float b, ref long ldb)
        {
            fixed (long* __refParamPtr4 = &m)
            {
                var __arg4 = __refParamPtr4;
                fixed (long* __refParamPtr5 = &n)
                {
                    var __arg5 = __refParamPtr5;
                    fixed (float* __refParamPtr6 = &alpha)
                    {
                        var __arg6 = __refParamPtr6;
                        fixed (float* __refParamPtr7 = &a)
                        {
                            var __arg7 = __refParamPtr7;
                            fixed (long* __refParamPtr8 = &lda)
                            {
                                var __arg8 = __refParamPtr8;
                                fixed (float* __refParamPtr9 = &b)
                                {
                                    var __arg9 = __refParamPtr9;
                                    fixed (long* __refParamPtr10 = &ldb)
                                    {
                                        var __arg10 = __refParamPtr10;
                                        __Internal.Strsm(side, uplo, transa, diag, __arg4, __arg5, __arg6, __arg7, __arg8, __arg9, __arg10);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void StrsmBatch(string side_array, string uplo_array, string transa_array, string diag_array, ref long m_array, ref long n_array, ref float alpha_array, float** a_array, ref long lda_array, float** b_array, ref long ldb, ref long group_count, ref long group_size)
        {
            fixed (long* __refParamPtr4 = &m_array)
            {
                var __arg4 = __refParamPtr4;
                fixed (long* __refParamPtr5 = &n_array)
                {
                    var __arg5 = __refParamPtr5;
                    fixed (float* __refParamPtr6 = &alpha_array)
                    {
                        var __arg6 = __refParamPtr6;
                        fixed (long* __refParamPtr8 = &lda_array)
                        {
                            var __arg8 = __refParamPtr8;
                            fixed (long* __refParamPtr10 = &ldb)
                            {
                                var __arg10 = __refParamPtr10;
                                fixed (long* __refParamPtr11 = &group_count)
                                {
                                    var __arg11 = __refParamPtr11;
                                    fixed (long* __refParamPtr12 = &group_size)
                                    {
                                        var __arg12 = __refParamPtr12;
                                        __Internal.StrsmBatch(side_array, uplo_array, transa_array, diag_array, __arg4, __arg5, __arg6, a_array, __arg8, b_array, __arg10, __arg11, __arg12);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Dgemm(string transa, string transb, ref long m, ref long n, ref long k, ref double alpha, ref double a, ref long lda, ref double b, ref long ldb, ref double beta, ref double c, ref long ldc)
        {
            fixed (long* __refParamPtr2 = &m)
            {
                var __arg2 = __refParamPtr2;
                fixed (long* __refParamPtr3 = &n)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (long* __refParamPtr4 = &k)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (double* __refParamPtr5 = &alpha)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (double* __refParamPtr6 = &a)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (long* __refParamPtr7 = &lda)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (double* __refParamPtr8 = &b)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        fixed (long* __refParamPtr9 = &ldb)
                                        {
                                            var __arg9 = __refParamPtr9;
                                            fixed (double* __refParamPtr10 = &beta)
                                            {
                                                var __arg10 = __refParamPtr10;
                                                fixed (double* __refParamPtr11 = &c)
                                                {
                                                    var __arg11 = __refParamPtr11;
                                                    fixed (long* __refParamPtr12 = &ldc)
                                                    {
                                                        var __arg12 = __refParamPtr12;
                                                        __Internal.Dgemm(transa, transb, __arg2, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8, __arg9, __arg10, __arg11, __arg12);
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static double* DgemmAlloc(string identifier, ref long m, ref long n, ref long k)
        {
            fixed (long* __refParamPtr1 = &m)
            {
                var __arg1 = __refParamPtr1;
                fixed (long* __refParamPtr2 = &n)
                {
                    var __arg2 = __refParamPtr2;
                    fixed (long* __refParamPtr3 = &k)
                    {
                        var __arg3 = __refParamPtr3;
                        var __ret = __Internal.DgemmAlloc(identifier, __arg1, __arg2, __arg3);
                        return __ret;
                    }
                }
            }
        }

        public static void DgemmPack(string identifier, string trans, ref long m, ref long n, ref long k, ref double alpha, ref double src, ref long ld, ref double dest)
        {
            fixed (long* __refParamPtr2 = &m)
            {
                var __arg2 = __refParamPtr2;
                fixed (long* __refParamPtr3 = &n)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (long* __refParamPtr4 = &k)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (double* __refParamPtr5 = &alpha)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (double* __refParamPtr6 = &src)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (long* __refParamPtr7 = &ld)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (double* __refParamPtr8 = &dest)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        __Internal.DgemmPack(identifier, trans, __arg2, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void DgemmCompute(string transa, string transb, ref long m, ref long n, ref long k, ref double a, ref long lda, ref double b, ref long ldb, ref double beta, ref double c, ref long ldc)
        {
            fixed (long* __refParamPtr2 = &m)
            {
                var __arg2 = __refParamPtr2;
                fixed (long* __refParamPtr3 = &n)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (long* __refParamPtr4 = &k)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (double* __refParamPtr5 = &a)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (long* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (double* __refParamPtr7 = &b)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (long* __refParamPtr8 = &ldb)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        fixed (double* __refParamPtr9 = &beta)
                                        {
                                            var __arg9 = __refParamPtr9;
                                            fixed (double* __refParamPtr10 = &c)
                                            {
                                                var __arg10 = __refParamPtr10;
                                                fixed (long* __refParamPtr11 = &ldc)
                                                {
                                                    var __arg11 = __refParamPtr11;
                                                    __Internal.DgemmCompute(transa, transb, __arg2, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8, __arg9, __arg10, __arg11);
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void DgemmFree(ref double mat)
        {
            fixed (double* __refParamPtr0 = &mat)
            {
                var __arg0 = __refParamPtr0;
                __Internal.DgemmFree(__arg0);
            }
        }

        public static void DgemmBatch(string transa_array, string transb_array, ref long m_array, ref long n_array, ref long k_array, ref double alpha_array, double** a_array, ref long lda_array, double** b_array, ref long ldb_array, ref double beta_array, double** c_array, ref long ldc_array, ref long group_count, ref long group_size)
        {
            fixed (long* __refParamPtr2 = &m_array)
            {
                var __arg2 = __refParamPtr2;
                fixed (long* __refParamPtr3 = &n_array)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (long* __refParamPtr4 = &k_array)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (double* __refParamPtr5 = &alpha_array)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (long* __refParamPtr7 = &lda_array)
                            {
                                var __arg7 = __refParamPtr7;
                                fixed (long* __refParamPtr9 = &ldb_array)
                                {
                                    var __arg9 = __refParamPtr9;
                                    fixed (double* __refParamPtr10 = &beta_array)
                                    {
                                        var __arg10 = __refParamPtr10;
                                        fixed (long* __refParamPtr12 = &ldc_array)
                                        {
                                            var __arg12 = __refParamPtr12;
                                            fixed (long* __refParamPtr13 = &group_count)
                                            {
                                                var __arg13 = __refParamPtr13;
                                                fixed (long* __refParamPtr14 = &group_size)
                                                {
                                                    var __arg14 = __refParamPtr14;
                                                    __Internal.DgemmBatch(transa_array, transb_array, __arg2, __arg3, __arg4, __arg5, a_array, __arg7, b_array, __arg9, __arg10, c_array, __arg12, __arg13, __arg14);
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Dgemmt(string uplo, string transa, string transb, ref long n, ref long k, ref double alpha, ref double a, ref long lda, ref double b, ref long ldb, ref double beta, ref double c, ref long ldc)
        {
            fixed (long* __refParamPtr3 = &n)
            {
                var __arg3 = __refParamPtr3;
                fixed (long* __refParamPtr4 = &k)
                {
                    var __arg4 = __refParamPtr4;
                    fixed (double* __refParamPtr5 = &alpha)
                    {
                        var __arg5 = __refParamPtr5;
                        fixed (double* __refParamPtr6 = &a)
                        {
                            var __arg6 = __refParamPtr6;
                            fixed (long* __refParamPtr7 = &lda)
                            {
                                var __arg7 = __refParamPtr7;
                                fixed (double* __refParamPtr8 = &b)
                                {
                                    var __arg8 = __refParamPtr8;
                                    fixed (long* __refParamPtr9 = &ldb)
                                    {
                                        var __arg9 = __refParamPtr9;
                                        fixed (double* __refParamPtr10 = &beta)
                                        {
                                            var __arg10 = __refParamPtr10;
                                            fixed (double* __refParamPtr11 = &c)
                                            {
                                                var __arg11 = __refParamPtr11;
                                                fixed (long* __refParamPtr12 = &ldc)
                                                {
                                                    var __arg12 = __refParamPtr12;
                                                    __Internal.Dgemmt(uplo, transa, transb, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8, __arg9, __arg10, __arg11, __arg12);
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Dsymm(string side, string uplo, ref long m, ref long n, ref double alpha, ref double a, ref long lda, ref double b, ref long ldb, ref double beta, ref double c, ref long ldc)
        {
            fixed (long* __refParamPtr2 = &m)
            {
                var __arg2 = __refParamPtr2;
                fixed (long* __refParamPtr3 = &n)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (double* __refParamPtr4 = &alpha)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (double* __refParamPtr5 = &a)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (long* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (double* __refParamPtr7 = &b)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (long* __refParamPtr8 = &ldb)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        fixed (double* __refParamPtr9 = &beta)
                                        {
                                            var __arg9 = __refParamPtr9;
                                            fixed (double* __refParamPtr10 = &c)
                                            {
                                                var __arg10 = __refParamPtr10;
                                                fixed (long* __refParamPtr11 = &ldc)
                                                {
                                                    var __arg11 = __refParamPtr11;
                                                    __Internal.Dsymm(side, uplo, __arg2, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8, __arg9, __arg10, __arg11);
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Dsyr2k(string uplo, string trans, ref long n, ref long k, ref double alpha, ref double a, ref long lda, ref double b, ref long ldb, ref double beta, ref double c, ref long ldc)
        {
            fixed (long* __refParamPtr2 = &n)
            {
                var __arg2 = __refParamPtr2;
                fixed (long* __refParamPtr3 = &k)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (double* __refParamPtr4 = &alpha)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (double* __refParamPtr5 = &a)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (long* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (double* __refParamPtr7 = &b)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (long* __refParamPtr8 = &ldb)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        fixed (double* __refParamPtr9 = &beta)
                                        {
                                            var __arg9 = __refParamPtr9;
                                            fixed (double* __refParamPtr10 = &c)
                                            {
                                                var __arg10 = __refParamPtr10;
                                                fixed (long* __refParamPtr11 = &ldc)
                                                {
                                                    var __arg11 = __refParamPtr11;
                                                    __Internal.Dsyr2k(uplo, trans, __arg2, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8, __arg9, __arg10, __arg11);
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Dsyrk(string uplo, string trans, ref long n, ref long k, ref double alpha, ref double a, ref long lda, ref double beta, ref double c, ref long ldc)
        {
            fixed (long* __refParamPtr2 = &n)
            {
                var __arg2 = __refParamPtr2;
                fixed (long* __refParamPtr3 = &k)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (double* __refParamPtr4 = &alpha)
                    {
                        var __arg4 = __refParamPtr4;
                        fixed (double* __refParamPtr5 = &a)
                        {
                            var __arg5 = __refParamPtr5;
                            fixed (long* __refParamPtr6 = &lda)
                            {
                                var __arg6 = __refParamPtr6;
                                fixed (double* __refParamPtr7 = &beta)
                                {
                                    var __arg7 = __refParamPtr7;
                                    fixed (double* __refParamPtr8 = &c)
                                    {
                                        var __arg8 = __refParamPtr8;
                                        fixed (long* __refParamPtr9 = &ldc)
                                        {
                                            var __arg9 = __refParamPtr9;
                                            __Internal.Dsyrk(uplo, trans, __arg2, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8, __arg9);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Dtrmm(string side, string uplo, string transa, string diag, ref long m, ref long n, ref double alpha, ref double a, ref long lda, ref double b, ref long ldb)
        {
            fixed (long* __refParamPtr4 = &m)
            {
                var __arg4 = __refParamPtr4;
                fixed (long* __refParamPtr5 = &n)
                {
                    var __arg5 = __refParamPtr5;
                    fixed (double* __refParamPtr6 = &alpha)
                    {
                        var __arg6 = __refParamPtr6;
                        fixed (double* __refParamPtr7 = &a)
                        {
                            var __arg7 = __refParamPtr7;
                            fixed (long* __refParamPtr8 = &lda)
                            {
                                var __arg8 = __refParamPtr8;
                                fixed (double* __refParamPtr9 = &b)
                                {
                                    var __arg9 = __refParamPtr9;
                                    fixed (long* __refParamPtr10 = &ldb)
                                    {
                                        var __arg10 = __refParamPtr10;
                                        __Internal.Dtrmm(side, uplo, transa, diag, __arg4, __arg5, __arg6, __arg7, __arg8, __arg9, __arg10);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void Dtrsm(string side, string uplo, string transa, string diag, ref long m, ref long n, ref double alpha, ref double a, ref long lda, ref double b, ref long ldb)
        {
            fixed (long* __refParamPtr4 = &m)
            {
                var __arg4 = __refParamPtr4;
                fixed (long* __refParamPtr5 = &n)
                {
                    var __arg5 = __refParamPtr5;
                    fixed (double* __refParamPtr6 = &alpha)
                    {
                        var __arg6 = __refParamPtr6;
                        fixed (double* __refParamPtr7 = &a)
                        {
                            var __arg7 = __refParamPtr7;
                            fixed (long* __refParamPtr8 = &lda)
                            {
                                var __arg8 = __refParamPtr8;
                                fixed (double* __refParamPtr9 = &b)
                                {
                                    var __arg9 = __refParamPtr9;
                                    fixed (long* __refParamPtr10 = &ldb)
                                    {
                                        var __arg10 = __refParamPtr10;
                                        __Internal.Dtrsm(side, uplo, transa, diag, __arg4, __arg5, __arg6, __arg7, __arg8, __arg9, __arg10);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void DtrsmBatch(string side_array, string uplo_array, string transa_array, string diag_array, ref long m_array, ref long n_array, ref double alpha_array, double** a_array, ref long lda_array, double** b_array, ref long ldb, ref long group_count, ref long group_size)
        {
            fixed (long* __refParamPtr4 = &m_array)
            {
                var __arg4 = __refParamPtr4;
                fixed (long* __refParamPtr5 = &n_array)
                {
                    var __arg5 = __refParamPtr5;
                    fixed (double* __refParamPtr6 = &alpha_array)
                    {
                        var __arg6 = __refParamPtr6;
                        fixed (long* __refParamPtr8 = &lda_array)
                        {
                            var __arg8 = __refParamPtr8;
                            fixed (long* __refParamPtr10 = &ldb)
                            {
                                var __arg10 = __refParamPtr10;
                                fixed (long* __refParamPtr11 = &group_count)
                                {
                                    var __arg11 = __refParamPtr11;
                                    fixed (long* __refParamPtr12 = &group_size)
                                    {
                                        var __arg12 = __refParamPtr12;
                                        __Internal.DtrsmBatch(side_array, uplo_array, transa_array, diag_array, __arg4, __arg5, __arg6, a_array, __arg8, b_array, __arg10, __arg11, __arg12);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void GemmS8u8s32(string transa, string transb, string offsetc, ref long m, ref long n, ref long k, ref float alpha, string a, ref long lda, string ao, byte* b, ref long ldb, string bo, ref float beta, ref int c, ref long ldc, ref int co)
        {
            fixed (long* __refParamPtr3 = &m)
            {
                var __arg3 = __refParamPtr3;
                fixed (long* __refParamPtr4 = &n)
                {
                    var __arg4 = __refParamPtr4;
                    fixed (long* __refParamPtr5 = &k)
                    {
                        var __arg5 = __refParamPtr5;
                        fixed (float* __refParamPtr6 = &alpha)
                        {
                            var __arg6 = __refParamPtr6;
                            fixed (long* __refParamPtr8 = &lda)
                            {
                                var __arg8 = __refParamPtr8;
                                fixed (long* __refParamPtr11 = &ldb)
                                {
                                    var __arg11 = __refParamPtr11;
                                    fixed (float* __refParamPtr13 = &beta)
                                    {
                                        var __arg13 = __refParamPtr13;
                                        fixed (int* __refParamPtr14 = &c)
                                        {
                                            var __arg14 = __refParamPtr14;
                                            fixed (long* __refParamPtr15 = &ldc)
                                            {
                                                var __arg15 = __refParamPtr15;
                                                fixed (int* __refParamPtr16 = &co)
                                                {
                                                    var __arg16 = __refParamPtr16;
                                                    __Internal.GemmS8u8s32(transa, transb, offsetc, __arg3, __arg4, __arg5, __arg6, a, __arg8, ao, b, __arg11, bo, __arg13, __arg14, __arg15, __arg16);
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public static void GemmS16s16s32(string transa, string transb, string offsetc, ref long m, ref long n, ref long k, ref float alpha, ref short a, ref long lda, ref short ao, ref short b, ref long ldb, ref short bo, ref float beta, ref int c, ref long ldc, ref int co)
        {
            fixed (long* __refParamPtr3 = &m)
            {
                var __arg3 = __refParamPtr3;
                fixed (long* __refParamPtr4 = &n)
                {
                    var __arg4 = __refParamPtr4;
                    fixed (long* __refParamPtr5 = &k)
                    {
                        var __arg5 = __refParamPtr5;
                        fixed (float* __refParamPtr6 = &alpha)
                        {
                            var __arg6 = __refParamPtr6;
                            fixed (short* __refParamPtr7 = &a)
                            {
                                var __arg7 = __refParamPtr7;
                                fixed (long* __refParamPtr8 = &lda)
                                {
                                    var __arg8 = __refParamPtr8;
                                    fixed (short* __refParamPtr9 = &ao)
                                    {
                                        var __arg9 = __refParamPtr9;
                                        fixed (short* __refParamPtr10 = &b)
                                        {
                                            var __arg10 = __refParamPtr10;
                                            fixed (long* __refParamPtr11 = &ldb)
                                            {
                                                var __arg11 = __refParamPtr11;
                                                fixed (short* __refParamPtr12 = &bo)
                                                {
                                                    var __arg12 = __refParamPtr12;
                                                    fixed (float* __refParamPtr13 = &beta)
                                                    {
                                                        var __arg13 = __refParamPtr13;
                                                        fixed (int* __refParamPtr14 = &c)
                                                        {
                                                            var __arg14 = __refParamPtr14;
                                                            fixed (long* __refParamPtr15 = &ldc)
                                                            {
                                                                var __arg15 = __refParamPtr15;
                                                                fixed (int* __refParamPtr16 = &co)
                                                                {
                                                                    var __arg16 = __refParamPtr16;
                                                                    __Internal.GemmS16s16s32(transa, transb, offsetc, __arg3, __arg4, __arg5, __arg6, __arg7, __arg8, __arg9, __arg10, __arg11, __arg12, __arg13, __arg14, __arg15, __arg16);
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
