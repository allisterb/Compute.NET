// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace CUDA
{
    public unsafe partial class cuBlas
    {
        public partial struct __Internal
        {
            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasInit")]
            internal static extern global::CUDA.CublasStatusT Init();

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasShutdown")]
            internal static extern global::CUDA.CublasStatusT Shutdown();

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasGetError")]
            internal static extern global::CUDA.CublasStatusT GetError();

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasGetVersion")]
            internal static extern global::CUDA.CublasStatusT GetVersion(int* version);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasAlloc")]
            internal static extern global::CUDA.CublasStatusT Alloc(int n, int elemSize, void** devicePtr);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasFree")]
            internal static extern global::CUDA.CublasStatusT Free(global::System.IntPtr devicePtr);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasSetKernelStream")]
            internal static extern global::CUDA.CublasStatusT SetKernelStream(global::System.IntPtr stream);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasSnrm2")]
            internal static extern float Snrm2(int n, float* x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasDnrm2")]
            internal static extern double Dnrm2(int n, double* x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasScnrm2")]
            internal static extern float Scnrm2(int n, global::System.IntPtr x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasDznrm2")]
            internal static extern double Dznrm2(int n, global::System.IntPtr x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasSdot")]
            internal static extern float Sdot(int n, float* x, int incx, float* y, int incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasDdot")]
            internal static extern double Ddot(int n, double* x, int incx, double* y, int incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasCdotu")]
            internal static extern global::CUDA.Float2.__Internal Cdotu(int n, global::System.IntPtr x, int incx, global::System.IntPtr y, int incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasCdotc")]
            internal static extern global::CUDA.Float2.__Internal Cdotc(int n, global::System.IntPtr x, int incx, global::System.IntPtr y, int incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasZdotu")]
            internal static extern void Zdotu(global::System.IntPtr @return, int n, global::System.IntPtr x, int incx, global::System.IntPtr y, int incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasZdotc")]
            internal static extern void Zdotc(global::System.IntPtr @return, int n, global::System.IntPtr x, int incx, global::System.IntPtr y, int incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasSscal")]
            internal static extern void Sscal(int n, float alpha, float* x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasDscal")]
            internal static extern void Dscal(int n, double alpha, double* x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasCscal")]
            internal static extern void Cscal(int n, global::CUDA.Float2.__Internal alpha, global::System.IntPtr x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasZscal")]
            internal static extern void Zscal(int n, global::CUDA.Double2.__Internal alpha, global::System.IntPtr x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasCsscal")]
            internal static extern void Csscal(int n, float alpha, global::System.IntPtr x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasZdscal")]
            internal static extern void Zdscal(int n, double alpha, global::System.IntPtr x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasSaxpy")]
            internal static extern void Saxpy(int n, float alpha, float* x, int incx, float* y, int incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasDaxpy")]
            internal static extern void Daxpy(int n, double alpha, double* x, int incx, double* y, int incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasCaxpy")]
            internal static extern void Caxpy(int n, global::CUDA.Float2.__Internal alpha, global::System.IntPtr x, int incx, global::System.IntPtr y, int incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasZaxpy")]
            internal static extern void Zaxpy(int n, global::CUDA.Double2.__Internal alpha, global::System.IntPtr x, int incx, global::System.IntPtr y, int incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasScopy")]
            internal static extern void Scopy(int n, float* x, int incx, float* y, int incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasDcopy")]
            internal static extern void Dcopy(int n, double* x, int incx, double* y, int incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasCcopy")]
            internal static extern void Ccopy(int n, global::System.IntPtr x, int incx, global::System.IntPtr y, int incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasZcopy")]
            internal static extern void Zcopy(int n, global::System.IntPtr x, int incx, global::System.IntPtr y, int incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasSswap")]
            internal static extern void Sswap(int n, float* x, int incx, float* y, int incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasDswap")]
            internal static extern void Dswap(int n, double* x, int incx, double* y, int incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasCswap")]
            internal static extern void Cswap(int n, global::System.IntPtr x, int incx, global::System.IntPtr y, int incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasZswap")]
            internal static extern void Zswap(int n, global::System.IntPtr x, int incx, global::System.IntPtr y, int incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasIsamax")]
            internal static extern int Isamax(int n, float* x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasIdamax")]
            internal static extern int Idamax(int n, double* x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasIcamax")]
            internal static extern int Icamax(int n, global::System.IntPtr x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasIzamax")]
            internal static extern int Izamax(int n, global::System.IntPtr x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasIsamin")]
            internal static extern int Isamin(int n, float* x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasIdamin")]
            internal static extern int Idamin(int n, double* x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasIcamin")]
            internal static extern int Icamin(int n, global::System.IntPtr x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasIzamin")]
            internal static extern int Izamin(int n, global::System.IntPtr x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasSasum")]
            internal static extern float Sasum(int n, float* x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasDasum")]
            internal static extern double Dasum(int n, double* x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasScasum")]
            internal static extern float Scasum(int n, global::System.IntPtr x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasDzasum")]
            internal static extern double Dzasum(int n, global::System.IntPtr x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasSrot")]
            internal static extern void Srot(int n, float* x, int incx, float* y, int incy, float sc, float ss);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasDrot")]
            internal static extern void Drot(int n, double* x, int incx, double* y, int incy, double sc, double ss);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasCrot")]
            internal static extern void Crot(int n, global::System.IntPtr x, int incx, global::System.IntPtr y, int incy, float c, global::CUDA.Float2.__Internal s);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasZrot")]
            internal static extern void Zrot(int n, global::System.IntPtr x, int incx, global::System.IntPtr y, int incy, double sc, global::CUDA.Double2.__Internal cs);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasCsrot")]
            internal static extern void Csrot(int n, global::System.IntPtr x, int incx, global::System.IntPtr y, int incy, float c, float s);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasZdrot")]
            internal static extern void Zdrot(int n, global::System.IntPtr x, int incx, global::System.IntPtr y, int incy, double c, double s);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasSrotg")]
            internal static extern void Srotg(float* sa, float* sb, float* sc, float* ss);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasDrotg")]
            internal static extern void Drotg(double* sa, double* sb, double* sc, double* ss);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasCrotg")]
            internal static extern void Crotg(global::System.IntPtr ca, global::CUDA.Float2.__Internal cb, float* sc, global::System.IntPtr cs);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasZrotg")]
            internal static extern void Zrotg(global::System.IntPtr ca, global::CUDA.Double2.__Internal cb, double* sc, global::System.IntPtr cs);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasSrotm")]
            internal static extern void Srotm(int n, float* x, int incx, float* y, int incy, float* sparam);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasDrotm")]
            internal static extern void Drotm(int n, double* x, int incx, double* y, int incy, double* sparam);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasSrotmg")]
            internal static extern void Srotmg(float* sd1, float* sd2, float* sx1, float* sy1, float* sparam);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasDrotmg")]
            internal static extern void Drotmg(double* sd1, double* sd2, double* sx1, double* sy1, double* sparam);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasSgemv")]
            internal static extern void Sgemv(sbyte trans, int m, int n, float alpha, float* A, int lda, float* x, int incx, float beta, float* y, int incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasDgemv")]
            internal static extern void Dgemv(sbyte trans, int m, int n, double alpha, double* A, int lda, double* x, int incx, double beta, double* y, int incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasCgemv")]
            internal static extern void Cgemv(sbyte trans, int m, int n, global::CUDA.Float2.__Internal alpha, global::System.IntPtr A, int lda, global::System.IntPtr x, int incx, global::CUDA.Float2.__Internal beta, global::System.IntPtr y, int incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasZgemv")]
            internal static extern void Zgemv(sbyte trans, int m, int n, global::CUDA.Double2.__Internal alpha, global::System.IntPtr A, int lda, global::System.IntPtr x, int incx, global::CUDA.Double2.__Internal beta, global::System.IntPtr y, int incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasSgbmv")]
            internal static extern void Sgbmv(sbyte trans, int m, int n, int kl, int ku, float alpha, float* A, int lda, float* x, int incx, float beta, float* y, int incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasDgbmv")]
            internal static extern void Dgbmv(sbyte trans, int m, int n, int kl, int ku, double alpha, double* A, int lda, double* x, int incx, double beta, double* y, int incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasCgbmv")]
            internal static extern void Cgbmv(sbyte trans, int m, int n, int kl, int ku, global::CUDA.Float2.__Internal alpha, global::System.IntPtr A, int lda, global::System.IntPtr x, int incx, global::CUDA.Float2.__Internal beta, global::System.IntPtr y, int incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasZgbmv")]
            internal static extern void Zgbmv(sbyte trans, int m, int n, int kl, int ku, global::CUDA.Double2.__Internal alpha, global::System.IntPtr A, int lda, global::System.IntPtr x, int incx, global::CUDA.Double2.__Internal beta, global::System.IntPtr y, int incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasStrmv")]
            internal static extern void Strmv(sbyte uplo, sbyte trans, sbyte diag, int n, float* A, int lda, float* x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasDtrmv")]
            internal static extern void Dtrmv(sbyte uplo, sbyte trans, sbyte diag, int n, double* A, int lda, double* x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasCtrmv")]
            internal static extern void Ctrmv(sbyte uplo, sbyte trans, sbyte diag, int n, global::System.IntPtr A, int lda, global::System.IntPtr x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasZtrmv")]
            internal static extern void Ztrmv(sbyte uplo, sbyte trans, sbyte diag, int n, global::System.IntPtr A, int lda, global::System.IntPtr x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasStbmv")]
            internal static extern void Stbmv(sbyte uplo, sbyte trans, sbyte diag, int n, int k, float* A, int lda, float* x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasDtbmv")]
            internal static extern void Dtbmv(sbyte uplo, sbyte trans, sbyte diag, int n, int k, double* A, int lda, double* x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasCtbmv")]
            internal static extern void Ctbmv(sbyte uplo, sbyte trans, sbyte diag, int n, int k, global::System.IntPtr A, int lda, global::System.IntPtr x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasZtbmv")]
            internal static extern void Ztbmv(sbyte uplo, sbyte trans, sbyte diag, int n, int k, global::System.IntPtr A, int lda, global::System.IntPtr x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasStpmv")]
            internal static extern void Stpmv(sbyte uplo, sbyte trans, sbyte diag, int n, float* AP, float* x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasDtpmv")]
            internal static extern void Dtpmv(sbyte uplo, sbyte trans, sbyte diag, int n, double* AP, double* x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasCtpmv")]
            internal static extern void Ctpmv(sbyte uplo, sbyte trans, sbyte diag, int n, global::System.IntPtr AP, global::System.IntPtr x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasZtpmv")]
            internal static extern void Ztpmv(sbyte uplo, sbyte trans, sbyte diag, int n, global::System.IntPtr AP, global::System.IntPtr x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasStrsv")]
            internal static extern void Strsv(sbyte uplo, sbyte trans, sbyte diag, int n, float* A, int lda, float* x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasDtrsv")]
            internal static extern void Dtrsv(sbyte uplo, sbyte trans, sbyte diag, int n, double* A, int lda, double* x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasCtrsv")]
            internal static extern void Ctrsv(sbyte uplo, sbyte trans, sbyte diag, int n, global::System.IntPtr A, int lda, global::System.IntPtr x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasZtrsv")]
            internal static extern void Ztrsv(sbyte uplo, sbyte trans, sbyte diag, int n, global::System.IntPtr A, int lda, global::System.IntPtr x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasStpsv")]
            internal static extern void Stpsv(sbyte uplo, sbyte trans, sbyte diag, int n, float* AP, float* x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasDtpsv")]
            internal static extern void Dtpsv(sbyte uplo, sbyte trans, sbyte diag, int n, double* AP, double* x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasCtpsv")]
            internal static extern void Ctpsv(sbyte uplo, sbyte trans, sbyte diag, int n, global::System.IntPtr AP, global::System.IntPtr x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasZtpsv")]
            internal static extern void Ztpsv(sbyte uplo, sbyte trans, sbyte diag, int n, global::System.IntPtr AP, global::System.IntPtr x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasStbsv")]
            internal static extern void Stbsv(sbyte uplo, sbyte trans, sbyte diag, int n, int k, float* A, int lda, float* x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasDtbsv")]
            internal static extern void Dtbsv(sbyte uplo, sbyte trans, sbyte diag, int n, int k, double* A, int lda, double* x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasCtbsv")]
            internal static extern void Ctbsv(sbyte uplo, sbyte trans, sbyte diag, int n, int k, global::System.IntPtr A, int lda, global::System.IntPtr x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasZtbsv")]
            internal static extern void Ztbsv(sbyte uplo, sbyte trans, sbyte diag, int n, int k, global::System.IntPtr A, int lda, global::System.IntPtr x, int incx);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasSsymv")]
            internal static extern void Ssymv(sbyte uplo, int n, float alpha, float* A, int lda, float* x, int incx, float beta, float* y, int incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasDsymv")]
            internal static extern void Dsymv(sbyte uplo, int n, double alpha, double* A, int lda, double* x, int incx, double beta, double* y, int incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasChemv")]
            internal static extern void Chemv(sbyte uplo, int n, global::CUDA.Float2.__Internal alpha, global::System.IntPtr A, int lda, global::System.IntPtr x, int incx, global::CUDA.Float2.__Internal beta, global::System.IntPtr y, int incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasZhemv")]
            internal static extern void Zhemv(sbyte uplo, int n, global::CUDA.Double2.__Internal alpha, global::System.IntPtr A, int lda, global::System.IntPtr x, int incx, global::CUDA.Double2.__Internal beta, global::System.IntPtr y, int incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasSsbmv")]
            internal static extern void Ssbmv(sbyte uplo, int n, int k, float alpha, float* A, int lda, float* x, int incx, float beta, float* y, int incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasDsbmv")]
            internal static extern void Dsbmv(sbyte uplo, int n, int k, double alpha, double* A, int lda, double* x, int incx, double beta, double* y, int incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasChbmv")]
            internal static extern void Chbmv(sbyte uplo, int n, int k, global::CUDA.Float2.__Internal alpha, global::System.IntPtr A, int lda, global::System.IntPtr x, int incx, global::CUDA.Float2.__Internal beta, global::System.IntPtr y, int incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasZhbmv")]
            internal static extern void Zhbmv(sbyte uplo, int n, int k, global::CUDA.Double2.__Internal alpha, global::System.IntPtr A, int lda, global::System.IntPtr x, int incx, global::CUDA.Double2.__Internal beta, global::System.IntPtr y, int incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasSspmv")]
            internal static extern void Sspmv(sbyte uplo, int n, float alpha, float* AP, float* x, int incx, float beta, float* y, int incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasDspmv")]
            internal static extern void Dspmv(sbyte uplo, int n, double alpha, double* AP, double* x, int incx, double beta, double* y, int incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasChpmv")]
            internal static extern void Chpmv(sbyte uplo, int n, global::CUDA.Float2.__Internal alpha, global::System.IntPtr AP, global::System.IntPtr x, int incx, global::CUDA.Float2.__Internal beta, global::System.IntPtr y, int incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasZhpmv")]
            internal static extern void Zhpmv(sbyte uplo, int n, global::CUDA.Double2.__Internal alpha, global::System.IntPtr AP, global::System.IntPtr x, int incx, global::CUDA.Double2.__Internal beta, global::System.IntPtr y, int incy);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasSger")]
            internal static extern void Sger(int m, int n, float alpha, float* x, int incx, float* y, int incy, float* A, int lda);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasDger")]
            internal static extern void Dger(int m, int n, double alpha, double* x, int incx, double* y, int incy, double* A, int lda);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasCgeru")]
            internal static extern void Cgeru(int m, int n, global::CUDA.Float2.__Internal alpha, global::System.IntPtr x, int incx, global::System.IntPtr y, int incy, global::System.IntPtr A, int lda);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasCgerc")]
            internal static extern void Cgerc(int m, int n, global::CUDA.Float2.__Internal alpha, global::System.IntPtr x, int incx, global::System.IntPtr y, int incy, global::System.IntPtr A, int lda);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasZgeru")]
            internal static extern void Zgeru(int m, int n, global::CUDA.Double2.__Internal alpha, global::System.IntPtr x, int incx, global::System.IntPtr y, int incy, global::System.IntPtr A, int lda);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasZgerc")]
            internal static extern void Zgerc(int m, int n, global::CUDA.Double2.__Internal alpha, global::System.IntPtr x, int incx, global::System.IntPtr y, int incy, global::System.IntPtr A, int lda);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasSsyr")]
            internal static extern void Ssyr(sbyte uplo, int n, float alpha, float* x, int incx, float* A, int lda);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasDsyr")]
            internal static extern void Dsyr(sbyte uplo, int n, double alpha, double* x, int incx, double* A, int lda);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasCher")]
            internal static extern void Cher(sbyte uplo, int n, float alpha, global::System.IntPtr x, int incx, global::System.IntPtr A, int lda);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasZher")]
            internal static extern void Zher(sbyte uplo, int n, double alpha, global::System.IntPtr x, int incx, global::System.IntPtr A, int lda);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasSspr")]
            internal static extern void Sspr(sbyte uplo, int n, float alpha, float* x, int incx, float* AP);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasDspr")]
            internal static extern void Dspr(sbyte uplo, int n, double alpha, double* x, int incx, double* AP);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasChpr")]
            internal static extern void Chpr(sbyte uplo, int n, float alpha, global::System.IntPtr x, int incx, global::System.IntPtr AP);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasZhpr")]
            internal static extern void Zhpr(sbyte uplo, int n, double alpha, global::System.IntPtr x, int incx, global::System.IntPtr AP);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasSsyr2")]
            internal static extern void Ssyr2(sbyte uplo, int n, float alpha, float* x, int incx, float* y, int incy, float* A, int lda);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasDsyr2")]
            internal static extern void Dsyr2(sbyte uplo, int n, double alpha, double* x, int incx, double* y, int incy, double* A, int lda);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasCher2")]
            internal static extern void Cher2(sbyte uplo, int n, global::CUDA.Float2.__Internal alpha, global::System.IntPtr x, int incx, global::System.IntPtr y, int incy, global::System.IntPtr A, int lda);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasZher2")]
            internal static extern void Zher2(sbyte uplo, int n, global::CUDA.Double2.__Internal alpha, global::System.IntPtr x, int incx, global::System.IntPtr y, int incy, global::System.IntPtr A, int lda);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasSspr2")]
            internal static extern void Sspr2(sbyte uplo, int n, float alpha, float* x, int incx, float* y, int incy, float* AP);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasDspr2")]
            internal static extern void Dspr2(sbyte uplo, int n, double alpha, double* x, int incx, double* y, int incy, double* AP);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasChpr2")]
            internal static extern void Chpr2(sbyte uplo, int n, global::CUDA.Float2.__Internal alpha, global::System.IntPtr x, int incx, global::System.IntPtr y, int incy, global::System.IntPtr AP);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasZhpr2")]
            internal static extern void Zhpr2(sbyte uplo, int n, global::CUDA.Double2.__Internal alpha, global::System.IntPtr x, int incx, global::System.IntPtr y, int incy, global::System.IntPtr AP);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasSgemm")]
            internal static extern void Sgemm(sbyte transa, sbyte transb, int m, int n, int k, float alpha, float* A, int lda, float* B, int ldb, float beta, float* C, int ldc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasDgemm")]
            internal static extern void Dgemm(sbyte transa, sbyte transb, int m, int n, int k, double alpha, double* A, int lda, double* B, int ldb, double beta, double* C, int ldc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasCgemm")]
            internal static extern void Cgemm(sbyte transa, sbyte transb, int m, int n, int k, global::CUDA.Float2.__Internal alpha, global::System.IntPtr A, int lda, global::System.IntPtr B, int ldb, global::CUDA.Float2.__Internal beta, global::System.IntPtr C, int ldc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasZgemm")]
            internal static extern void Zgemm(sbyte transa, sbyte transb, int m, int n, int k, global::CUDA.Double2.__Internal alpha, global::System.IntPtr A, int lda, global::System.IntPtr B, int ldb, global::CUDA.Double2.__Internal beta, global::System.IntPtr C, int ldc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasSsyrk")]
            internal static extern void Ssyrk(sbyte uplo, sbyte trans, int n, int k, float alpha, float* A, int lda, float beta, float* C, int ldc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasDsyrk")]
            internal static extern void Dsyrk(sbyte uplo, sbyte trans, int n, int k, double alpha, double* A, int lda, double beta, double* C, int ldc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasCsyrk")]
            internal static extern void Csyrk(sbyte uplo, sbyte trans, int n, int k, global::CUDA.Float2.__Internal alpha, global::System.IntPtr A, int lda, global::CUDA.Float2.__Internal beta, global::System.IntPtr C, int ldc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasZsyrk")]
            internal static extern void Zsyrk(sbyte uplo, sbyte trans, int n, int k, global::CUDA.Double2.__Internal alpha, global::System.IntPtr A, int lda, global::CUDA.Double2.__Internal beta, global::System.IntPtr C, int ldc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasCherk")]
            internal static extern void Cherk(sbyte uplo, sbyte trans, int n, int k, float alpha, global::System.IntPtr A, int lda, float beta, global::System.IntPtr C, int ldc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasZherk")]
            internal static extern void Zherk(sbyte uplo, sbyte trans, int n, int k, double alpha, global::System.IntPtr A, int lda, double beta, global::System.IntPtr C, int ldc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasSsyr2k")]
            internal static extern void Ssyr2k(sbyte uplo, sbyte trans, int n, int k, float alpha, float* A, int lda, float* B, int ldb, float beta, float* C, int ldc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasDsyr2k")]
            internal static extern void Dsyr2k(sbyte uplo, sbyte trans, int n, int k, double alpha, double* A, int lda, double* B, int ldb, double beta, double* C, int ldc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasCsyr2k")]
            internal static extern void Csyr2k(sbyte uplo, sbyte trans, int n, int k, global::CUDA.Float2.__Internal alpha, global::System.IntPtr A, int lda, global::System.IntPtr B, int ldb, global::CUDA.Float2.__Internal beta, global::System.IntPtr C, int ldc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasZsyr2k")]
            internal static extern void Zsyr2k(sbyte uplo, sbyte trans, int n, int k, global::CUDA.Double2.__Internal alpha, global::System.IntPtr A, int lda, global::System.IntPtr B, int ldb, global::CUDA.Double2.__Internal beta, global::System.IntPtr C, int ldc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasCher2k")]
            internal static extern void Cher2k(sbyte uplo, sbyte trans, int n, int k, global::CUDA.Float2.__Internal alpha, global::System.IntPtr A, int lda, global::System.IntPtr B, int ldb, float beta, global::System.IntPtr C, int ldc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasZher2k")]
            internal static extern void Zher2k(sbyte uplo, sbyte trans, int n, int k, global::CUDA.Double2.__Internal alpha, global::System.IntPtr A, int lda, global::System.IntPtr B, int ldb, double beta, global::System.IntPtr C, int ldc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasSsymm")]
            internal static extern void Ssymm(sbyte side, sbyte uplo, int m, int n, float alpha, float* A, int lda, float* B, int ldb, float beta, float* C, int ldc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasDsymm")]
            internal static extern void Dsymm(sbyte side, sbyte uplo, int m, int n, double alpha, double* A, int lda, double* B, int ldb, double beta, double* C, int ldc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasCsymm")]
            internal static extern void Csymm(sbyte side, sbyte uplo, int m, int n, global::CUDA.Float2.__Internal alpha, global::System.IntPtr A, int lda, global::System.IntPtr B, int ldb, global::CUDA.Float2.__Internal beta, global::System.IntPtr C, int ldc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasZsymm")]
            internal static extern void Zsymm(sbyte side, sbyte uplo, int m, int n, global::CUDA.Double2.__Internal alpha, global::System.IntPtr A, int lda, global::System.IntPtr B, int ldb, global::CUDA.Double2.__Internal beta, global::System.IntPtr C, int ldc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasChemm")]
            internal static extern void Chemm(sbyte side, sbyte uplo, int m, int n, global::CUDA.Float2.__Internal alpha, global::System.IntPtr A, int lda, global::System.IntPtr B, int ldb, global::CUDA.Float2.__Internal beta, global::System.IntPtr C, int ldc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasZhemm")]
            internal static extern void Zhemm(sbyte side, sbyte uplo, int m, int n, global::CUDA.Double2.__Internal alpha, global::System.IntPtr A, int lda, global::System.IntPtr B, int ldb, global::CUDA.Double2.__Internal beta, global::System.IntPtr C, int ldc);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasStrsm")]
            internal static extern void Strsm(sbyte side, sbyte uplo, sbyte transa, sbyte diag, int m, int n, float alpha, float* A, int lda, float* B, int ldb);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasDtrsm")]
            internal static extern void Dtrsm(sbyte side, sbyte uplo, sbyte transa, sbyte diag, int m, int n, double alpha, double* A, int lda, double* B, int ldb);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasCtrsm")]
            internal static extern void Ctrsm(sbyte side, sbyte uplo, sbyte transa, sbyte diag, int m, int n, global::CUDA.Float2.__Internal alpha, global::System.IntPtr A, int lda, global::System.IntPtr B, int ldb);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasZtrsm")]
            internal static extern void Ztrsm(sbyte side, sbyte uplo, sbyte transa, sbyte diag, int m, int n, global::CUDA.Double2.__Internal alpha, global::System.IntPtr A, int lda, global::System.IntPtr B, int ldb);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasStrmm")]
            internal static extern void Strmm(sbyte side, sbyte uplo, sbyte transa, sbyte diag, int m, int n, float alpha, float* A, int lda, float* B, int ldb);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasDtrmm")]
            internal static extern void Dtrmm(sbyte side, sbyte uplo, sbyte transa, sbyte diag, int m, int n, double alpha, double* A, int lda, double* B, int ldb);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasCtrmm")]
            internal static extern void Ctrmm(sbyte side, sbyte uplo, sbyte transa, sbyte diag, int m, int n, global::CUDA.Float2.__Internal alpha, global::System.IntPtr A, int lda, global::System.IntPtr B, int ldb);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("cublas64_91", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="cublasZtrmm")]
            internal static extern void Ztrmm(sbyte side, sbyte uplo, sbyte transa, sbyte diag, int m, int n, global::CUDA.Double2.__Internal alpha, global::System.IntPtr A, int lda, global::System.IntPtr B, int ldb);
        }

        public static global::CUDA.CublasStatusT Init()
        {
            var __ret = __Internal.Init();
            return __ret;
        }

        public static global::CUDA.CublasStatusT Shutdown()
        {
            var __ret = __Internal.Shutdown();
            return __ret;
        }

        public static global::CUDA.CublasStatusT GetError()
        {
            var __ret = __Internal.GetError();
            return __ret;
        }

        public static global::CUDA.CublasStatusT GetVersion(ref int version)
        {
            fixed (int* __refParamPtr0 = &version)
            {
                var __arg0 = __refParamPtr0;
                var __ret = __Internal.GetVersion(__arg0);
                return __ret;
            }
        }

        public static global::CUDA.CublasStatusT Alloc(int n, int elemSize, void** devicePtr)
        {
            var __ret = __Internal.Alloc(n, elemSize, devicePtr);
            return __ret;
        }

        public static global::CUDA.CublasStatusT Free(global::System.IntPtr devicePtr)
        {
            var __ret = __Internal.Free(devicePtr);
            return __ret;
        }

        public static global::CUDA.CublasStatusT SetKernelStream(global::CUDA.CUstreamSt stream)
        {
            var __arg0 = ReferenceEquals(stream, null) ? global::System.IntPtr.Zero : stream.__Instance;
            var __ret = __Internal.SetKernelStream(__arg0);
            return __ret;
        }

        public static float Snrm2(int n, ref float x, int incx)
        {
            fixed (float* __refParamPtr1 = &x)
            {
                var __arg1 = __refParamPtr1;
                var __ret = __Internal.Snrm2(n, __arg1, incx);
                return __ret;
            }
        }

        public static double Dnrm2(int n, ref double x, int incx)
        {
            fixed (double* __refParamPtr1 = &x)
            {
                var __arg1 = __refParamPtr1;
                var __ret = __Internal.Dnrm2(n, __arg1, incx);
                return __ret;
            }
        }

        public static float Scnrm2(int n, global::CUDA.Float2 x, int incx)
        {
            var __arg1 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __ret = __Internal.Scnrm2(n, __arg1, incx);
            return __ret;
        }

        public static double Dznrm2(int n, global::CUDA.Double2 x, int incx)
        {
            var __arg1 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __ret = __Internal.Dznrm2(n, __arg1, incx);
            return __ret;
        }

        public static float Sdot(int n, ref float x, int incx, ref float y, int incy)
        {
            fixed (float* __refParamPtr1 = &x)
            {
                var __arg1 = __refParamPtr1;
                fixed (float* __refParamPtr3 = &y)
                {
                    var __arg3 = __refParamPtr3;
                    var __ret = __Internal.Sdot(n, __arg1, incx, __arg3, incy);
                    return __ret;
                }
            }
        }

        public static double Ddot(int n, ref double x, int incx, ref double y, int incy)
        {
            fixed (double* __refParamPtr1 = &x)
            {
                var __arg1 = __refParamPtr1;
                fixed (double* __refParamPtr3 = &y)
                {
                    var __arg3 = __refParamPtr3;
                    var __ret = __Internal.Ddot(n, __arg1, incx, __arg3, incy);
                    return __ret;
                }
            }
        }

        public static global::CUDA.Float2 Cdotu(int n, global::CUDA.Float2 x, int incx, global::CUDA.Float2 y, int incy)
        {
            var __arg1 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __arg3 = ReferenceEquals(y, null) ? global::System.IntPtr.Zero : y.__Instance;
            var __ret = __Internal.Cdotu(n, __arg1, incx, __arg3, incy);
            return global::CUDA.Float2.__CreateInstance(__ret);
        }

        public static global::CUDA.Float2 Cdotc(int n, global::CUDA.Float2 x, int incx, global::CUDA.Float2 y, int incy)
        {
            var __arg1 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __arg3 = ReferenceEquals(y, null) ? global::System.IntPtr.Zero : y.__Instance;
            var __ret = __Internal.Cdotc(n, __arg1, incx, __arg3, incy);
            return global::CUDA.Float2.__CreateInstance(__ret);
        }

        public static global::CUDA.Double2 Zdotu(int n, global::CUDA.Double2 x, int incx, global::CUDA.Double2 y, int incy)
        {
            var __arg1 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __arg3 = ReferenceEquals(y, null) ? global::System.IntPtr.Zero : y.__Instance;
            var __ret = new global::CUDA.Double2.__Internal();
            __Internal.Zdotu(new IntPtr(&__ret), n, __arg1, incx, __arg3, incy);
            return global::CUDA.Double2.__CreateInstance(__ret);
        }

        public static global::CUDA.Double2 Zdotc(int n, global::CUDA.Double2 x, int incx, global::CUDA.Double2 y, int incy)
        {
            var __arg1 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __arg3 = ReferenceEquals(y, null) ? global::System.IntPtr.Zero : y.__Instance;
            var __ret = new global::CUDA.Double2.__Internal();
            __Internal.Zdotc(new IntPtr(&__ret), n, __arg1, incx, __arg3, incy);
            return global::CUDA.Double2.__CreateInstance(__ret);
        }

        public static void Sscal(int n, float alpha, ref float x, int incx)
        {
            fixed (float* __refParamPtr2 = &x)
            {
                var __arg2 = __refParamPtr2;
                __Internal.Sscal(n, alpha, __arg2, incx);
            }
        }

        public static void Dscal(int n, double alpha, ref double x, int incx)
        {
            fixed (double* __refParamPtr2 = &x)
            {
                var __arg2 = __refParamPtr2;
                __Internal.Dscal(n, alpha, __arg2, incx);
            }
        }

        public static void Cscal(int n, global::CUDA.Float2 alpha, global::CUDA.Float2 x, int incx)
        {
            var __arg1 = ReferenceEquals(alpha, null) ? new global::CUDA.Float2.__Internal() : *(global::CUDA.Float2.__Internal*) alpha.__Instance;
            var __arg2 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            __Internal.Cscal(n, __arg1, __arg2, incx);
        }

        public static void Zscal(int n, global::CUDA.Double2 alpha, global::CUDA.Double2 x, int incx)
        {
            var __arg1 = ReferenceEquals(alpha, null) ? new global::CUDA.Double2.__Internal() : *(global::CUDA.Double2.__Internal*) alpha.__Instance;
            var __arg2 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            __Internal.Zscal(n, __arg1, __arg2, incx);
        }

        public static void Csscal(int n, float alpha, global::CUDA.Float2 x, int incx)
        {
            var __arg2 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            __Internal.Csscal(n, alpha, __arg2, incx);
        }

        public static void Zdscal(int n, double alpha, global::CUDA.Double2 x, int incx)
        {
            var __arg2 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            __Internal.Zdscal(n, alpha, __arg2, incx);
        }

        public static void Saxpy(int n, float alpha, ref float x, int incx, ref float y, int incy)
        {
            fixed (float* __refParamPtr2 = &x)
            {
                var __arg2 = __refParamPtr2;
                fixed (float* __refParamPtr4 = &y)
                {
                    var __arg4 = __refParamPtr4;
                    __Internal.Saxpy(n, alpha, __arg2, incx, __arg4, incy);
                }
            }
        }

        public static void Daxpy(int n, double alpha, ref double x, int incx, ref double y, int incy)
        {
            fixed (double* __refParamPtr2 = &x)
            {
                var __arg2 = __refParamPtr2;
                fixed (double* __refParamPtr4 = &y)
                {
                    var __arg4 = __refParamPtr4;
                    __Internal.Daxpy(n, alpha, __arg2, incx, __arg4, incy);
                }
            }
        }

        public static void Caxpy(int n, global::CUDA.Float2 alpha, global::CUDA.Float2 x, int incx, global::CUDA.Float2 y, int incy)
        {
            var __arg1 = ReferenceEquals(alpha, null) ? new global::CUDA.Float2.__Internal() : *(global::CUDA.Float2.__Internal*) alpha.__Instance;
            var __arg2 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __arg4 = ReferenceEquals(y, null) ? global::System.IntPtr.Zero : y.__Instance;
            __Internal.Caxpy(n, __arg1, __arg2, incx, __arg4, incy);
        }

        public static void Zaxpy(int n, global::CUDA.Double2 alpha, global::CUDA.Double2 x, int incx, global::CUDA.Double2 y, int incy)
        {
            var __arg1 = ReferenceEquals(alpha, null) ? new global::CUDA.Double2.__Internal() : *(global::CUDA.Double2.__Internal*) alpha.__Instance;
            var __arg2 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __arg4 = ReferenceEquals(y, null) ? global::System.IntPtr.Zero : y.__Instance;
            __Internal.Zaxpy(n, __arg1, __arg2, incx, __arg4, incy);
        }

        public static void Scopy(int n, ref float x, int incx, ref float y, int incy)
        {
            fixed (float* __refParamPtr1 = &x)
            {
                var __arg1 = __refParamPtr1;
                fixed (float* __refParamPtr3 = &y)
                {
                    var __arg3 = __refParamPtr3;
                    __Internal.Scopy(n, __arg1, incx, __arg3, incy);
                }
            }
        }

        public static void Dcopy(int n, ref double x, int incx, ref double y, int incy)
        {
            fixed (double* __refParamPtr1 = &x)
            {
                var __arg1 = __refParamPtr1;
                fixed (double* __refParamPtr3 = &y)
                {
                    var __arg3 = __refParamPtr3;
                    __Internal.Dcopy(n, __arg1, incx, __arg3, incy);
                }
            }
        }

        public static void Ccopy(int n, global::CUDA.Float2 x, int incx, global::CUDA.Float2 y, int incy)
        {
            var __arg1 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __arg3 = ReferenceEquals(y, null) ? global::System.IntPtr.Zero : y.__Instance;
            __Internal.Ccopy(n, __arg1, incx, __arg3, incy);
        }

        public static void Zcopy(int n, global::CUDA.Double2 x, int incx, global::CUDA.Double2 y, int incy)
        {
            var __arg1 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __arg3 = ReferenceEquals(y, null) ? global::System.IntPtr.Zero : y.__Instance;
            __Internal.Zcopy(n, __arg1, incx, __arg3, incy);
        }

        public static void Sswap(int n, ref float x, int incx, ref float y, int incy)
        {
            fixed (float* __refParamPtr1 = &x)
            {
                var __arg1 = __refParamPtr1;
                fixed (float* __refParamPtr3 = &y)
                {
                    var __arg3 = __refParamPtr3;
                    __Internal.Sswap(n, __arg1, incx, __arg3, incy);
                }
            }
        }

        public static void Dswap(int n, ref double x, int incx, ref double y, int incy)
        {
            fixed (double* __refParamPtr1 = &x)
            {
                var __arg1 = __refParamPtr1;
                fixed (double* __refParamPtr3 = &y)
                {
                    var __arg3 = __refParamPtr3;
                    __Internal.Dswap(n, __arg1, incx, __arg3, incy);
                }
            }
        }

        public static void Cswap(int n, global::CUDA.Float2 x, int incx, global::CUDA.Float2 y, int incy)
        {
            var __arg1 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __arg3 = ReferenceEquals(y, null) ? global::System.IntPtr.Zero : y.__Instance;
            __Internal.Cswap(n, __arg1, incx, __arg3, incy);
        }

        public static void Zswap(int n, global::CUDA.Double2 x, int incx, global::CUDA.Double2 y, int incy)
        {
            var __arg1 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __arg3 = ReferenceEquals(y, null) ? global::System.IntPtr.Zero : y.__Instance;
            __Internal.Zswap(n, __arg1, incx, __arg3, incy);
        }

        public static int Isamax(int n, ref float x, int incx)
        {
            fixed (float* __refParamPtr1 = &x)
            {
                var __arg1 = __refParamPtr1;
                var __ret = __Internal.Isamax(n, __arg1, incx);
                return __ret;
            }
        }

        public static int Idamax(int n, ref double x, int incx)
        {
            fixed (double* __refParamPtr1 = &x)
            {
                var __arg1 = __refParamPtr1;
                var __ret = __Internal.Idamax(n, __arg1, incx);
                return __ret;
            }
        }

        public static int Icamax(int n, global::CUDA.Float2 x, int incx)
        {
            var __arg1 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __ret = __Internal.Icamax(n, __arg1, incx);
            return __ret;
        }

        public static int Izamax(int n, global::CUDA.Double2 x, int incx)
        {
            var __arg1 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __ret = __Internal.Izamax(n, __arg1, incx);
            return __ret;
        }

        public static int Isamin(int n, ref float x, int incx)
        {
            fixed (float* __refParamPtr1 = &x)
            {
                var __arg1 = __refParamPtr1;
                var __ret = __Internal.Isamin(n, __arg1, incx);
                return __ret;
            }
        }

        public static int Idamin(int n, ref double x, int incx)
        {
            fixed (double* __refParamPtr1 = &x)
            {
                var __arg1 = __refParamPtr1;
                var __ret = __Internal.Idamin(n, __arg1, incx);
                return __ret;
            }
        }

        public static int Icamin(int n, global::CUDA.Float2 x, int incx)
        {
            var __arg1 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __ret = __Internal.Icamin(n, __arg1, incx);
            return __ret;
        }

        public static int Izamin(int n, global::CUDA.Double2 x, int incx)
        {
            var __arg1 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __ret = __Internal.Izamin(n, __arg1, incx);
            return __ret;
        }

        public static float Sasum(int n, ref float x, int incx)
        {
            fixed (float* __refParamPtr1 = &x)
            {
                var __arg1 = __refParamPtr1;
                var __ret = __Internal.Sasum(n, __arg1, incx);
                return __ret;
            }
        }

        public static double Dasum(int n, ref double x, int incx)
        {
            fixed (double* __refParamPtr1 = &x)
            {
                var __arg1 = __refParamPtr1;
                var __ret = __Internal.Dasum(n, __arg1, incx);
                return __ret;
            }
        }

        public static float Scasum(int n, global::CUDA.Float2 x, int incx)
        {
            var __arg1 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __ret = __Internal.Scasum(n, __arg1, incx);
            return __ret;
        }

        public static double Dzasum(int n, global::CUDA.Double2 x, int incx)
        {
            var __arg1 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __ret = __Internal.Dzasum(n, __arg1, incx);
            return __ret;
        }

        public static void Srot(int n, ref float x, int incx, ref float y, int incy, float sc, float ss)
        {
            fixed (float* __refParamPtr1 = &x)
            {
                var __arg1 = __refParamPtr1;
                fixed (float* __refParamPtr3 = &y)
                {
                    var __arg3 = __refParamPtr3;
                    __Internal.Srot(n, __arg1, incx, __arg3, incy, sc, ss);
                }
            }
        }

        public static void Drot(int n, ref double x, int incx, ref double y, int incy, double sc, double ss)
        {
            fixed (double* __refParamPtr1 = &x)
            {
                var __arg1 = __refParamPtr1;
                fixed (double* __refParamPtr3 = &y)
                {
                    var __arg3 = __refParamPtr3;
                    __Internal.Drot(n, __arg1, incx, __arg3, incy, sc, ss);
                }
            }
        }

        public static void Crot(int n, global::CUDA.Float2 x, int incx, global::CUDA.Float2 y, int incy, float c, global::CUDA.Float2 s)
        {
            var __arg1 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __arg3 = ReferenceEquals(y, null) ? global::System.IntPtr.Zero : y.__Instance;
            var __arg6 = ReferenceEquals(s, null) ? new global::CUDA.Float2.__Internal() : *(global::CUDA.Float2.__Internal*) s.__Instance;
            __Internal.Crot(n, __arg1, incx, __arg3, incy, c, __arg6);
        }

        public static void Zrot(int n, global::CUDA.Double2 x, int incx, global::CUDA.Double2 y, int incy, double sc, global::CUDA.Double2 cs)
        {
            var __arg1 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __arg3 = ReferenceEquals(y, null) ? global::System.IntPtr.Zero : y.__Instance;
            var __arg6 = ReferenceEquals(cs, null) ? new global::CUDA.Double2.__Internal() : *(global::CUDA.Double2.__Internal*) cs.__Instance;
            __Internal.Zrot(n, __arg1, incx, __arg3, incy, sc, __arg6);
        }

        public static void Csrot(int n, global::CUDA.Float2 x, int incx, global::CUDA.Float2 y, int incy, float c, float s)
        {
            var __arg1 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __arg3 = ReferenceEquals(y, null) ? global::System.IntPtr.Zero : y.__Instance;
            __Internal.Csrot(n, __arg1, incx, __arg3, incy, c, s);
        }

        public static void Zdrot(int n, global::CUDA.Double2 x, int incx, global::CUDA.Double2 y, int incy, double c, double s)
        {
            var __arg1 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __arg3 = ReferenceEquals(y, null) ? global::System.IntPtr.Zero : y.__Instance;
            __Internal.Zdrot(n, __arg1, incx, __arg3, incy, c, s);
        }

        public static void Srotg(ref float sa, ref float sb, ref float sc, ref float ss)
        {
            fixed (float* __refParamPtr0 = &sa)
            {
                var __arg0 = __refParamPtr0;
                fixed (float* __refParamPtr1 = &sb)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (float* __refParamPtr2 = &sc)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (float* __refParamPtr3 = &ss)
                        {
                            var __arg3 = __refParamPtr3;
                            __Internal.Srotg(__arg0, __arg1, __arg2, __arg3);
                        }
                    }
                }
            }
        }

        public static void Drotg(ref double sa, ref double sb, ref double sc, ref double ss)
        {
            fixed (double* __refParamPtr0 = &sa)
            {
                var __arg0 = __refParamPtr0;
                fixed (double* __refParamPtr1 = &sb)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (double* __refParamPtr2 = &sc)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (double* __refParamPtr3 = &ss)
                        {
                            var __arg3 = __refParamPtr3;
                            __Internal.Drotg(__arg0, __arg1, __arg2, __arg3);
                        }
                    }
                }
            }
        }

        public static void Crotg(global::CUDA.Float2 ca, global::CUDA.Float2 cb, ref float sc, global::CUDA.Float2 cs)
        {
            var __arg0 = ReferenceEquals(ca, null) ? global::System.IntPtr.Zero : ca.__Instance;
            var __arg1 = ReferenceEquals(cb, null) ? new global::CUDA.Float2.__Internal() : *(global::CUDA.Float2.__Internal*) cb.__Instance;
            fixed (float* __refParamPtr2 = &sc)
            {
                var __arg2 = __refParamPtr2;
                var __arg3 = ReferenceEquals(cs, null) ? global::System.IntPtr.Zero : cs.__Instance;
                __Internal.Crotg(__arg0, __arg1, __arg2, __arg3);
            }
        }

        public static void Zrotg(global::CUDA.Double2 ca, global::CUDA.Double2 cb, ref double sc, global::CUDA.Double2 cs)
        {
            var __arg0 = ReferenceEquals(ca, null) ? global::System.IntPtr.Zero : ca.__Instance;
            var __arg1 = ReferenceEquals(cb, null) ? new global::CUDA.Double2.__Internal() : *(global::CUDA.Double2.__Internal*) cb.__Instance;
            fixed (double* __refParamPtr2 = &sc)
            {
                var __arg2 = __refParamPtr2;
                var __arg3 = ReferenceEquals(cs, null) ? global::System.IntPtr.Zero : cs.__Instance;
                __Internal.Zrotg(__arg0, __arg1, __arg2, __arg3);
            }
        }

        public static void Srotm(int n, ref float x, int incx, ref float y, int incy, ref float sparam)
        {
            fixed (float* __refParamPtr1 = &x)
            {
                var __arg1 = __refParamPtr1;
                fixed (float* __refParamPtr3 = &y)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (float* __refParamPtr5 = &sparam)
                    {
                        var __arg5 = __refParamPtr5;
                        __Internal.Srotm(n, __arg1, incx, __arg3, incy, __arg5);
                    }
                }
            }
        }

        public static void Drotm(int n, ref double x, int incx, ref double y, int incy, ref double sparam)
        {
            fixed (double* __refParamPtr1 = &x)
            {
                var __arg1 = __refParamPtr1;
                fixed (double* __refParamPtr3 = &y)
                {
                    var __arg3 = __refParamPtr3;
                    fixed (double* __refParamPtr5 = &sparam)
                    {
                        var __arg5 = __refParamPtr5;
                        __Internal.Drotm(n, __arg1, incx, __arg3, incy, __arg5);
                    }
                }
            }
        }

        public static void Srotmg(ref float sd1, ref float sd2, ref float sx1, ref float sy1, ref float sparam)
        {
            fixed (float* __refParamPtr0 = &sd1)
            {
                var __arg0 = __refParamPtr0;
                fixed (float* __refParamPtr1 = &sd2)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (float* __refParamPtr2 = &sx1)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (float* __refParamPtr3 = &sy1)
                        {
                            var __arg3 = __refParamPtr3;
                            fixed (float* __refParamPtr4 = &sparam)
                            {
                                var __arg4 = __refParamPtr4;
                                __Internal.Srotmg(__arg0, __arg1, __arg2, __arg3, __arg4);
                            }
                        }
                    }
                }
            }
        }

        public static void Drotmg(ref double sd1, ref double sd2, ref double sx1, ref double sy1, ref double sparam)
        {
            fixed (double* __refParamPtr0 = &sd1)
            {
                var __arg0 = __refParamPtr0;
                fixed (double* __refParamPtr1 = &sd2)
                {
                    var __arg1 = __refParamPtr1;
                    fixed (double* __refParamPtr2 = &sx1)
                    {
                        var __arg2 = __refParamPtr2;
                        fixed (double* __refParamPtr3 = &sy1)
                        {
                            var __arg3 = __refParamPtr3;
                            fixed (double* __refParamPtr4 = &sparam)
                            {
                                var __arg4 = __refParamPtr4;
                                __Internal.Drotmg(__arg0, __arg1, __arg2, __arg3, __arg4);
                            }
                        }
                    }
                }
            }
        }

        public static void Sgemv(sbyte trans, int m, int n, float alpha, ref float A, int lda, ref float x, int incx, float beta, ref float y, int incy)
        {
            fixed (float* __refParamPtr4 = &A)
            {
                var __arg4 = __refParamPtr4;
                fixed (float* __refParamPtr6 = &x)
                {
                    var __arg6 = __refParamPtr6;
                    fixed (float* __refParamPtr9 = &y)
                    {
                        var __arg9 = __refParamPtr9;
                        __Internal.Sgemv(trans, m, n, alpha, __arg4, lda, __arg6, incx, beta, __arg9, incy);
                    }
                }
            }
        }

        public static void Dgemv(sbyte trans, int m, int n, double alpha, ref double A, int lda, ref double x, int incx, double beta, ref double y, int incy)
        {
            fixed (double* __refParamPtr4 = &A)
            {
                var __arg4 = __refParamPtr4;
                fixed (double* __refParamPtr6 = &x)
                {
                    var __arg6 = __refParamPtr6;
                    fixed (double* __refParamPtr9 = &y)
                    {
                        var __arg9 = __refParamPtr9;
                        __Internal.Dgemv(trans, m, n, alpha, __arg4, lda, __arg6, incx, beta, __arg9, incy);
                    }
                }
            }
        }

        public static void Cgemv(sbyte trans, int m, int n, global::CUDA.Float2 alpha, global::CUDA.Float2 A, int lda, global::CUDA.Float2 x, int incx, global::CUDA.Float2 beta, global::CUDA.Float2 y, int incy)
        {
            var __arg3 = ReferenceEquals(alpha, null) ? new global::CUDA.Float2.__Internal() : *(global::CUDA.Float2.__Internal*) alpha.__Instance;
            var __arg4 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            var __arg6 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __arg8 = ReferenceEquals(beta, null) ? new global::CUDA.Float2.__Internal() : *(global::CUDA.Float2.__Internal*) beta.__Instance;
            var __arg9 = ReferenceEquals(y, null) ? global::System.IntPtr.Zero : y.__Instance;
            __Internal.Cgemv(trans, m, n, __arg3, __arg4, lda, __arg6, incx, __arg8, __arg9, incy);
        }

        public static void Zgemv(sbyte trans, int m, int n, global::CUDA.Double2 alpha, global::CUDA.Double2 A, int lda, global::CUDA.Double2 x, int incx, global::CUDA.Double2 beta, global::CUDA.Double2 y, int incy)
        {
            var __arg3 = ReferenceEquals(alpha, null) ? new global::CUDA.Double2.__Internal() : *(global::CUDA.Double2.__Internal*) alpha.__Instance;
            var __arg4 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            var __arg6 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __arg8 = ReferenceEquals(beta, null) ? new global::CUDA.Double2.__Internal() : *(global::CUDA.Double2.__Internal*) beta.__Instance;
            var __arg9 = ReferenceEquals(y, null) ? global::System.IntPtr.Zero : y.__Instance;
            __Internal.Zgemv(trans, m, n, __arg3, __arg4, lda, __arg6, incx, __arg8, __arg9, incy);
        }

        public static void Sgbmv(sbyte trans, int m, int n, int kl, int ku, float alpha, ref float A, int lda, ref float x, int incx, float beta, ref float y, int incy)
        {
            fixed (float* __refParamPtr6 = &A)
            {
                var __arg6 = __refParamPtr6;
                fixed (float* __refParamPtr8 = &x)
                {
                    var __arg8 = __refParamPtr8;
                    fixed (float* __refParamPtr11 = &y)
                    {
                        var __arg11 = __refParamPtr11;
                        __Internal.Sgbmv(trans, m, n, kl, ku, alpha, __arg6, lda, __arg8, incx, beta, __arg11, incy);
                    }
                }
            }
        }

        public static void Dgbmv(sbyte trans, int m, int n, int kl, int ku, double alpha, ref double A, int lda, ref double x, int incx, double beta, ref double y, int incy)
        {
            fixed (double* __refParamPtr6 = &A)
            {
                var __arg6 = __refParamPtr6;
                fixed (double* __refParamPtr8 = &x)
                {
                    var __arg8 = __refParamPtr8;
                    fixed (double* __refParamPtr11 = &y)
                    {
                        var __arg11 = __refParamPtr11;
                        __Internal.Dgbmv(trans, m, n, kl, ku, alpha, __arg6, lda, __arg8, incx, beta, __arg11, incy);
                    }
                }
            }
        }

        public static void Cgbmv(sbyte trans, int m, int n, int kl, int ku, global::CUDA.Float2 alpha, global::CUDA.Float2 A, int lda, global::CUDA.Float2 x, int incx, global::CUDA.Float2 beta, global::CUDA.Float2 y, int incy)
        {
            var __arg5 = ReferenceEquals(alpha, null) ? new global::CUDA.Float2.__Internal() : *(global::CUDA.Float2.__Internal*) alpha.__Instance;
            var __arg6 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            var __arg8 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __arg10 = ReferenceEquals(beta, null) ? new global::CUDA.Float2.__Internal() : *(global::CUDA.Float2.__Internal*) beta.__Instance;
            var __arg11 = ReferenceEquals(y, null) ? global::System.IntPtr.Zero : y.__Instance;
            __Internal.Cgbmv(trans, m, n, kl, ku, __arg5, __arg6, lda, __arg8, incx, __arg10, __arg11, incy);
        }

        public static void Zgbmv(sbyte trans, int m, int n, int kl, int ku, global::CUDA.Double2 alpha, global::CUDA.Double2 A, int lda, global::CUDA.Double2 x, int incx, global::CUDA.Double2 beta, global::CUDA.Double2 y, int incy)
        {
            var __arg5 = ReferenceEquals(alpha, null) ? new global::CUDA.Double2.__Internal() : *(global::CUDA.Double2.__Internal*) alpha.__Instance;
            var __arg6 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            var __arg8 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __arg10 = ReferenceEquals(beta, null) ? new global::CUDA.Double2.__Internal() : *(global::CUDA.Double2.__Internal*) beta.__Instance;
            var __arg11 = ReferenceEquals(y, null) ? global::System.IntPtr.Zero : y.__Instance;
            __Internal.Zgbmv(trans, m, n, kl, ku, __arg5, __arg6, lda, __arg8, incx, __arg10, __arg11, incy);
        }

        public static void Strmv(sbyte uplo, sbyte trans, sbyte diag, int n, ref float A, int lda, ref float x, int incx)
        {
            fixed (float* __refParamPtr4 = &A)
            {
                var __arg4 = __refParamPtr4;
                fixed (float* __refParamPtr6 = &x)
                {
                    var __arg6 = __refParamPtr6;
                    __Internal.Strmv(uplo, trans, diag, n, __arg4, lda, __arg6, incx);
                }
            }
        }

        public static void Dtrmv(sbyte uplo, sbyte trans, sbyte diag, int n, ref double A, int lda, ref double x, int incx)
        {
            fixed (double* __refParamPtr4 = &A)
            {
                var __arg4 = __refParamPtr4;
                fixed (double* __refParamPtr6 = &x)
                {
                    var __arg6 = __refParamPtr6;
                    __Internal.Dtrmv(uplo, trans, diag, n, __arg4, lda, __arg6, incx);
                }
            }
        }

        public static void Ctrmv(sbyte uplo, sbyte trans, sbyte diag, int n, global::CUDA.Float2 A, int lda, global::CUDA.Float2 x, int incx)
        {
            var __arg4 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            var __arg6 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            __Internal.Ctrmv(uplo, trans, diag, n, __arg4, lda, __arg6, incx);
        }

        public static void Ztrmv(sbyte uplo, sbyte trans, sbyte diag, int n, global::CUDA.Double2 A, int lda, global::CUDA.Double2 x, int incx)
        {
            var __arg4 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            var __arg6 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            __Internal.Ztrmv(uplo, trans, diag, n, __arg4, lda, __arg6, incx);
        }

        public static void Stbmv(sbyte uplo, sbyte trans, sbyte diag, int n, int k, ref float A, int lda, ref float x, int incx)
        {
            fixed (float* __refParamPtr5 = &A)
            {
                var __arg5 = __refParamPtr5;
                fixed (float* __refParamPtr7 = &x)
                {
                    var __arg7 = __refParamPtr7;
                    __Internal.Stbmv(uplo, trans, diag, n, k, __arg5, lda, __arg7, incx);
                }
            }
        }

        public static void Dtbmv(sbyte uplo, sbyte trans, sbyte diag, int n, int k, ref double A, int lda, ref double x, int incx)
        {
            fixed (double* __refParamPtr5 = &A)
            {
                var __arg5 = __refParamPtr5;
                fixed (double* __refParamPtr7 = &x)
                {
                    var __arg7 = __refParamPtr7;
                    __Internal.Dtbmv(uplo, trans, diag, n, k, __arg5, lda, __arg7, incx);
                }
            }
        }

        public static void Ctbmv(sbyte uplo, sbyte trans, sbyte diag, int n, int k, global::CUDA.Float2 A, int lda, global::CUDA.Float2 x, int incx)
        {
            var __arg5 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            var __arg7 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            __Internal.Ctbmv(uplo, trans, diag, n, k, __arg5, lda, __arg7, incx);
        }

        public static void Ztbmv(sbyte uplo, sbyte trans, sbyte diag, int n, int k, global::CUDA.Double2 A, int lda, global::CUDA.Double2 x, int incx)
        {
            var __arg5 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            var __arg7 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            __Internal.Ztbmv(uplo, trans, diag, n, k, __arg5, lda, __arg7, incx);
        }

        public static void Stpmv(sbyte uplo, sbyte trans, sbyte diag, int n, ref float AP, ref float x, int incx)
        {
            fixed (float* __refParamPtr4 = &AP)
            {
                var __arg4 = __refParamPtr4;
                fixed (float* __refParamPtr5 = &x)
                {
                    var __arg5 = __refParamPtr5;
                    __Internal.Stpmv(uplo, trans, diag, n, __arg4, __arg5, incx);
                }
            }
        }

        public static void Dtpmv(sbyte uplo, sbyte trans, sbyte diag, int n, ref double AP, ref double x, int incx)
        {
            fixed (double* __refParamPtr4 = &AP)
            {
                var __arg4 = __refParamPtr4;
                fixed (double* __refParamPtr5 = &x)
                {
                    var __arg5 = __refParamPtr5;
                    __Internal.Dtpmv(uplo, trans, diag, n, __arg4, __arg5, incx);
                }
            }
        }

        public static void Ctpmv(sbyte uplo, sbyte trans, sbyte diag, int n, global::CUDA.Float2 AP, global::CUDA.Float2 x, int incx)
        {
            var __arg4 = ReferenceEquals(AP, null) ? global::System.IntPtr.Zero : AP.__Instance;
            var __arg5 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            __Internal.Ctpmv(uplo, trans, diag, n, __arg4, __arg5, incx);
        }

        public static void Ztpmv(sbyte uplo, sbyte trans, sbyte diag, int n, global::CUDA.Double2 AP, global::CUDA.Double2 x, int incx)
        {
            var __arg4 = ReferenceEquals(AP, null) ? global::System.IntPtr.Zero : AP.__Instance;
            var __arg5 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            __Internal.Ztpmv(uplo, trans, diag, n, __arg4, __arg5, incx);
        }

        public static void Strsv(sbyte uplo, sbyte trans, sbyte diag, int n, ref float A, int lda, ref float x, int incx)
        {
            fixed (float* __refParamPtr4 = &A)
            {
                var __arg4 = __refParamPtr4;
                fixed (float* __refParamPtr6 = &x)
                {
                    var __arg6 = __refParamPtr6;
                    __Internal.Strsv(uplo, trans, diag, n, __arg4, lda, __arg6, incx);
                }
            }
        }

        public static void Dtrsv(sbyte uplo, sbyte trans, sbyte diag, int n, ref double A, int lda, ref double x, int incx)
        {
            fixed (double* __refParamPtr4 = &A)
            {
                var __arg4 = __refParamPtr4;
                fixed (double* __refParamPtr6 = &x)
                {
                    var __arg6 = __refParamPtr6;
                    __Internal.Dtrsv(uplo, trans, diag, n, __arg4, lda, __arg6, incx);
                }
            }
        }

        public static void Ctrsv(sbyte uplo, sbyte trans, sbyte diag, int n, global::CUDA.Float2 A, int lda, global::CUDA.Float2 x, int incx)
        {
            var __arg4 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            var __arg6 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            __Internal.Ctrsv(uplo, trans, diag, n, __arg4, lda, __arg6, incx);
        }

        public static void Ztrsv(sbyte uplo, sbyte trans, sbyte diag, int n, global::CUDA.Double2 A, int lda, global::CUDA.Double2 x, int incx)
        {
            var __arg4 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            var __arg6 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            __Internal.Ztrsv(uplo, trans, diag, n, __arg4, lda, __arg6, incx);
        }

        public static void Stpsv(sbyte uplo, sbyte trans, sbyte diag, int n, ref float AP, ref float x, int incx)
        {
            fixed (float* __refParamPtr4 = &AP)
            {
                var __arg4 = __refParamPtr4;
                fixed (float* __refParamPtr5 = &x)
                {
                    var __arg5 = __refParamPtr5;
                    __Internal.Stpsv(uplo, trans, diag, n, __arg4, __arg5, incx);
                }
            }
        }

        public static void Dtpsv(sbyte uplo, sbyte trans, sbyte diag, int n, ref double AP, ref double x, int incx)
        {
            fixed (double* __refParamPtr4 = &AP)
            {
                var __arg4 = __refParamPtr4;
                fixed (double* __refParamPtr5 = &x)
                {
                    var __arg5 = __refParamPtr5;
                    __Internal.Dtpsv(uplo, trans, diag, n, __arg4, __arg5, incx);
                }
            }
        }

        public static void Ctpsv(sbyte uplo, sbyte trans, sbyte diag, int n, global::CUDA.Float2 AP, global::CUDA.Float2 x, int incx)
        {
            var __arg4 = ReferenceEquals(AP, null) ? global::System.IntPtr.Zero : AP.__Instance;
            var __arg5 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            __Internal.Ctpsv(uplo, trans, diag, n, __arg4, __arg5, incx);
        }

        public static void Ztpsv(sbyte uplo, sbyte trans, sbyte diag, int n, global::CUDA.Double2 AP, global::CUDA.Double2 x, int incx)
        {
            var __arg4 = ReferenceEquals(AP, null) ? global::System.IntPtr.Zero : AP.__Instance;
            var __arg5 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            __Internal.Ztpsv(uplo, trans, diag, n, __arg4, __arg5, incx);
        }

        public static void Stbsv(sbyte uplo, sbyte trans, sbyte diag, int n, int k, ref float A, int lda, ref float x, int incx)
        {
            fixed (float* __refParamPtr5 = &A)
            {
                var __arg5 = __refParamPtr5;
                fixed (float* __refParamPtr7 = &x)
                {
                    var __arg7 = __refParamPtr7;
                    __Internal.Stbsv(uplo, trans, diag, n, k, __arg5, lda, __arg7, incx);
                }
            }
        }

        public static void Dtbsv(sbyte uplo, sbyte trans, sbyte diag, int n, int k, ref double A, int lda, ref double x, int incx)
        {
            fixed (double* __refParamPtr5 = &A)
            {
                var __arg5 = __refParamPtr5;
                fixed (double* __refParamPtr7 = &x)
                {
                    var __arg7 = __refParamPtr7;
                    __Internal.Dtbsv(uplo, trans, diag, n, k, __arg5, lda, __arg7, incx);
                }
            }
        }

        public static void Ctbsv(sbyte uplo, sbyte trans, sbyte diag, int n, int k, global::CUDA.Float2 A, int lda, global::CUDA.Float2 x, int incx)
        {
            var __arg5 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            var __arg7 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            __Internal.Ctbsv(uplo, trans, diag, n, k, __arg5, lda, __arg7, incx);
        }

        public static void Ztbsv(sbyte uplo, sbyte trans, sbyte diag, int n, int k, global::CUDA.Double2 A, int lda, global::CUDA.Double2 x, int incx)
        {
            var __arg5 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            var __arg7 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            __Internal.Ztbsv(uplo, trans, diag, n, k, __arg5, lda, __arg7, incx);
        }

        public static void Ssymv(sbyte uplo, int n, float alpha, ref float A, int lda, ref float x, int incx, float beta, ref float y, int incy)
        {
            fixed (float* __refParamPtr3 = &A)
            {
                var __arg3 = __refParamPtr3;
                fixed (float* __refParamPtr5 = &x)
                {
                    var __arg5 = __refParamPtr5;
                    fixed (float* __refParamPtr8 = &y)
                    {
                        var __arg8 = __refParamPtr8;
                        __Internal.Ssymv(uplo, n, alpha, __arg3, lda, __arg5, incx, beta, __arg8, incy);
                    }
                }
            }
        }

        public static void Dsymv(sbyte uplo, int n, double alpha, ref double A, int lda, ref double x, int incx, double beta, ref double y, int incy)
        {
            fixed (double* __refParamPtr3 = &A)
            {
                var __arg3 = __refParamPtr3;
                fixed (double* __refParamPtr5 = &x)
                {
                    var __arg5 = __refParamPtr5;
                    fixed (double* __refParamPtr8 = &y)
                    {
                        var __arg8 = __refParamPtr8;
                        __Internal.Dsymv(uplo, n, alpha, __arg3, lda, __arg5, incx, beta, __arg8, incy);
                    }
                }
            }
        }

        public static void Chemv(sbyte uplo, int n, global::CUDA.Float2 alpha, global::CUDA.Float2 A, int lda, global::CUDA.Float2 x, int incx, global::CUDA.Float2 beta, global::CUDA.Float2 y, int incy)
        {
            var __arg2 = ReferenceEquals(alpha, null) ? new global::CUDA.Float2.__Internal() : *(global::CUDA.Float2.__Internal*) alpha.__Instance;
            var __arg3 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            var __arg5 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __arg7 = ReferenceEquals(beta, null) ? new global::CUDA.Float2.__Internal() : *(global::CUDA.Float2.__Internal*) beta.__Instance;
            var __arg8 = ReferenceEquals(y, null) ? global::System.IntPtr.Zero : y.__Instance;
            __Internal.Chemv(uplo, n, __arg2, __arg3, lda, __arg5, incx, __arg7, __arg8, incy);
        }

        public static void Zhemv(sbyte uplo, int n, global::CUDA.Double2 alpha, global::CUDA.Double2 A, int lda, global::CUDA.Double2 x, int incx, global::CUDA.Double2 beta, global::CUDA.Double2 y, int incy)
        {
            var __arg2 = ReferenceEquals(alpha, null) ? new global::CUDA.Double2.__Internal() : *(global::CUDA.Double2.__Internal*) alpha.__Instance;
            var __arg3 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            var __arg5 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __arg7 = ReferenceEquals(beta, null) ? new global::CUDA.Double2.__Internal() : *(global::CUDA.Double2.__Internal*) beta.__Instance;
            var __arg8 = ReferenceEquals(y, null) ? global::System.IntPtr.Zero : y.__Instance;
            __Internal.Zhemv(uplo, n, __arg2, __arg3, lda, __arg5, incx, __arg7, __arg8, incy);
        }

        public static void Ssbmv(sbyte uplo, int n, int k, float alpha, ref float A, int lda, ref float x, int incx, float beta, ref float y, int incy)
        {
            fixed (float* __refParamPtr4 = &A)
            {
                var __arg4 = __refParamPtr4;
                fixed (float* __refParamPtr6 = &x)
                {
                    var __arg6 = __refParamPtr6;
                    fixed (float* __refParamPtr9 = &y)
                    {
                        var __arg9 = __refParamPtr9;
                        __Internal.Ssbmv(uplo, n, k, alpha, __arg4, lda, __arg6, incx, beta, __arg9, incy);
                    }
                }
            }
        }

        public static void Dsbmv(sbyte uplo, int n, int k, double alpha, ref double A, int lda, ref double x, int incx, double beta, ref double y, int incy)
        {
            fixed (double* __refParamPtr4 = &A)
            {
                var __arg4 = __refParamPtr4;
                fixed (double* __refParamPtr6 = &x)
                {
                    var __arg6 = __refParamPtr6;
                    fixed (double* __refParamPtr9 = &y)
                    {
                        var __arg9 = __refParamPtr9;
                        __Internal.Dsbmv(uplo, n, k, alpha, __arg4, lda, __arg6, incx, beta, __arg9, incy);
                    }
                }
            }
        }

        public static void Chbmv(sbyte uplo, int n, int k, global::CUDA.Float2 alpha, global::CUDA.Float2 A, int lda, global::CUDA.Float2 x, int incx, global::CUDA.Float2 beta, global::CUDA.Float2 y, int incy)
        {
            var __arg3 = ReferenceEquals(alpha, null) ? new global::CUDA.Float2.__Internal() : *(global::CUDA.Float2.__Internal*) alpha.__Instance;
            var __arg4 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            var __arg6 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __arg8 = ReferenceEquals(beta, null) ? new global::CUDA.Float2.__Internal() : *(global::CUDA.Float2.__Internal*) beta.__Instance;
            var __arg9 = ReferenceEquals(y, null) ? global::System.IntPtr.Zero : y.__Instance;
            __Internal.Chbmv(uplo, n, k, __arg3, __arg4, lda, __arg6, incx, __arg8, __arg9, incy);
        }

        public static void Zhbmv(sbyte uplo, int n, int k, global::CUDA.Double2 alpha, global::CUDA.Double2 A, int lda, global::CUDA.Double2 x, int incx, global::CUDA.Double2 beta, global::CUDA.Double2 y, int incy)
        {
            var __arg3 = ReferenceEquals(alpha, null) ? new global::CUDA.Double2.__Internal() : *(global::CUDA.Double2.__Internal*) alpha.__Instance;
            var __arg4 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            var __arg6 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __arg8 = ReferenceEquals(beta, null) ? new global::CUDA.Double2.__Internal() : *(global::CUDA.Double2.__Internal*) beta.__Instance;
            var __arg9 = ReferenceEquals(y, null) ? global::System.IntPtr.Zero : y.__Instance;
            __Internal.Zhbmv(uplo, n, k, __arg3, __arg4, lda, __arg6, incx, __arg8, __arg9, incy);
        }

        public static void Sspmv(sbyte uplo, int n, float alpha, ref float AP, ref float x, int incx, float beta, ref float y, int incy)
        {
            fixed (float* __refParamPtr3 = &AP)
            {
                var __arg3 = __refParamPtr3;
                fixed (float* __refParamPtr4 = &x)
                {
                    var __arg4 = __refParamPtr4;
                    fixed (float* __refParamPtr7 = &y)
                    {
                        var __arg7 = __refParamPtr7;
                        __Internal.Sspmv(uplo, n, alpha, __arg3, __arg4, incx, beta, __arg7, incy);
                    }
                }
            }
        }

        public static void Dspmv(sbyte uplo, int n, double alpha, ref double AP, ref double x, int incx, double beta, ref double y, int incy)
        {
            fixed (double* __refParamPtr3 = &AP)
            {
                var __arg3 = __refParamPtr3;
                fixed (double* __refParamPtr4 = &x)
                {
                    var __arg4 = __refParamPtr4;
                    fixed (double* __refParamPtr7 = &y)
                    {
                        var __arg7 = __refParamPtr7;
                        __Internal.Dspmv(uplo, n, alpha, __arg3, __arg4, incx, beta, __arg7, incy);
                    }
                }
            }
        }

        public static void Chpmv(sbyte uplo, int n, global::CUDA.Float2 alpha, global::CUDA.Float2 AP, global::CUDA.Float2 x, int incx, global::CUDA.Float2 beta, global::CUDA.Float2 y, int incy)
        {
            var __arg2 = ReferenceEquals(alpha, null) ? new global::CUDA.Float2.__Internal() : *(global::CUDA.Float2.__Internal*) alpha.__Instance;
            var __arg3 = ReferenceEquals(AP, null) ? global::System.IntPtr.Zero : AP.__Instance;
            var __arg4 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __arg6 = ReferenceEquals(beta, null) ? new global::CUDA.Float2.__Internal() : *(global::CUDA.Float2.__Internal*) beta.__Instance;
            var __arg7 = ReferenceEquals(y, null) ? global::System.IntPtr.Zero : y.__Instance;
            __Internal.Chpmv(uplo, n, __arg2, __arg3, __arg4, incx, __arg6, __arg7, incy);
        }

        public static void Zhpmv(sbyte uplo, int n, global::CUDA.Double2 alpha, global::CUDA.Double2 AP, global::CUDA.Double2 x, int incx, global::CUDA.Double2 beta, global::CUDA.Double2 y, int incy)
        {
            var __arg2 = ReferenceEquals(alpha, null) ? new global::CUDA.Double2.__Internal() : *(global::CUDA.Double2.__Internal*) alpha.__Instance;
            var __arg3 = ReferenceEquals(AP, null) ? global::System.IntPtr.Zero : AP.__Instance;
            var __arg4 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __arg6 = ReferenceEquals(beta, null) ? new global::CUDA.Double2.__Internal() : *(global::CUDA.Double2.__Internal*) beta.__Instance;
            var __arg7 = ReferenceEquals(y, null) ? global::System.IntPtr.Zero : y.__Instance;
            __Internal.Zhpmv(uplo, n, __arg2, __arg3, __arg4, incx, __arg6, __arg7, incy);
        }

        public static void Sger(int m, int n, float alpha, ref float x, int incx, ref float y, int incy, ref float A, int lda)
        {
            fixed (float* __refParamPtr3 = &x)
            {
                var __arg3 = __refParamPtr3;
                fixed (float* __refParamPtr5 = &y)
                {
                    var __arg5 = __refParamPtr5;
                    fixed (float* __refParamPtr7 = &A)
                    {
                        var __arg7 = __refParamPtr7;
                        __Internal.Sger(m, n, alpha, __arg3, incx, __arg5, incy, __arg7, lda);
                    }
                }
            }
        }

        public static void Dger(int m, int n, double alpha, ref double x, int incx, ref double y, int incy, ref double A, int lda)
        {
            fixed (double* __refParamPtr3 = &x)
            {
                var __arg3 = __refParamPtr3;
                fixed (double* __refParamPtr5 = &y)
                {
                    var __arg5 = __refParamPtr5;
                    fixed (double* __refParamPtr7 = &A)
                    {
                        var __arg7 = __refParamPtr7;
                        __Internal.Dger(m, n, alpha, __arg3, incx, __arg5, incy, __arg7, lda);
                    }
                }
            }
        }

        public static void Cgeru(int m, int n, global::CUDA.Float2 alpha, global::CUDA.Float2 x, int incx, global::CUDA.Float2 y, int incy, global::CUDA.Float2 A, int lda)
        {
            var __arg2 = ReferenceEquals(alpha, null) ? new global::CUDA.Float2.__Internal() : *(global::CUDA.Float2.__Internal*) alpha.__Instance;
            var __arg3 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __arg5 = ReferenceEquals(y, null) ? global::System.IntPtr.Zero : y.__Instance;
            var __arg7 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            __Internal.Cgeru(m, n, __arg2, __arg3, incx, __arg5, incy, __arg7, lda);
        }

        public static void Cgerc(int m, int n, global::CUDA.Float2 alpha, global::CUDA.Float2 x, int incx, global::CUDA.Float2 y, int incy, global::CUDA.Float2 A, int lda)
        {
            var __arg2 = ReferenceEquals(alpha, null) ? new global::CUDA.Float2.__Internal() : *(global::CUDA.Float2.__Internal*) alpha.__Instance;
            var __arg3 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __arg5 = ReferenceEquals(y, null) ? global::System.IntPtr.Zero : y.__Instance;
            var __arg7 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            __Internal.Cgerc(m, n, __arg2, __arg3, incx, __arg5, incy, __arg7, lda);
        }

        public static void Zgeru(int m, int n, global::CUDA.Double2 alpha, global::CUDA.Double2 x, int incx, global::CUDA.Double2 y, int incy, global::CUDA.Double2 A, int lda)
        {
            var __arg2 = ReferenceEquals(alpha, null) ? new global::CUDA.Double2.__Internal() : *(global::CUDA.Double2.__Internal*) alpha.__Instance;
            var __arg3 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __arg5 = ReferenceEquals(y, null) ? global::System.IntPtr.Zero : y.__Instance;
            var __arg7 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            __Internal.Zgeru(m, n, __arg2, __arg3, incx, __arg5, incy, __arg7, lda);
        }

        public static void Zgerc(int m, int n, global::CUDA.Double2 alpha, global::CUDA.Double2 x, int incx, global::CUDA.Double2 y, int incy, global::CUDA.Double2 A, int lda)
        {
            var __arg2 = ReferenceEquals(alpha, null) ? new global::CUDA.Double2.__Internal() : *(global::CUDA.Double2.__Internal*) alpha.__Instance;
            var __arg3 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __arg5 = ReferenceEquals(y, null) ? global::System.IntPtr.Zero : y.__Instance;
            var __arg7 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            __Internal.Zgerc(m, n, __arg2, __arg3, incx, __arg5, incy, __arg7, lda);
        }

        public static void Ssyr(sbyte uplo, int n, float alpha, ref float x, int incx, ref float A, int lda)
        {
            fixed (float* __refParamPtr3 = &x)
            {
                var __arg3 = __refParamPtr3;
                fixed (float* __refParamPtr5 = &A)
                {
                    var __arg5 = __refParamPtr5;
                    __Internal.Ssyr(uplo, n, alpha, __arg3, incx, __arg5, lda);
                }
            }
        }

        public static void Dsyr(sbyte uplo, int n, double alpha, ref double x, int incx, ref double A, int lda)
        {
            fixed (double* __refParamPtr3 = &x)
            {
                var __arg3 = __refParamPtr3;
                fixed (double* __refParamPtr5 = &A)
                {
                    var __arg5 = __refParamPtr5;
                    __Internal.Dsyr(uplo, n, alpha, __arg3, incx, __arg5, lda);
                }
            }
        }

        public static void Cher(sbyte uplo, int n, float alpha, global::CUDA.Float2 x, int incx, global::CUDA.Float2 A, int lda)
        {
            var __arg3 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __arg5 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            __Internal.Cher(uplo, n, alpha, __arg3, incx, __arg5, lda);
        }

        public static void Zher(sbyte uplo, int n, double alpha, global::CUDA.Double2 x, int incx, global::CUDA.Double2 A, int lda)
        {
            var __arg3 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __arg5 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            __Internal.Zher(uplo, n, alpha, __arg3, incx, __arg5, lda);
        }

        public static void Sspr(sbyte uplo, int n, float alpha, ref float x, int incx, ref float AP)
        {
            fixed (float* __refParamPtr3 = &x)
            {
                var __arg3 = __refParamPtr3;
                fixed (float* __refParamPtr5 = &AP)
                {
                    var __arg5 = __refParamPtr5;
                    __Internal.Sspr(uplo, n, alpha, __arg3, incx, __arg5);
                }
            }
        }

        public static void Dspr(sbyte uplo, int n, double alpha, ref double x, int incx, ref double AP)
        {
            fixed (double* __refParamPtr3 = &x)
            {
                var __arg3 = __refParamPtr3;
                fixed (double* __refParamPtr5 = &AP)
                {
                    var __arg5 = __refParamPtr5;
                    __Internal.Dspr(uplo, n, alpha, __arg3, incx, __arg5);
                }
            }
        }

        public static void Chpr(sbyte uplo, int n, float alpha, global::CUDA.Float2 x, int incx, global::CUDA.Float2 AP)
        {
            var __arg3 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __arg5 = ReferenceEquals(AP, null) ? global::System.IntPtr.Zero : AP.__Instance;
            __Internal.Chpr(uplo, n, alpha, __arg3, incx, __arg5);
        }

        public static void Zhpr(sbyte uplo, int n, double alpha, global::CUDA.Double2 x, int incx, global::CUDA.Double2 AP)
        {
            var __arg3 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __arg5 = ReferenceEquals(AP, null) ? global::System.IntPtr.Zero : AP.__Instance;
            __Internal.Zhpr(uplo, n, alpha, __arg3, incx, __arg5);
        }

        public static void Ssyr2(sbyte uplo, int n, float alpha, ref float x, int incx, ref float y, int incy, ref float A, int lda)
        {
            fixed (float* __refParamPtr3 = &x)
            {
                var __arg3 = __refParamPtr3;
                fixed (float* __refParamPtr5 = &y)
                {
                    var __arg5 = __refParamPtr5;
                    fixed (float* __refParamPtr7 = &A)
                    {
                        var __arg7 = __refParamPtr7;
                        __Internal.Ssyr2(uplo, n, alpha, __arg3, incx, __arg5, incy, __arg7, lda);
                    }
                }
            }
        }

        public static void Dsyr2(sbyte uplo, int n, double alpha, ref double x, int incx, ref double y, int incy, ref double A, int lda)
        {
            fixed (double* __refParamPtr3 = &x)
            {
                var __arg3 = __refParamPtr3;
                fixed (double* __refParamPtr5 = &y)
                {
                    var __arg5 = __refParamPtr5;
                    fixed (double* __refParamPtr7 = &A)
                    {
                        var __arg7 = __refParamPtr7;
                        __Internal.Dsyr2(uplo, n, alpha, __arg3, incx, __arg5, incy, __arg7, lda);
                    }
                }
            }
        }

        public static void Cher2(sbyte uplo, int n, global::CUDA.Float2 alpha, global::CUDA.Float2 x, int incx, global::CUDA.Float2 y, int incy, global::CUDA.Float2 A, int lda)
        {
            var __arg2 = ReferenceEquals(alpha, null) ? new global::CUDA.Float2.__Internal() : *(global::CUDA.Float2.__Internal*) alpha.__Instance;
            var __arg3 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __arg5 = ReferenceEquals(y, null) ? global::System.IntPtr.Zero : y.__Instance;
            var __arg7 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            __Internal.Cher2(uplo, n, __arg2, __arg3, incx, __arg5, incy, __arg7, lda);
        }

        public static void Zher2(sbyte uplo, int n, global::CUDA.Double2 alpha, global::CUDA.Double2 x, int incx, global::CUDA.Double2 y, int incy, global::CUDA.Double2 A, int lda)
        {
            var __arg2 = ReferenceEquals(alpha, null) ? new global::CUDA.Double2.__Internal() : *(global::CUDA.Double2.__Internal*) alpha.__Instance;
            var __arg3 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __arg5 = ReferenceEquals(y, null) ? global::System.IntPtr.Zero : y.__Instance;
            var __arg7 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            __Internal.Zher2(uplo, n, __arg2, __arg3, incx, __arg5, incy, __arg7, lda);
        }

        public static void Sspr2(sbyte uplo, int n, float alpha, ref float x, int incx, ref float y, int incy, ref float AP)
        {
            fixed (float* __refParamPtr3 = &x)
            {
                var __arg3 = __refParamPtr3;
                fixed (float* __refParamPtr5 = &y)
                {
                    var __arg5 = __refParamPtr5;
                    fixed (float* __refParamPtr7 = &AP)
                    {
                        var __arg7 = __refParamPtr7;
                        __Internal.Sspr2(uplo, n, alpha, __arg3, incx, __arg5, incy, __arg7);
                    }
                }
            }
        }

        public static void Dspr2(sbyte uplo, int n, double alpha, ref double x, int incx, ref double y, int incy, ref double AP)
        {
            fixed (double* __refParamPtr3 = &x)
            {
                var __arg3 = __refParamPtr3;
                fixed (double* __refParamPtr5 = &y)
                {
                    var __arg5 = __refParamPtr5;
                    fixed (double* __refParamPtr7 = &AP)
                    {
                        var __arg7 = __refParamPtr7;
                        __Internal.Dspr2(uplo, n, alpha, __arg3, incx, __arg5, incy, __arg7);
                    }
                }
            }
        }

        public static void Chpr2(sbyte uplo, int n, global::CUDA.Float2 alpha, global::CUDA.Float2 x, int incx, global::CUDA.Float2 y, int incy, global::CUDA.Float2 AP)
        {
            var __arg2 = ReferenceEquals(alpha, null) ? new global::CUDA.Float2.__Internal() : *(global::CUDA.Float2.__Internal*) alpha.__Instance;
            var __arg3 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __arg5 = ReferenceEquals(y, null) ? global::System.IntPtr.Zero : y.__Instance;
            var __arg7 = ReferenceEquals(AP, null) ? global::System.IntPtr.Zero : AP.__Instance;
            __Internal.Chpr2(uplo, n, __arg2, __arg3, incx, __arg5, incy, __arg7);
        }

        public static void Zhpr2(sbyte uplo, int n, global::CUDA.Double2 alpha, global::CUDA.Double2 x, int incx, global::CUDA.Double2 y, int incy, global::CUDA.Double2 AP)
        {
            var __arg2 = ReferenceEquals(alpha, null) ? new global::CUDA.Double2.__Internal() : *(global::CUDA.Double2.__Internal*) alpha.__Instance;
            var __arg3 = ReferenceEquals(x, null) ? global::System.IntPtr.Zero : x.__Instance;
            var __arg5 = ReferenceEquals(y, null) ? global::System.IntPtr.Zero : y.__Instance;
            var __arg7 = ReferenceEquals(AP, null) ? global::System.IntPtr.Zero : AP.__Instance;
            __Internal.Zhpr2(uplo, n, __arg2, __arg3, incx, __arg5, incy, __arg7);
        }

        public static void Sgemm(sbyte transa, sbyte transb, int m, int n, int k, float alpha, ref float A, int lda, ref float B, int ldb, float beta, ref float C, int ldc)
        {
            fixed (float* __refParamPtr6 = &A)
            {
                var __arg6 = __refParamPtr6;
                fixed (float* __refParamPtr8 = &B)
                {
                    var __arg8 = __refParamPtr8;
                    fixed (float* __refParamPtr11 = &C)
                    {
                        var __arg11 = __refParamPtr11;
                        __Internal.Sgemm(transa, transb, m, n, k, alpha, __arg6, lda, __arg8, ldb, beta, __arg11, ldc);
                    }
                }
            }
        }

        public static void Dgemm(sbyte transa, sbyte transb, int m, int n, int k, double alpha, ref double A, int lda, ref double B, int ldb, double beta, ref double C, int ldc)
        {
            fixed (double* __refParamPtr6 = &A)
            {
                var __arg6 = __refParamPtr6;
                fixed (double* __refParamPtr8 = &B)
                {
                    var __arg8 = __refParamPtr8;
                    fixed (double* __refParamPtr11 = &C)
                    {
                        var __arg11 = __refParamPtr11;
                        __Internal.Dgemm(transa, transb, m, n, k, alpha, __arg6, lda, __arg8, ldb, beta, __arg11, ldc);
                    }
                }
            }
        }

        public static void Cgemm(sbyte transa, sbyte transb, int m, int n, int k, global::CUDA.Float2 alpha, global::CUDA.Float2 A, int lda, global::CUDA.Float2 B, int ldb, global::CUDA.Float2 beta, global::CUDA.Float2 C, int ldc)
        {
            var __arg5 = ReferenceEquals(alpha, null) ? new global::CUDA.Float2.__Internal() : *(global::CUDA.Float2.__Internal*) alpha.__Instance;
            var __arg6 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            var __arg8 = ReferenceEquals(B, null) ? global::System.IntPtr.Zero : B.__Instance;
            var __arg10 = ReferenceEquals(beta, null) ? new global::CUDA.Float2.__Internal() : *(global::CUDA.Float2.__Internal*) beta.__Instance;
            var __arg11 = ReferenceEquals(C, null) ? global::System.IntPtr.Zero : C.__Instance;
            __Internal.Cgemm(transa, transb, m, n, k, __arg5, __arg6, lda, __arg8, ldb, __arg10, __arg11, ldc);
        }

        public static void Zgemm(sbyte transa, sbyte transb, int m, int n, int k, global::CUDA.Double2 alpha, global::CUDA.Double2 A, int lda, global::CUDA.Double2 B, int ldb, global::CUDA.Double2 beta, global::CUDA.Double2 C, int ldc)
        {
            var __arg5 = ReferenceEquals(alpha, null) ? new global::CUDA.Double2.__Internal() : *(global::CUDA.Double2.__Internal*) alpha.__Instance;
            var __arg6 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            var __arg8 = ReferenceEquals(B, null) ? global::System.IntPtr.Zero : B.__Instance;
            var __arg10 = ReferenceEquals(beta, null) ? new global::CUDA.Double2.__Internal() : *(global::CUDA.Double2.__Internal*) beta.__Instance;
            var __arg11 = ReferenceEquals(C, null) ? global::System.IntPtr.Zero : C.__Instance;
            __Internal.Zgemm(transa, transb, m, n, k, __arg5, __arg6, lda, __arg8, ldb, __arg10, __arg11, ldc);
        }

        public static void Ssyrk(sbyte uplo, sbyte trans, int n, int k, float alpha, ref float A, int lda, float beta, ref float C, int ldc)
        {
            fixed (float* __refParamPtr5 = &A)
            {
                var __arg5 = __refParamPtr5;
                fixed (float* __refParamPtr8 = &C)
                {
                    var __arg8 = __refParamPtr8;
                    __Internal.Ssyrk(uplo, trans, n, k, alpha, __arg5, lda, beta, __arg8, ldc);
                }
            }
        }

        public static void Dsyrk(sbyte uplo, sbyte trans, int n, int k, double alpha, ref double A, int lda, double beta, ref double C, int ldc)
        {
            fixed (double* __refParamPtr5 = &A)
            {
                var __arg5 = __refParamPtr5;
                fixed (double* __refParamPtr8 = &C)
                {
                    var __arg8 = __refParamPtr8;
                    __Internal.Dsyrk(uplo, trans, n, k, alpha, __arg5, lda, beta, __arg8, ldc);
                }
            }
        }

        public static void Csyrk(sbyte uplo, sbyte trans, int n, int k, global::CUDA.Float2 alpha, global::CUDA.Float2 A, int lda, global::CUDA.Float2 beta, global::CUDA.Float2 C, int ldc)
        {
            var __arg4 = ReferenceEquals(alpha, null) ? new global::CUDA.Float2.__Internal() : *(global::CUDA.Float2.__Internal*) alpha.__Instance;
            var __arg5 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            var __arg7 = ReferenceEquals(beta, null) ? new global::CUDA.Float2.__Internal() : *(global::CUDA.Float2.__Internal*) beta.__Instance;
            var __arg8 = ReferenceEquals(C, null) ? global::System.IntPtr.Zero : C.__Instance;
            __Internal.Csyrk(uplo, trans, n, k, __arg4, __arg5, lda, __arg7, __arg8, ldc);
        }

        public static void Zsyrk(sbyte uplo, sbyte trans, int n, int k, global::CUDA.Double2 alpha, global::CUDA.Double2 A, int lda, global::CUDA.Double2 beta, global::CUDA.Double2 C, int ldc)
        {
            var __arg4 = ReferenceEquals(alpha, null) ? new global::CUDA.Double2.__Internal() : *(global::CUDA.Double2.__Internal*) alpha.__Instance;
            var __arg5 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            var __arg7 = ReferenceEquals(beta, null) ? new global::CUDA.Double2.__Internal() : *(global::CUDA.Double2.__Internal*) beta.__Instance;
            var __arg8 = ReferenceEquals(C, null) ? global::System.IntPtr.Zero : C.__Instance;
            __Internal.Zsyrk(uplo, trans, n, k, __arg4, __arg5, lda, __arg7, __arg8, ldc);
        }

        public static void Cherk(sbyte uplo, sbyte trans, int n, int k, float alpha, global::CUDA.Float2 A, int lda, float beta, global::CUDA.Float2 C, int ldc)
        {
            var __arg5 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            var __arg8 = ReferenceEquals(C, null) ? global::System.IntPtr.Zero : C.__Instance;
            __Internal.Cherk(uplo, trans, n, k, alpha, __arg5, lda, beta, __arg8, ldc);
        }

        public static void Zherk(sbyte uplo, sbyte trans, int n, int k, double alpha, global::CUDA.Double2 A, int lda, double beta, global::CUDA.Double2 C, int ldc)
        {
            var __arg5 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            var __arg8 = ReferenceEquals(C, null) ? global::System.IntPtr.Zero : C.__Instance;
            __Internal.Zherk(uplo, trans, n, k, alpha, __arg5, lda, beta, __arg8, ldc);
        }

        public static void Ssyr2k(sbyte uplo, sbyte trans, int n, int k, float alpha, ref float A, int lda, ref float B, int ldb, float beta, ref float C, int ldc)
        {
            fixed (float* __refParamPtr5 = &A)
            {
                var __arg5 = __refParamPtr5;
                fixed (float* __refParamPtr7 = &B)
                {
                    var __arg7 = __refParamPtr7;
                    fixed (float* __refParamPtr10 = &C)
                    {
                        var __arg10 = __refParamPtr10;
                        __Internal.Ssyr2k(uplo, trans, n, k, alpha, __arg5, lda, __arg7, ldb, beta, __arg10, ldc);
                    }
                }
            }
        }

        public static void Dsyr2k(sbyte uplo, sbyte trans, int n, int k, double alpha, ref double A, int lda, ref double B, int ldb, double beta, ref double C, int ldc)
        {
            fixed (double* __refParamPtr5 = &A)
            {
                var __arg5 = __refParamPtr5;
                fixed (double* __refParamPtr7 = &B)
                {
                    var __arg7 = __refParamPtr7;
                    fixed (double* __refParamPtr10 = &C)
                    {
                        var __arg10 = __refParamPtr10;
                        __Internal.Dsyr2k(uplo, trans, n, k, alpha, __arg5, lda, __arg7, ldb, beta, __arg10, ldc);
                    }
                }
            }
        }

        public static void Csyr2k(sbyte uplo, sbyte trans, int n, int k, global::CUDA.Float2 alpha, global::CUDA.Float2 A, int lda, global::CUDA.Float2 B, int ldb, global::CUDA.Float2 beta, global::CUDA.Float2 C, int ldc)
        {
            var __arg4 = ReferenceEquals(alpha, null) ? new global::CUDA.Float2.__Internal() : *(global::CUDA.Float2.__Internal*) alpha.__Instance;
            var __arg5 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            var __arg7 = ReferenceEquals(B, null) ? global::System.IntPtr.Zero : B.__Instance;
            var __arg9 = ReferenceEquals(beta, null) ? new global::CUDA.Float2.__Internal() : *(global::CUDA.Float2.__Internal*) beta.__Instance;
            var __arg10 = ReferenceEquals(C, null) ? global::System.IntPtr.Zero : C.__Instance;
            __Internal.Csyr2k(uplo, trans, n, k, __arg4, __arg5, lda, __arg7, ldb, __arg9, __arg10, ldc);
        }

        public static void Zsyr2k(sbyte uplo, sbyte trans, int n, int k, global::CUDA.Double2 alpha, global::CUDA.Double2 A, int lda, global::CUDA.Double2 B, int ldb, global::CUDA.Double2 beta, global::CUDA.Double2 C, int ldc)
        {
            var __arg4 = ReferenceEquals(alpha, null) ? new global::CUDA.Double2.__Internal() : *(global::CUDA.Double2.__Internal*) alpha.__Instance;
            var __arg5 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            var __arg7 = ReferenceEquals(B, null) ? global::System.IntPtr.Zero : B.__Instance;
            var __arg9 = ReferenceEquals(beta, null) ? new global::CUDA.Double2.__Internal() : *(global::CUDA.Double2.__Internal*) beta.__Instance;
            var __arg10 = ReferenceEquals(C, null) ? global::System.IntPtr.Zero : C.__Instance;
            __Internal.Zsyr2k(uplo, trans, n, k, __arg4, __arg5, lda, __arg7, ldb, __arg9, __arg10, ldc);
        }

        public static void Cher2k(sbyte uplo, sbyte trans, int n, int k, global::CUDA.Float2 alpha, global::CUDA.Float2 A, int lda, global::CUDA.Float2 B, int ldb, float beta, global::CUDA.Float2 C, int ldc)
        {
            var __arg4 = ReferenceEquals(alpha, null) ? new global::CUDA.Float2.__Internal() : *(global::CUDA.Float2.__Internal*) alpha.__Instance;
            var __arg5 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            var __arg7 = ReferenceEquals(B, null) ? global::System.IntPtr.Zero : B.__Instance;
            var __arg10 = ReferenceEquals(C, null) ? global::System.IntPtr.Zero : C.__Instance;
            __Internal.Cher2k(uplo, trans, n, k, __arg4, __arg5, lda, __arg7, ldb, beta, __arg10, ldc);
        }

        public static void Zher2k(sbyte uplo, sbyte trans, int n, int k, global::CUDA.Double2 alpha, global::CUDA.Double2 A, int lda, global::CUDA.Double2 B, int ldb, double beta, global::CUDA.Double2 C, int ldc)
        {
            var __arg4 = ReferenceEquals(alpha, null) ? new global::CUDA.Double2.__Internal() : *(global::CUDA.Double2.__Internal*) alpha.__Instance;
            var __arg5 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            var __arg7 = ReferenceEquals(B, null) ? global::System.IntPtr.Zero : B.__Instance;
            var __arg10 = ReferenceEquals(C, null) ? global::System.IntPtr.Zero : C.__Instance;
            __Internal.Zher2k(uplo, trans, n, k, __arg4, __arg5, lda, __arg7, ldb, beta, __arg10, ldc);
        }

        public static void Ssymm(sbyte side, sbyte uplo, int m, int n, float alpha, ref float A, int lda, ref float B, int ldb, float beta, ref float C, int ldc)
        {
            fixed (float* __refParamPtr5 = &A)
            {
                var __arg5 = __refParamPtr5;
                fixed (float* __refParamPtr7 = &B)
                {
                    var __arg7 = __refParamPtr7;
                    fixed (float* __refParamPtr10 = &C)
                    {
                        var __arg10 = __refParamPtr10;
                        __Internal.Ssymm(side, uplo, m, n, alpha, __arg5, lda, __arg7, ldb, beta, __arg10, ldc);
                    }
                }
            }
        }

        public static void Dsymm(sbyte side, sbyte uplo, int m, int n, double alpha, ref double A, int lda, ref double B, int ldb, double beta, ref double C, int ldc)
        {
            fixed (double* __refParamPtr5 = &A)
            {
                var __arg5 = __refParamPtr5;
                fixed (double* __refParamPtr7 = &B)
                {
                    var __arg7 = __refParamPtr7;
                    fixed (double* __refParamPtr10 = &C)
                    {
                        var __arg10 = __refParamPtr10;
                        __Internal.Dsymm(side, uplo, m, n, alpha, __arg5, lda, __arg7, ldb, beta, __arg10, ldc);
                    }
                }
            }
        }

        public static void Csymm(sbyte side, sbyte uplo, int m, int n, global::CUDA.Float2 alpha, global::CUDA.Float2 A, int lda, global::CUDA.Float2 B, int ldb, global::CUDA.Float2 beta, global::CUDA.Float2 C, int ldc)
        {
            var __arg4 = ReferenceEquals(alpha, null) ? new global::CUDA.Float2.__Internal() : *(global::CUDA.Float2.__Internal*) alpha.__Instance;
            var __arg5 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            var __arg7 = ReferenceEquals(B, null) ? global::System.IntPtr.Zero : B.__Instance;
            var __arg9 = ReferenceEquals(beta, null) ? new global::CUDA.Float2.__Internal() : *(global::CUDA.Float2.__Internal*) beta.__Instance;
            var __arg10 = ReferenceEquals(C, null) ? global::System.IntPtr.Zero : C.__Instance;
            __Internal.Csymm(side, uplo, m, n, __arg4, __arg5, lda, __arg7, ldb, __arg9, __arg10, ldc);
        }

        public static void Zsymm(sbyte side, sbyte uplo, int m, int n, global::CUDA.Double2 alpha, global::CUDA.Double2 A, int lda, global::CUDA.Double2 B, int ldb, global::CUDA.Double2 beta, global::CUDA.Double2 C, int ldc)
        {
            var __arg4 = ReferenceEquals(alpha, null) ? new global::CUDA.Double2.__Internal() : *(global::CUDA.Double2.__Internal*) alpha.__Instance;
            var __arg5 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            var __arg7 = ReferenceEquals(B, null) ? global::System.IntPtr.Zero : B.__Instance;
            var __arg9 = ReferenceEquals(beta, null) ? new global::CUDA.Double2.__Internal() : *(global::CUDA.Double2.__Internal*) beta.__Instance;
            var __arg10 = ReferenceEquals(C, null) ? global::System.IntPtr.Zero : C.__Instance;
            __Internal.Zsymm(side, uplo, m, n, __arg4, __arg5, lda, __arg7, ldb, __arg9, __arg10, ldc);
        }

        public static void Chemm(sbyte side, sbyte uplo, int m, int n, global::CUDA.Float2 alpha, global::CUDA.Float2 A, int lda, global::CUDA.Float2 B, int ldb, global::CUDA.Float2 beta, global::CUDA.Float2 C, int ldc)
        {
            var __arg4 = ReferenceEquals(alpha, null) ? new global::CUDA.Float2.__Internal() : *(global::CUDA.Float2.__Internal*) alpha.__Instance;
            var __arg5 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            var __arg7 = ReferenceEquals(B, null) ? global::System.IntPtr.Zero : B.__Instance;
            var __arg9 = ReferenceEquals(beta, null) ? new global::CUDA.Float2.__Internal() : *(global::CUDA.Float2.__Internal*) beta.__Instance;
            var __arg10 = ReferenceEquals(C, null) ? global::System.IntPtr.Zero : C.__Instance;
            __Internal.Chemm(side, uplo, m, n, __arg4, __arg5, lda, __arg7, ldb, __arg9, __arg10, ldc);
        }

        public static void Zhemm(sbyte side, sbyte uplo, int m, int n, global::CUDA.Double2 alpha, global::CUDA.Double2 A, int lda, global::CUDA.Double2 B, int ldb, global::CUDA.Double2 beta, global::CUDA.Double2 C, int ldc)
        {
            var __arg4 = ReferenceEquals(alpha, null) ? new global::CUDA.Double2.__Internal() : *(global::CUDA.Double2.__Internal*) alpha.__Instance;
            var __arg5 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            var __arg7 = ReferenceEquals(B, null) ? global::System.IntPtr.Zero : B.__Instance;
            var __arg9 = ReferenceEquals(beta, null) ? new global::CUDA.Double2.__Internal() : *(global::CUDA.Double2.__Internal*) beta.__Instance;
            var __arg10 = ReferenceEquals(C, null) ? global::System.IntPtr.Zero : C.__Instance;
            __Internal.Zhemm(side, uplo, m, n, __arg4, __arg5, lda, __arg7, ldb, __arg9, __arg10, ldc);
        }

        public static void Strsm(sbyte side, sbyte uplo, sbyte transa, sbyte diag, int m, int n, float alpha, ref float A, int lda, ref float B, int ldb)
        {
            fixed (float* __refParamPtr7 = &A)
            {
                var __arg7 = __refParamPtr7;
                fixed (float* __refParamPtr9 = &B)
                {
                    var __arg9 = __refParamPtr9;
                    __Internal.Strsm(side, uplo, transa, diag, m, n, alpha, __arg7, lda, __arg9, ldb);
                }
            }
        }

        public static void Dtrsm(sbyte side, sbyte uplo, sbyte transa, sbyte diag, int m, int n, double alpha, ref double A, int lda, ref double B, int ldb)
        {
            fixed (double* __refParamPtr7 = &A)
            {
                var __arg7 = __refParamPtr7;
                fixed (double* __refParamPtr9 = &B)
                {
                    var __arg9 = __refParamPtr9;
                    __Internal.Dtrsm(side, uplo, transa, diag, m, n, alpha, __arg7, lda, __arg9, ldb);
                }
            }
        }

        public static void Ctrsm(sbyte side, sbyte uplo, sbyte transa, sbyte diag, int m, int n, global::CUDA.Float2 alpha, global::CUDA.Float2 A, int lda, global::CUDA.Float2 B, int ldb)
        {
            var __arg6 = ReferenceEquals(alpha, null) ? new global::CUDA.Float2.__Internal() : *(global::CUDA.Float2.__Internal*) alpha.__Instance;
            var __arg7 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            var __arg9 = ReferenceEquals(B, null) ? global::System.IntPtr.Zero : B.__Instance;
            __Internal.Ctrsm(side, uplo, transa, diag, m, n, __arg6, __arg7, lda, __arg9, ldb);
        }

        public static void Ztrsm(sbyte side, sbyte uplo, sbyte transa, sbyte diag, int m, int n, global::CUDA.Double2 alpha, global::CUDA.Double2 A, int lda, global::CUDA.Double2 B, int ldb)
        {
            var __arg6 = ReferenceEquals(alpha, null) ? new global::CUDA.Double2.__Internal() : *(global::CUDA.Double2.__Internal*) alpha.__Instance;
            var __arg7 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            var __arg9 = ReferenceEquals(B, null) ? global::System.IntPtr.Zero : B.__Instance;
            __Internal.Ztrsm(side, uplo, transa, diag, m, n, __arg6, __arg7, lda, __arg9, ldb);
        }

        public static void Strmm(sbyte side, sbyte uplo, sbyte transa, sbyte diag, int m, int n, float alpha, ref float A, int lda, ref float B, int ldb)
        {
            fixed (float* __refParamPtr7 = &A)
            {
                var __arg7 = __refParamPtr7;
                fixed (float* __refParamPtr9 = &B)
                {
                    var __arg9 = __refParamPtr9;
                    __Internal.Strmm(side, uplo, transa, diag, m, n, alpha, __arg7, lda, __arg9, ldb);
                }
            }
        }

        public static void Dtrmm(sbyte side, sbyte uplo, sbyte transa, sbyte diag, int m, int n, double alpha, ref double A, int lda, ref double B, int ldb)
        {
            fixed (double* __refParamPtr7 = &A)
            {
                var __arg7 = __refParamPtr7;
                fixed (double* __refParamPtr9 = &B)
                {
                    var __arg9 = __refParamPtr9;
                    __Internal.Dtrmm(side, uplo, transa, diag, m, n, alpha, __arg7, lda, __arg9, ldb);
                }
            }
        }

        public static void Ctrmm(sbyte side, sbyte uplo, sbyte transa, sbyte diag, int m, int n, global::CUDA.Float2 alpha, global::CUDA.Float2 A, int lda, global::CUDA.Float2 B, int ldb)
        {
            var __arg6 = ReferenceEquals(alpha, null) ? new global::CUDA.Float2.__Internal() : *(global::CUDA.Float2.__Internal*) alpha.__Instance;
            var __arg7 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            var __arg9 = ReferenceEquals(B, null) ? global::System.IntPtr.Zero : B.__Instance;
            __Internal.Ctrmm(side, uplo, transa, diag, m, n, __arg6, __arg7, lda, __arg9, ldb);
        }

        public static void Ztrmm(sbyte side, sbyte uplo, sbyte transa, sbyte diag, int m, int n, global::CUDA.Double2 alpha, global::CUDA.Double2 A, int lda, global::CUDA.Double2 B, int ldb)
        {
            var __arg6 = ReferenceEquals(alpha, null) ? new global::CUDA.Double2.__Internal() : *(global::CUDA.Double2.__Internal*) alpha.__Instance;
            var __arg7 = ReferenceEquals(A, null) ? global::System.IntPtr.Zero : A.__Instance;
            var __arg9 = ReferenceEquals(B, null) ? global::System.IntPtr.Zero : B.__Instance;
            __Internal.Ztrmm(side, uplo, transa, diag, m, n, __arg6, __arg7, lda, __arg9, ldb);
        }
    }

    
}
